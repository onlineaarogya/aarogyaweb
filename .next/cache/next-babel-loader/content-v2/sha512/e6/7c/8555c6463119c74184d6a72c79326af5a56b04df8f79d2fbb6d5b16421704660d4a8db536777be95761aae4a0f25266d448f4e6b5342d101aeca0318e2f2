{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Expo/components/Gallery/Gallery.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(() => ({\n  image: {\n    objectFit: 'cover'\n  }\n}));\n\nconst Gallery = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), __jsx(GridList, {\n    cellHeight: isMd ? 300 : 100,\n    cols: 4,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(GridListTile, {\n    key: index,\n    cols: item.cols || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(Image, _extends({}, item.image, {\n    alt: item.title,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nGallery.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Gallery;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Expo/components/Gallery/Gallery.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","GridList","GridListTile","Image","useStyles","image","objectFit","Gallery","props","data","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","map","item","index","cols","title","width","height","propTypes","string","array","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,YAAlC,QAAsD,mBAAtD;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;AAClCO,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAD2B,CAAP,CAAD,CAA5B;;AAMA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAMS,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,IAAI,GAAGd,aAAa,CAACa,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDC,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,SACE;AAAK,IAAA,SAAS,EAAEP;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEG,IAAI,GAAG,GAAH,GAAS,GAAnC;AAAwC,IAAA,IAAI,EAAE,CAA9C;AAAiD,IAAA,OAAO,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACS,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACR,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,KAAnB;AAA0B,IAAA,IAAI,EAAED,IAAI,CAACE,IAAL,IAAa,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,eACMF,IAAI,CAACd,KADX;AAEE,IAAA,GAAG,EAAEc,IAAI,CAACG,KAFZ;AAGE,IAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAHb;AAIE,IAAA,SAAS,EAAEZ,OAAO,CAACP,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,CADH,CADF,CADF;AAgBD,CAzBD;;AA2BAE,OAAO,CAACkB,SAAR,GAAoB;AAClB;AACF;AACA;AACEf,EAAAA,SAAS,EAAEb,SAAS,CAAC6B,MAJH;;AAKlB;AACF;AACA;AACEjB,EAAAA,IAAI,EAAEZ,SAAS,CAAC8B,KAAV,CAAgBC;AARJ,CAApB;AAWA,eAAerB,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\n\nimport { Image } from 'components/atoms';\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    objectFit: 'cover',\n  },\n}));\n\nconst Gallery = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <GridList cellHeight={isMd ? 300 : 100} cols={4} spacing={0}>\n        {data.map((item, index) => (\n          <GridListTile key={index} cols={item.cols || 1}>\n            <Image\n              {...item.image}\n              alt={item.title}\n              lazyProps={{ width: '100%', height: '100%' }}\n              className={classes.image}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}