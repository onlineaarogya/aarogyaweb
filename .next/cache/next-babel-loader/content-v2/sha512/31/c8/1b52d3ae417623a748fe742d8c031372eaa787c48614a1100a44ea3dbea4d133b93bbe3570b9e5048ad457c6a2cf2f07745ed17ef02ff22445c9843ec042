{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Divider, LinearProgress, MenuItem, FormControlLabel, Checkbox, FormGroup, IconButton, Avatar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker, KeyboardDatePicker, DateTimePicker } from '@material-ui/pickers';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Medical from './medical';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%' // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  profileImage: {\n    display: 'flex !important',\n    justifyContent: 'center !important'\n  }\n})); // code for Tabs\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst General = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // code for tabs and\n\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  const {\n    0: imgPreview,\n    1: setImgPreview\n  } = useState('');\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"\",\n    className: classes.tabHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(Tab, _extends({\n    label: \"Profile\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Medial\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Family Members\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Family Doctor\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })))), __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: '',\n      first_name: '',\n      last_name: '',\n      dob: new Date(),\n      age: '',\n      height: '',\n      weight: '',\n      blood_group: '',\n      email: '',\n      state: '',\n      district: '',\n      city: '',\n      pinCode: '',\n      // mobile: editData.mobile,\n      address: '' // password: editData.password\n\n    },\n    validationSchema: Yup.object().shape({\n      title: Yup.string().max(255).required('Title is required'),\n      designation: Yup.string().max(255).required('Designation is required'),\n      department: Yup.string().max(255) //   .required('Department is required'),\n      // mobile: Yup.string()\n      //   .max(10)\n      .required('Mobile Number is required'),\n      address: Yup.string().max(255),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required') // password: Yup.string()\n      //   .max(255)\n      //   .required('Password is required')\n\n    }),\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      // POST request using fetch inside\n      // var newData = Object.assign(values, {\n      //   id: editData._id,\n      //   action: 'update'\n      // });\n      console.log(JSON.stringify(values, null, 2)); // const res = await getEmployeeAction(\n      //   JSON.stringify(newData, null, 2)\n      // );\n\n      if (res.success) {\n        // setSnackValue(res.message);\n        // setSnackStatus('success');\n        // handleClick();\n        setSubmitting(false); // setTimeout(() => {\n        //   navigate('/app/view-employee', { replace: true });\n        // }, 3000);\n      } else {// console.log(res.message);\n          // setSnackValue(res.message);\n          // setSnackStatus('error');\n          // handleClick();\n          // setSubmitting(false);\n        } // console.log(res);\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    touched,\n    values,\n    resetForm\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: \"mobileContainer\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"profile_image\",\n    type: \"file\",\n    onChange: event => {\n      setFieldValue('file', event.currentTarget.files[0]);\n      document.getElementById('output').src = window.URL.createObjectURL(event.currentTarget.files[0]);\n      setImgPreview(window.URL.createObjectURL(event.currentTarget.files[0]));\n    },\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"profile_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, __jsx(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 27\n    }\n  }, __jsx(Avatar, {\n    className: classes.large,\n    id: \"output\",\n    src: imgPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }))))), __jsx(Grid, {\n    item: true,\n    md: 2,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"select\",\n    error: Boolean(touched.title && errors.title),\n    fullWidth: true,\n    helperText: touched.title && errors.title,\n    label: \"Title *\",\n    name: \"title\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.title,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"Dr.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"Dr.\"), __jsx(MenuItem, {\n    value: \"Mr.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, \"Mr.\"))), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.first_name && errors.first_name),\n    fullWidth: true,\n    helperText: touched.first_name && errors.first_name,\n    label: \"First Name *\" // margin=\"normal\"\n    ,\n    name: \"first_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.first_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.last_name && errors.last_name),\n    fullWidth: true,\n    helperText: touched.last_name && errors.last_name,\n    label: \"Last Name *\",\n    name: \"last_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.last_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, __jsx(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 36\n      }\n    }),\n    label: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 36\n      }\n    }),\n    label: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 36\n      }\n    }),\n    label: \"Others\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    error: Boolean(touched.dob && errors.dob),\n    fullWidth: true,\n    helperText: touched.dob && errors.dob,\n    label: \"Date of Birth\",\n    name: \"dob\",\n    format: \"dd/MM/yyyy\",\n    onBlur: handleBlur,\n    onChange: value => setFieldValue('dob', value),\n    value: values.dob,\n    inputVariant: \"outlined\",\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.age && errors.age),\n    fullWidth: true,\n    helperText: touched.age && errors.age,\n    label: \"Age *\",\n    name: \"age\",\n    type: \"number\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.age,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"blood_group\",\n    error: Boolean(touched.blood_group && errors.blood_group),\n    fullWidth: true,\n    helperText: touched.blood_group && errors.blood_group,\n    label: \"Blood Group *\",\n    name: \"blood_group\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.blood_group,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"O negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, \"O negative\"), __jsx(MenuItem, {\n    value: \"O positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, \"O positive\"), __jsx(MenuItem, {\n    value: \"B negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, \"B negative\"))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.height && errors.height),\n    fullWidth: true,\n    helperText: touched.height && errors.height,\n    label: \"Height(Ft) *\" // margin=\"normal\"\n    ,\n    name: \"height\",\n    type: \"number\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.height,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.weight && errors.weight),\n    fullWidth: true,\n    helperText: touched.weight && errors.weight,\n    label: \"Weight(Kg) *\" // margin=\"normal\"\n    ,\n    name: \"weight\",\n    type: \"number\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.weight,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.address && errors.address),\n    fullWidth: true,\n    helperText: touched.address && errors.address,\n    label: \"Address\" // margin=\"normal\"\n    ,\n    name: \"address\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.address,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"state\",\n    error: Boolean(touched.state && errors.state),\n    fullWidth: true,\n    helperText: touched.state && errors.state,\n    label: \"State *\",\n    name: \"state\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.state,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"O negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }, \"O negative\"), __jsx(MenuItem, {\n    value: \"O positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, \"O positive\"), __jsx(MenuItem, {\n    value: \"B negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, \"B negative\"))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"district\",\n    error: Boolean(touched.district && errors.district),\n    fullWidth: true,\n    helperText: touched.district && errors.district,\n    label: \"District *\",\n    name: \"district\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.district,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"O negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }, \"O negative\"), __jsx(MenuItem, {\n    value: \"O positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }, \"O positive\"), __jsx(MenuItem, {\n    value: \"B negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, \"B negative\"))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"city\",\n    error: Boolean(touched.city && errors.city),\n    fullWidth: true,\n    helperText: touched.city && errors.city,\n    label: \"City *\",\n    name: \"city\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.city,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"O negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 25\n    }\n  }, \"O negative\"), __jsx(MenuItem, {\n    value: \"O positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 25\n    }\n  }, \"O positive\"), __jsx(MenuItem, {\n    value: \"B negative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 25\n    }\n  }, \"B negative\"))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.pinCode && errors.pinCode),\n    fullWidth: true,\n    helperText: touched.pinCode && errors.pinCode,\n    label: \"pinCode(Kg) *\" // margin=\"normal\"\n    ,\n    name: \"pinCode\",\n    type: \"number\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.pinCode,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 23\n    }\n  })), __jsx(Box, {\n    my: 2,\n    ml: 1.4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 23\n    }\n  }, \"Save Profile\"), isSubmitting && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 40\n    }\n  }))))))), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 9\n    }\n  }, __jsx(Medical, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 11\n    }\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }\n  }, \"Item Three\"), __jsx(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 9\n    }\n  }, \"Item four\")));\n};\n\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default General;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js"],"names":["React","useState","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","Button","Divider","LinearProgress","MenuItem","FormControlLabel","Checkbox","FormGroup","IconButton","Avatar","PropTypes","AppBar","Tabs","Tab","Box","Yup","Formik","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDateTimePicker","KeyboardDatePicker","DateTimePicker","PhotoCamera","Medical","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","root","flexGrow","width","tabHeader","boxShadow","backgroundColor","palette","background","white","large","height","profileImage","display","justifyContent","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","General","className","rest","classes","isMd","breakpoints","up","defaultMatches","setValue","handleChange","event","newValue","imgPreview","setImgPreview","title","first_name","last_name","dob","Date","age","weight","blood_group","email","state","district","city","pinCode","address","object","shape","string","max","required","designation","department","values","setSubmitting","console","log","JSON","stringify","res","success","errors","handleBlur","handleSubmit","isSubmitting","setFieldValue","touched","resetForm","input","currentTarget","files","document","getElementById","src","window","URL","createObjectURL","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n  LinearProgress,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n  IconButton,\n  Avatar,\n} from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n  DateTimePicker,\n} from '@material-ui/pickers';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Medical from './medical';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white,\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  profileImage: {\n    display: 'flex !important',\n    justifyContent: 'center !important',\n  },\n}));\n\n// code for Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst General = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  // code for tabs and\n  const [value, setValue] = React.useState(0);\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  const [imgPreview, setImgPreview] = useState('');\n\n  return (\n    <div className={className} {...rest}>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"\" className={classes.tabHeader}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n          >\n            <Tab label=\"Profile\" {...a11yProps(0)} />\n            <Tab label=\"Medial\" {...a11yProps(1)} />\n            <Tab label=\"Family Members\" {...a11yProps(2)} />\n            <Tab label=\"Family Doctor\" {...a11yProps(3)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Grid container spacing={isMd ? 4 : 2}>\n            {/* <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"textPrimary\">\n                Basic Information for Profile\n              </Typography>\n            </Grid>\n            <br></br>\n            <br></br> */}\n            <Formik\n              initialValues={{\n                title: '',\n                first_name: '',\n                last_name: '',\n                dob: new Date(),\n                age: '',\n                height: '',\n                weight: '',\n                blood_group: '',\n                email: '',\n                state: '',\n                district: '',\n                city: '',\n                pinCode: '',\n                // mobile: editData.mobile,\n                address: '',\n                // password: editData.password\n              }}\n              validationSchema={Yup.object().shape({\n                title: Yup.string()\n                  .max(255)\n                  .required('Title is required'),\n                designation: Yup.string()\n                  .max(255)\n                  .required('Designation is required'),\n                department: Yup.string()\n                  .max(255)\n                  //   .required('Department is required'),\n                  // mobile: Yup.string()\n                  //   .max(10)\n                  .required('Mobile Number is required'),\n                address: Yup.string().max(255),\n\n                email: Yup.string()\n                  .email('Must be a valid email')\n                  .max(255)\n                  .required('Email is required'),\n                // password: Yup.string()\n                //   .max(255)\n                //   .required('Password is required')\n              })}\n              onSubmit={async (values, { setSubmitting }) => {\n                // POST request using fetch inside\n                // var newData = Object.assign(values, {\n                //   id: editData._id,\n                //   action: 'update'\n                // });\n\n                console.log(JSON.stringify(values, null, 2));\n                // const res = await getEmployeeAction(\n                //   JSON.stringify(newData, null, 2)\n                // );\n                if (res.success) {\n                  // setSnackValue(res.message);\n                  // setSnackStatus('success');\n                  // handleClick();\n                  setSubmitting(false);\n                  // setTimeout(() => {\n                  //   navigate('/app/view-employee', { replace: true });\n                  // }, 3000);\n                } else {\n                  // console.log(res.message);\n                  // setSnackValue(res.message);\n                  // setSnackStatus('error');\n                  // handleClick();\n                  // setSubmitting(false);\n                }\n                // console.log(res);\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                setFieldValue,\n                touched,\n                values,\n                resetForm,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  {/* our custom form */}\n                  <Grid container className=\"mobileContainer\" spacing={3}>\n                    <Grid item md={12} xs={12}>\n                      <div className={classes.profileImage}>\n                        <input\n                          accept=\"image/*\"\n                          className={classes.input}\n                          id=\"profile_image\"\n                          type=\"file\"\n                          onChange={event => {\n                            setFieldValue('file', event.currentTarget.files[0]);\n                            document.getElementById(\n                              'output',\n                            ).src = window.URL.createObjectURL(\n                              event.currentTarget.files[0],\n                            );\n\n                            setImgPreview(\n                              window.URL.createObjectURL(\n                                event.currentTarget.files[0],\n                              ),\n                            );\n                          }}\n                          hidden\n                        />\n                        <label htmlFor=\"profile_image\">\n                          <IconButton\n                            color=\"primary\"\n                            aria-label=\"upload picture\"\n                            component=\"span\"\n                          >\n                            {/* <PhotoCamera /> */}\n                            <Avatar\n                              className={classes.large}\n                              id=\"output\"\n                              src={imgPreview}\n                            />\n                          </IconButton>\n                        </label>\n                      </div>\n                    </Grid>\n                    <Grid item md={2} xs={12}>\n                      <TextField\n                        id=\"select\"\n                        error={Boolean(touched.title && errors.title)}\n                        fullWidth\n                        helperText={touched.title && errors.title}\n                        label=\"Title *\"\n                        name=\"title\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.title}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"Dr.\">Dr.</MenuItem>\n                        <MenuItem value=\"Mr.\">Mr.</MenuItem>\n                      </TextField>\n                    </Grid>\n                    <Grid item md={5} xs={12}>\n                      <TextField\n                        error={Boolean(touched.first_name && errors.first_name)}\n                        fullWidth\n                        helperText={touched.first_name && errors.first_name}\n                        label=\"First Name *\"\n                        // margin=\"normal\"\n                        name=\"first_name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.first_name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item md={5} xs={12}>\n                      <TextField\n                        error={Boolean(touched.last_name && errors.last_name)}\n                        fullWidth\n                        helperText={touched.last_name && errors.last_name}\n                        label=\"Last Name *\"\n                        name=\"last_name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.last_name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup row>\n                        <FormControlLabel\n                          control={<Checkbox color=\"primary\" />}\n                          label=\"Male\"\n                        />\n\n                        <FormControlLabel\n                          control={<Checkbox color=\"primary\" />}\n                          label=\"Female\"\n                        />\n                        <FormControlLabel\n                          control={<Checkbox color=\"primary\" />}\n                          label=\"Others\"\n                        />\n                      </FormGroup>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          disableToolbar\n                          error={Boolean(touched.dob && errors.dob)}\n                          fullWidth\n                          helperText={touched.dob && errors.dob}\n                          label=\"Date of Birth\"\n                          name=\"dob\"\n                          format=\"dd/MM/yyyy\"\n                          onBlur={handleBlur}\n                          onChange={value => setFieldValue('dob', value)}\n                          value={values.dob}\n                          inputVariant=\"outlined\"\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.age && errors.age)}\n                        fullWidth\n                        helperText={touched.age && errors.age}\n                        label=\"Age *\"\n                        name=\"age\"\n                        type=\"number\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.age}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"blood_group\"\n                        error={Boolean(\n                          touched.blood_group && errors.blood_group,\n                        )}\n                        fullWidth\n                        helperText={touched.blood_group && errors.blood_group}\n                        label=\"Blood Group *\"\n                        name=\"blood_group\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.blood_group}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"O negative\">O negative</MenuItem>\n                        <MenuItem value=\"O positive\">O positive</MenuItem>\n                        <MenuItem value=\"B negative\">B negative</MenuItem>\n                      </TextField>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.height && errors.height)}\n                        fullWidth\n                        helperText={touched.height && errors.height}\n                        label=\"Height(Ft) *\"\n                        // margin=\"normal\"\n                        name=\"height\"\n                        type=\"number\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.height}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.weight && errors.weight)}\n                        fullWidth\n                        helperText={touched.weight && errors.weight}\n                        label=\"Weight(Kg) *\"\n                        // margin=\"normal\"\n                        name=\"weight\"\n                        type=\"number\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.weight}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Divider />\n                    </Grid>\n\n                    <Grid item md={12} xs={12}>\n                      <TextField\n                        error={Boolean(touched.address && errors.address)}\n                        fullWidth\n                        helperText={touched.address && errors.address}\n                        label=\"Address\"\n                        // margin=\"normal\"\n                        name=\"address\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.address}\n                        variant=\"outlined\"\n                        multiline\n                        rows={4}\n                      />\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"state\"\n                        error={Boolean(touched.state && errors.state)}\n                        fullWidth\n                        helperText={touched.state && errors.state}\n                        label=\"State *\"\n                        name=\"state\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.state}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"O negative\">O negative</MenuItem>\n                        <MenuItem value=\"O positive\">O positive</MenuItem>\n                        <MenuItem value=\"B negative\">B negative</MenuItem>\n                      </TextField>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"district\"\n                        error={Boolean(touched.district && errors.district)}\n                        fullWidth\n                        helperText={touched.district && errors.district}\n                        label=\"District *\"\n                        name=\"district\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.district}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"O negative\">O negative</MenuItem>\n                        <MenuItem value=\"O positive\">O positive</MenuItem>\n                        <MenuItem value=\"B negative\">B negative</MenuItem>\n                      </TextField>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"city\"\n                        error={Boolean(touched.city && errors.city)}\n                        fullWidth\n                        helperText={touched.city && errors.city}\n                        label=\"City *\"\n                        name=\"city\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.city}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"O negative\">O negative</MenuItem>\n                        <MenuItem value=\"O positive\">O positive</MenuItem>\n                        <MenuItem value=\"B negative\">B negative</MenuItem>\n                      </TextField>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.pinCode && errors.pinCode)}\n                        fullWidth\n                        helperText={touched.pinCode && errors.pinCode}\n                        label=\"pinCode(Kg) *\"\n                        // margin=\"normal\"\n                        name=\"pinCode\"\n                        type=\"number\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.pinCode}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Box my={2} ml={1.4}>\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        Save Profile\n                      </Button>\n                      {isSubmitting && <LinearProgress />}\n                    </Box>\n                  </Grid>\n                  {/* Custom form end */}\n                </form>\n              )}\n            </Formik>\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Medical />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          Item Three\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          Item four\n        </TabPanel>\n      </div>\n    </div>\n  );\n};\n\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default General;\n"]},"metadata":{},"sourceType":"module"}