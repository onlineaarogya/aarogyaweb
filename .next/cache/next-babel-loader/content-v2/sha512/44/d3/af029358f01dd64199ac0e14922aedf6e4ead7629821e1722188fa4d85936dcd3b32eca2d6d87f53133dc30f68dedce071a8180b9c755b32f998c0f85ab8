{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* Author: Paveen singh */\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Box, Divider } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  cardBase: {\n    boxShadow: 'none',\n    background: theme.palette.alternate.main,\n    borderRadius: theme.spacing(1),\n    '& .card-base__content': {\n      padding: theme.spacing(1),\n      [theme.breakpoints.up('sm')]: {\n        padding: theme.spacing(3)\n      }\n    }\n  },\n  avatar: {\n    width: 110,\n    height: 110,\n    border: `4px solid ${theme.palette.alternate.dark}`,\n    borderRadius: '100%',\n    boxShadow: '0 5px 10px 0 rgba(0, 0, 0, 0.1)'\n  },\n  listItem: {\n    padding: 0,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    }\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginRight: 0,\n      marginBottom: theme.spacing(2)\n    }\n  },\n  listItemText: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    margin: 0,\n    height: '100%'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  table: {\n    minWidth: 650\n  },\n  new: {\n    height: '200px',\n    width: '200px',\n    border: '1px solid',\n    background: '#ccc',\n    type: 'dark'\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nconst Team = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Divider, null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 1\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 4,\n    key: index,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(CardBase, {\n    className: classes.cardBase,\n    liftUp: true\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    className: classes.listItem\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar\n  }, __jsx(Avatar, _extends({}, item.authorPhoto, {\n    className: classes.avatar\n  }))), __jsx(ListItemText, {\n    className: classes.listItemText,\n    primary: item.authorName,\n    secondary: item.title,\n    primaryTypographyProps: {\n      className: classes.title,\n      variant: 'h6',\n      align: isMd ? 'left' : 'center'\n    },\n    secondaryTypographyProps: {\n      color: 'textPrimary',\n      align: isMd ? 'left' : 'center'\n    }\n  })))))));\n};\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}