{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/no-multi-comp */\n\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Accordion as MuiAccordion, AccordionSummary as MuiAccordionSummary, AccordionDetails as MuiAccordionDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { LearnMoreLink } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n    color: theme.palette.primary.dark\n  },\n  listItem: {\n    cursor: 'pointer'\n  }\n}));\n/**\n * Component to display accordion view\n *\n * @param {*} props\n */\n\nconst Accordion = props => {\n  const {\n    items,\n    className,\n    titleProps,\n    subtitleProps,\n    textProps,\n    linkProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"items\", \"className\", \"titleProps\", \"subtitleProps\", \"textProps\", \"linkProps\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({}, rest, {\n    className: clsx('accordion', classes.root, className)\n  }), items.map(item => __jsx(MuiAccordion, {\n    className: clsx('accordion__item-wrapper', classes.listItem),\n    key: item.id\n  }, __jsx(MuiAccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": `${item.id}-content`,\n    id: item.id\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: \"accorion__item-text-container\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accorion__item-title-container\"\n  }, __jsx(Typography, _extends({\n    variant: \"h6\",\n    color: \"textPrimary\",\n    className: \"accorion_item-title\"\n  }, titleProps), item.title)), item.subtitle && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accorion_item-subtitle-container\"\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: \"accorion_item-subtitle\"\n  }, subtitleProps), item.subtitle)))), __jsx(MuiAccordionDetails, null, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"accordion__collapsable-text-container\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accordion__collapsable-text-wrapper\"\n  }, __jsx(Typography, _extends({\n    variant: \"body1\",\n    color: \"textPrimary\",\n    className: \"accordion__collapsable-text\"\n  }, textProps), item.text)), item.link && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accordion__collapsable-link-wrapper\"\n  }, __jsx(LearnMoreLink, _extends({\n    title: item.link,\n    variant: \"body1\",\n    className: \"accordion__collapsable-link\"\n  }, linkProps))))))));\n};\n\nAccordion.defaultProps = {\n  titleProps: {},\n  subtitleProps: {},\n  textProps: {},\n  linkProps: {}\n};\nexport default Accordion;","map":null,"metadata":{},"sourceType":"module"}