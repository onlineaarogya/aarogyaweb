{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/views/SigninCover/components/Form/Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\nimport validate, { async } from 'validate.js';\nimport { LearnMoreLink } from 'components/atoms';\nimport Link from 'next/link';\nimport { getPatientLogin } from '../../../../components/helper/PatientApi';\nimport AlertMassage from '../../../../components/helper/AlertMessage';\nimport Router from 'next/router';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst schema = {\n  mobile: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 10,\n      message: \"must be 10 digit\"\n    }\n  } // password: {\n  //   presence: { allowEmpty: false, message: 'is required' },\n  //   length: {\n  //     minimum: 8,\n  //   },\n  // },\n\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [subming, setSubiting] = React.useState(false);\n  const [status, setStatusBase] = React.useState('');\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      var data = JSON.stringify({\n        \"mobile\": formState.values.mobile\n      });\n      const res = await getPatientLogin(data);\n\n      if (res.success) {\n        setStatusBase('');\n        setStatusBase({\n          key: 22,\n          status: 'success',\n          msg: 'Check your mobile for the OTP'\n        });\n        Router.push('/signin-otp', undefined, {\n          shallow: true\n        });\n      } else {\n        setStatusBase('');\n        setStatusBase({\n          key: 22,\n          status: 'error',\n          msg: res.message\n        });\n      }\n\n      console.log('res', res);\n      setSubiting(false);\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, status ? __jsx(AlertMassage, {\n    key: status.key,\n    message: status.msg,\n    status: status.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }) : null, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Mobile\",\n    label: \"Mobile *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"mobile\",\n    fullWidth: true,\n    helperText: hasError('mobile') ? formState.errors.mobile[0] : null,\n    error: hasError('mobile'),\n    onChange: handleChange,\n    type: \"number\",\n    value: formState.values.mobile || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Fields that are marked with * sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Sign in\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\", ' ', __jsx(Link, {\n    href: \"/password-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Reset password\" // href=\"/password-reset-cover\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/views/SigninCover/components/Form/Form.js"],"names":["React","makeStyles","Typography","Grid","Button","TextField","validate","async","LearnMoreLink","Link","getPatientLogin","AlertMassage","Router","useStyles","theme","root","width","schema","mobile","presence","allowEmpty","message","length","maximum","Form","classes","formState","setFormState","useState","isValid","values","touched","errors","subming","setSubiting","status","setStatusBase","useEffect","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","data","JSON","stringify","res","success","key","msg","push","undefined","shallow","console","log","hasError","field"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\nimport validate, { async } from 'validate.js';\nimport { LearnMoreLink } from 'components/atoms';\nimport Link from 'next/link';\nimport { getPatientLogin } from '../../../../components/helper/PatientApi';\nimport AlertMassage from '../../../../components/helper/AlertMessage';\nimport Router from 'next/router'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst schema = {\n  mobile: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 10,\n      message: \"must be 10 digit\"\n    },\n  },\n  // password: {\n  //   presence: { allowEmpty: false, message: 'is required' },\n  //   length: {\n  //     minimum: 8,\n  //   },\n  // },\n};\n\nconst Form = () => {\n  const classes = useStyles();\n\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n\n  const [subming, setSubiting] = React.useState(false);\n  const [status, setStatusBase] = React.useState('');\n\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      var data = JSON.stringify({\"mobile\":formState.values.mobile});\n     \n      const res = await getPatientLogin(data);\n      if(res.success){\n       setStatusBase('')\n      setStatusBase({\n       key: 22,\n       status: 'success',\n       msg:\n         'Check your mobile for the OTP',\n     });\n     Router.push('/signin-otp', undefined, { shallow: true })\n     \n   }else{\n     setStatusBase('');\n     setStatusBase({\n       key: 22,\n       status: 'error',\n       msg:res.message,\n     });           \n\n   }\n   console.log('res', res);\n   setSubiting(false);\n    }\n\n    setFormState(formState => ({\n      ...formState,\n      touched: {\n        ...formState.touched,\n        ...formState.errors,\n      },\n    }));\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n    {status ? (\n      <AlertMassage\n        key={status.key}\n        message={status.msg}\n        status={status.status}\n      />\n    ) : null}\n      <form name=\"password-reset-form\" method=\"post\" onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              placeholder=\"Mobile\"\n              label=\"Mobile *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"mobile\"\n              fullWidth\n              helperText={\n                hasError('mobile') ? formState.errors.mobile[0] : null\n              }\n              error={hasError('mobile')}\n              onChange={handleChange}\n              type=\"number\"\n              value={formState.values.mobile || ''}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <i>\n              <Typography variant=\"subtitle2\">\n                Fields that are marked with * sign are required.\n              </Typography>\n            </i>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n              color=\"primary\"\n              fullWidth\n            >\n              Sign in\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              color=\"textSecondary\"\n              align=\"center\"\n            >\n              Forgot your password?{' '}\n              <Link href=\"/password-reset\">\n                <a>\n                  <LearnMoreLink\n                    title=\"Reset password\"\n                    // href=\"/password-reset-cover\"\n                  />\n                </a>\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}