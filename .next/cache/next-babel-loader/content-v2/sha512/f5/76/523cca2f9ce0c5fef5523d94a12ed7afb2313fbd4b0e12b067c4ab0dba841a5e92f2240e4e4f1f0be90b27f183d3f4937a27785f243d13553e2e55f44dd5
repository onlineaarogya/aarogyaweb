{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/Accordion/Accordion.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/no-multi-comp */\n\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Accordion as MuiAccordion, AccordionSummary as MuiAccordionSummary, AccordionDetails as MuiAccordionDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { LearnMoreLink } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n    color: theme.palette.primary.dark\n  },\n  listItem: {\n    cursor: 'pointer'\n  }\n}));\n/**\n * Component to display accordion view\n *\n * @param {*} props\n */\n\nconst Accordion = props => {\n  const {\n    items,\n    className,\n    titleProps,\n    subtitleProps,\n    textProps,\n    linkProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"items\", \"className\", \"titleProps\", \"subtitleProps\", \"textProps\", \"linkProps\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({}, rest, {\n    className: clsx('accordion', classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), items.map(item => __jsx(MuiAccordion, {\n    className: clsx('accordion__item-wrapper', classes.listItem),\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(MuiAccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }),\n    \"aria-controls\": `${item.id}-content`,\n    id: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: \"accorion__item-text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accorion__item-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"h6\",\n    color: \"textPrimary\",\n    className: \"accorion_item-title\"\n  }, titleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), item.title)), item.subtitle && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accorion_item-subtitle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: \"accorion_item-subtitle\"\n  }, subtitleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }), item.subtitle)))), __jsx(MuiAccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"accordion__collapsable-text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accordion__collapsable-text-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"body1\",\n    color: \"textPrimary\",\n    className: \"accordion__collapsable-text\"\n  }, textProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), item.text)), item.link && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"accordion__collapsable-link-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(LearnMoreLink, _extends({\n    title: item.link,\n    variant: \"body1\",\n    className: \"accordion__collapsable-link\"\n  }, linkProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nAccordion.defaultProps = {\n  titleProps: {},\n  subtitleProps: {},\n  textProps: {},\n  linkProps: {}\n};\nAccordion.propTypes = {\n  /**\n   * Classname from the parent component\n   */\n  className: PropTypes.string,\n\n  /**\n   * Items to show inside the accordion\n   */\n  items: PropTypes.array.isRequired,\n\n  /**\n   * Additional properties to pass to the title Typography component\n   */\n  titleProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the subtitle Typography component\n   */\n  subtitleProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the text Typography component\n   */\n  textProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the link component\n   */\n  linkProps: PropTypes.object\n};\nexport default Accordion;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/Accordion/Accordion.js"],"names":["React","clsx","PropTypes","makeStyles","Typography","Grid","Accordion","MuiAccordion","AccordionSummary","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","ExpandMoreIcon","LearnMoreLink","useStyles","theme","root","display","flexDirection","expandOpen","transform","color","palette","primary","dark","listItem","cursor","props","items","className","titleProps","subtitleProps","textProps","linkProps","rest","classes","map","item","id","title","subtitle","text","link","defaultProps","propTypes","string","array","isRequired","object"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Accordion as MuiAccordion,\n  AccordionSummary as MuiAccordionSummary,\n  AccordionDetails as MuiAccordionDetails,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { LearnMoreLink } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n    color: theme.palette.primary.dark,\n  },\n  listItem: {\n    cursor: 'pointer',\n  },\n}));\n\n/**\n * Component to display accordion view\n *\n * @param {*} props\n */\nconst Accordion = props => {\n  const {\n    items,\n    className,\n    titleProps,\n    subtitleProps,\n    textProps,\n    linkProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx('accordion', classes.root, className)}>\n      {items.map(item => (\n        <MuiAccordion\n          className={clsx('accordion__item-wrapper', classes.listItem)}\n          key={item.id}\n        >\n          <MuiAccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls={`${item.id}-content`}\n            id={item.id}\n          >\n            <Grid\n              container\n              spacing={0}\n              className=\"accorion__item-text-container\"\n            >\n              <Grid item xs={12} className=\"accorion__item-title-container\">\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  className=\"accorion_item-title\"\n                  {...titleProps}\n                >\n                  {item.title}\n                </Typography>\n              </Grid>\n              {item.subtitle && (\n                <Grid item xs={12} className=\"accorion_item-subtitle-container\">\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    className=\"accorion_item-subtitle\"\n                    {...subtitleProps}\n                  >\n                    {item.subtitle}\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n          </MuiAccordionSummary>\n          <MuiAccordionDetails>\n            <Grid\n              container\n              spacing={2}\n              className=\"accordion__collapsable-text-container\"\n            >\n              <Grid\n                item\n                xs={12}\n                className=\"accordion__collapsable-text-wrapper\"\n              >\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  className=\"accordion__collapsable-text\"\n                  {...textProps}\n                >\n                  {item.text}\n                </Typography>\n              </Grid>\n              {item.link && (\n                <Grid\n                  item\n                  xs={12}\n                  className=\"accordion__collapsable-link-wrapper\"\n                >\n                  <LearnMoreLink\n                    title={item.link}\n                    variant=\"body1\"\n                    className=\"accordion__collapsable-link\"\n                    {...linkProps}\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </MuiAccordionDetails>\n        </MuiAccordion>\n      ))}\n    </div>\n  );\n};\n\nAccordion.defaultProps = {\n  titleProps: {},\n  subtitleProps: {},\n  textProps: {},\n  linkProps: {},\n};\n\nAccordion.propTypes = {\n  /**\n   * Classname from the parent component\n   */\n  className: PropTypes.string,\n  /**\n   * Items to show inside the accordion\n   */\n  items: PropTypes.array.isRequired,\n  /**\n   * Additional properties to pass to the title Typography component\n   */\n  titleProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the subtitle Typography component\n   */\n  subtitleProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the text Typography component\n   */\n  textProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the link component\n   */\n  linkProps: PropTypes.object,\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}