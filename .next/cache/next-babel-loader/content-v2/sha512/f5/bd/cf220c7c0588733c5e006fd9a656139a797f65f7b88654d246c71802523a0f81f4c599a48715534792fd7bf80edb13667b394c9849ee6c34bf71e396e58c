{"ast":null,"code":"import _extends from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\views\\\\AfterLogin\\\\MemberDetails\\\\MemberDetails.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Box, Link, Fab, Grid, Button, CssBaseline, RadioGroup, FormLabel, MenuItem, FormGroup, FormControl, FormControlLabel } from '@material-ui/core'; // Picker\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from '@material-ui/pickers';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport MaterialTable, { MTableBodyRow } from \"material-table\";\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nimport Menu from '@material-ui/core/Menu';\nimport Select from '@material-ui/core/Select';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction MemberDetails() {\n  _s();\n\n  const tableIcons = {\n    Check: /*#__PURE__*/forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }\n    }))),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }\n    }))),\n    // Delete: forwardRef((props, ref) => <VisibilityIcon onClick={clickMe} style={{color:\"#2d91a7\"}} {...props} ref={ref} />),\n    // View: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }))),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => __jsx(ShareIcon, _extends({\n      style: {\n        color: \"green\"\n      }\n    }, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 38\n      }\n    }))),\n    Export: /*#__PURE__*/forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 40\n      }\n    }))),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    }))),\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      }\n    }))),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 42\n      }\n    }))),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 42\n      }\n    }))),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 46\n      }\n    }))),\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }))),\n    Search: /*#__PURE__*/forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }\n    }))),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 43\n      }\n    }))),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 49\n      }\n    }))),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 44\n      }\n    })))\n  };\n  const api = axios.create({\n    baseURL: `http://localhost:8000/api`\n  });\n\n  function validateEmail(email) {\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(0),\n        overflow: \"hidden\",\n        width: \"1000px\"\n      }\n    },\n    tableButton: {\n      backgroundColor: \"#e0e0e0\",\n      fontWeight: 600,\n      padding: theme.spacing(1),\n      \"&:hover\": {\n        backgroundColor: \"#FF0010\",\n        color: \"white\"\n      },\n      height: \"27px\",\n      fontSize: '13px'\n    },\n    icon: {\n      fontSize: '13px'\n    },\n    headerWidth: {\n      width: \"170px\"\n    }\n  }));\n  const classes = useStyles();\n  var columns = [{\n    title: \"id\",\n    field: \"id\",\n    hidden: true\n  }, {\n    title: __jsx(\"h4\", {\n      class: classes.headerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"File Name\"),\n    field: \"name\",\n    render: row => __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 93\n      }\n    }, row.name)\n  }, {\n    title: __jsx(\"h4\", {\n      class: classes.headerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"File Size\"),\n    field: \"fileSize\"\n  }, {\n    title: __jsx(\"h4\", {\n      class: classes.headerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Upload Date\"),\n    field: \"uploadDate\"\n  }, {\n    title: __jsx(\"h4\", {\n      class: classes.headerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"Uploaded By\"),\n    field: \"uploadedBy\"\n  }, {\n    title: __jsx(\"h4\", {\n      class: classes.headerWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Verification Status\"),\n    field: \"verification\"\n  }];\n  const datas = [{\n    id: 1,\n    name: 'Shelter',\n    fileSize: '10 MB',\n    uploadDate: '22/03/2021',\n    uploadedBy: 'Arjun',\n    verification: 'Pending'\n  }, {\n    id: 1,\n    name: 'Johny',\n    fileSize: '20 MB',\n    uploadDate: '12/11/2020',\n    uploadedBy: 'Rulap',\n    verification: 'Processing'\n  }, {\n    id: 1,\n    name: 'Ajay',\n    fileSize: '32 MB',\n    uploadDate: '22/02/1990',\n    uploadedBy: 'Arjun',\n    verification: 'Completed'\n  }, {\n    id: 1,\n    name: 'Arjun',\n    fileSize: '222 KB',\n    uploadDate: '22/21/2021',\n    uploadedBy: 'Hemant',\n    verification: 'Pending'\n  }, {\n    id: 1,\n    name: 'Sethia',\n    fileSize: '120 KB',\n    uploadDate: '22/21/2021',\n    uploadedBy: 'Arjun',\n    verification: 'Pending'\n  }, {\n    id: 1,\n    name: 'Depad',\n    fileSize: '10 MB',\n    uploadDate: '22/21/2021',\n    uploadedBy: 'Arjun',\n    verification: 'Processing'\n  }, {\n    id: 1,\n    name: 'Shrpad',\n    fileSize: '10 MB',\n    uploadDate: '22/21/2021',\n    uploadedBy: 'Pankaj',\n    verification: 'Processing'\n  }, {\n    id: 1,\n    name: 'Hampesh',\n    fileSize: '10 MB',\n    uploadDate: '22/21/2011',\n    uploadedBy: 'Deband',\n    verification: 'Pending'\n  }];\n  const {\n    0: data,\n    1: setData\n  } = useState([]); //table data\n  //for error handling\n\n  const {\n    0: iserror,\n    1: setIserror\n  } = useState(false);\n  const {\n    0: errorMessages,\n    1: setErrorMessages\n  } = useState([]); // For Dropdown\n\n  const [values, setValues] = React.useState([\"Dropdown\", \"Bam\", \"Kate\", \"Nicole\", \"Aaron\"]);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(\"Dropdown\"); // function handleChange(event) {\n  //   setSelected(event.target.value);\n  // }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validation\n    let errorList = [];\n\n    if (newData.first_name === \"\") {\n      errorList.push(\"Please enter first name\");\n    }\n\n    if (newData.last_name === \"\") {\n      errorList.push(\"Please enter last name\");\n    }\n\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email\");\n    }\n\n    if (errorList.length < 1) {\n      api.patch(\"/users/\" + newData.id, newData).then(res => {\n        const dataUpdate = [...data];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setData([...dataUpdate]);\n        resolve();\n        setIserror(false);\n        setErrorMessages([]);\n      }).catch(error => {\n        setErrorMessages([\"Update failed! Server error\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowAdd = (newData, resolve) => {\n    //validation\n    let errorList = [];\n\n    if (newData.first_name === undefined) {\n      errorList.push(\"Please enter first name\");\n    }\n\n    if (newData.last_name === undefined) {\n      errorList.push(\"Please enter last name\");\n    }\n\n    if (newData.email === undefined || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email\");\n    }\n\n    if (errorList.length < 1) {\n      //no error\n      api.post(\"/users\", newData).then(res => {\n        let dataToAdd = [...data];\n        dataToAdd.push(newData);\n        setData(dataToAdd);\n        resolve();\n        setErrorMessages([]);\n        setIserror(false);\n      }).catch(error => {\n        setErrorMessages([\"Cannot add data. Server error!\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    api.delete(\"/users/\" + oldData.id).then(res => {\n      const dataDelete = [...data];\n      const index = oldData.tableData.id;\n      dataDelete.splice(index, 1);\n      setData([...dataDelete]);\n      resolve();\n    }).catch(error => {\n      setErrorMessages([\"Delete failed! Server error\"]);\n      setIserror(true);\n      resolve();\n    });\n  };\n\n  const [value, setValue] = React.useState(2); // const handleChanges = (event, newValue) => {\n  //   setValue(newValue);\n  // };\n  // For Dropdwon Button \n  //   const [anchorEl, setAnchorEl] = React.useState(null);\n  // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n  // Record Filter on Select Member\n\n  const {\n    0: filterdata,\n    1: setFilterdata\n  } = useState(datas);\n  const {\n    0: filter,\n    1: setFilter\n  } = useState(false);\n  const [name, setName] = React.useState('showall');\n\n  const handleChange = event => {\n    setFilter(!filter);\n  };\n\n  useEffect(() => {\n    setFilterdata(name === \"showall\" ? datas : datas.filter(dt => dt.name === name));\n  }, [name]); // Code for share menu dropdown\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const clickMe = () => {\n    setAnchorEl(__jsx(\"div\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, __jsx(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      style: {\n        width: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 4\n      }\n    }, __jsx(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 8\n      }\n    }, __jsx(ListItem, {\n      style: {\n        height: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, __jsx(WhatsAppIcon, {\n      className: classes.icon,\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    }), __jsx(Button\n    /* Use classes property to inject custom styles */\n    , {\n      variant: \"raised\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 10\n      }\n    }, \"WhatsApp \")), __jsx(ListItem, {\n      style: {\n        height: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 8\n      }\n    }, __jsx(GetAppIcon, {\n      className: classes.icon,\n      style: {\n        color: \"#4b4bb2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 8\n      }\n    }), \" \", __jsx(Button\n    /* Use classes property to inject custom styles */\n    , {\n      classes: {\n        root: classes.button,\n        label: classes.label\n      },\n      variant: \"raised\",\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 74\n      }\n    }, \"Download \")), __jsx(ListItem, {\n      style: {\n        height: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 8\n      }\n    }, __jsx(EmailIcon, {\n      className: classes.icon,\n      style: {\n        color: \"#957982\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 8\n      }\n    }), \" \", __jsx(Button\n    /* Use classes property to inject custom styles */\n    , {\n      classes: {\n        root: classes.button,\n        label: classes.label\n      },\n      variant: \"raised\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 73\n      }\n    }, \"Email \"))))));\n  }; // Code for view Row data in details\n\n\n  const {\n    0: modeldata,\n    1: setModeldata\n  } = useState(datas);\n\n  const showRecord = () => {\n    alert(filterdata.name);\n  }; // Model box const [open, setOpen] = React.useState(false);\n\n\n  const {\n    0: modelName,\n    1: setModelName\n  } = useState({\n    fname: \"\"\n  });\n  const {\n    0: showData,\n    1: setShowData\n  } = useState(datas); // const [getData,setGetData] = useState(datas);\n\n  const [opens, setOpens] = React.useState(false);\n\n  const handleClickOpens = () => {\n    setOpens(true);\n    setShowData(__jsx(\"table\", {\n      id: \"viewTable\",\n      style: {\n        border: \"1px solid black\",\n        width: \"800px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 5\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 8\n      }\n    }, \"File Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 8\n      }\n    }, \"File Size\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 8\n      }\n    }, \"Upload Date\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 8\n      }\n    }, \"Uploaded By\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 8\n      }\n    }, \"Verification Status\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 7\n      }\n    })));\n    alert(filterdata); //alert('s')\n  };\n\n  const handleCloses = () => {\n    setOpens(false);\n  }; // Load Image from\n\n\n  const {\n    0: loadimage,\n    1: setLoadImage\n  } = useState([]);\n  useEffect(() => {\n    loadList();\n  }, []);\n\n  const loadList = async () => {\n    const result = await axios.get(\"http://localhost:8000/api/list\");\n    setLoadImage(result.data.reverse());\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 10\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, __jsx(Paper, {\n    elevation: 4,\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    color: \"black\",\n    fontWeight: \"fontWeightBold\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 67\n    }\n  }, \"Home / Medical Records\")), loadimage.map(e => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: e.img_path,\n    style: {\n      height: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 36\n    }\n  })))), __jsx(Paper, {\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 12\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 14\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 16\n    }\n  }, __jsx(Box, {\n    mt: 2,\n    mb: 4,\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 19\n    }\n  }, __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    style: {\n      marginLeft: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"showall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 24\n    }\n  }, \"Select Member\"), __jsx(MenuItem, {\n    value: \"Johny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, \"Johny\"), __jsx(MenuItem, {\n    value: \"Deba\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }, \"Deba\"), __jsx(MenuItem, {\n    value: \"Ranju\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 25\n    }\n  }, \"Ranju\"), __jsx(MenuItem, {\n    value: \"Arjun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  }, \"Arjun\"))), __jsx(MaterialTable, {\n    title: \"Multiple Actions Preview\",\n    columns: columns,\n    data: filterdata // onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\n    ,\n    actions: [{\n      icon: 'visibilityIcon',\n      tooltip: 'Save User',\n      iconProps: {\n        style: {\n          fontSize: \"18px\",\n          color: \"green\"\n        }\n      },\n      onClick: handleClickOpens\n    }, {\n      icon: 'share',\n      tooltip: 'Share',\n      iconProps: {\n        style: {\n          fontSize: \"18px\",\n          color: \"#1a9f6e\"\n        }\n      },\n      onClick: clickMe\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 19\n    }\n  }), anchorEl)))))));\n}\n\n_s(MemberDetails, \"ISBohG/OtLMxLSSalpgH0eUaeT0=\", false, function () {\n  return [useStyles];\n});\n\n_c = MemberDetails;\nexport default MemberDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberDetails\");","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/views/AfterLogin/MemberDetails/MemberDetails.js"],"names":["React","Suspense","lazy","useState","useEffect","makeStyles","Typography","Paper","Box","Link","Fab","Grid","Button","CssBaseline","RadioGroup","FormLabel","MenuItem","FormGroup","FormControl","FormControlLabel","DateFnsUtils","MuiPickersUtilsProvider","TimePicker","DatePicker","Card","CardActionArea","CardActions","CardContent","CardMedia","PublishIcon","MaterialTable","MTableBodyRow","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","axios","Alert","Menu","Select","WhatsAppIcon","ShareIcon","DialogContent","DialogContentText","DialogTitle","MemberDetails","tableIcons","props","ref","DetailPanel","color","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","api","create","baseURL","validateEmail","email","re","test","String","toLowerCase","useStyles","theme","root","margin","spacing","overflow","width","tableButton","backgroundColor","fontWeight","padding","height","fontSize","icon","headerWidth","classes","columns","title","field","hidden","render","row","name","datas","id","fileSize","uploadDate","uploadedBy","verification","data","setData","iserror","setIserror","errorMessages","setErrorMessages","values","setValues","selected","setSelected","handleRowUpdate","newData","oldData","resolve","errorList","first_name","push","last_name","length","patch","then","res","dataUpdate","index","tableData","catch","error","handleRowAdd","undefined","post","dataToAdd","handleRowDelete","delete","dataDelete","splice","value","setValue","filterdata","setFilterdata","filter","setFilter","setName","handleChange","event","dt","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","clickMe","Boolean","button","label","modeldata","setModeldata","showRecord","alert","modelName","setModelName","fname","showData","setShowData","opens","setOpens","handleClickOpens","border","handleCloses","loadimage","setLoadImage","loadList","result","get","reverse","marginBottom","map","e","img_path","target","marginLeft","tooltip","iconProps","style","onClick"],"mappings":"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","sourcesContent":["\r\nimport React,{Suspense,lazy,useState,useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Link,\r\n  Fab,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\n// Picker\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\n\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport MaterialTable, { MTableBodyRow } from \"material-table\";\r\nimport { forwardRef } from 'react';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Select from '@material-ui/core/Select';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\n\r\n\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\nfunction MemberDetails() {\r\n  const tableIcons = {\r\n\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    // Delete: forwardRef((props, ref) => <VisibilityIcon onClick={clickMe} style={{color:\"#2d91a7\"}} {...props} ref={ref} />),\r\n    // View: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <ShareIcon style={{color:\"green\"}} {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    \r\n  };\r\n  \r\n  const api = axios.create({\r\n  baseURL: `http://localhost:8000/api`\r\n})\r\n  \r\n  function validateEmail(email){\r\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(0),\r\n        overflow:\"hidden\",\r\n        width:\"1000px\",\r\n        \r\n      },\r\n\r\n    },\r\n    tableButton: {\r\n        backgroundColor:\"#e0e0e0\",\r\n        fontWeight:600,\r\n        padding: theme.spacing(1),\r\n        \"&:hover\": {\r\n          backgroundColor: \"#FF0010\",\r\n          color:\"white\"\r\n        },\r\n        height:\"27px\",\r\n        fontSize: '13px'\r\n        \r\n      },\r\n      icon:{\r\n        fontSize: '13px'\r\n      },\r\n    headerWidth:\r\n    {\r\n        width:\"170px\"\r\n    }  \r\n  }));\r\n  \r\n  \r\n    const classes = useStyles();\r\n    var columns = [\r\n      {title: \"id\", field: \"id\", hidden: true},\r\n      {title: <h4 class = {classes.headerWidth}>File Name</h4>, field: \"name\",render:(row)=><Box>{row.name}</Box>},\r\n      {title: <h4 class = {classes.headerWidth}>File Size</h4>, field: \"fileSize\"},\r\n      {title: <h4 class = {classes.headerWidth}>Upload Date</h4>, field: \"uploadDate\"},\r\n      {title: <h4 class = {classes.headerWidth}>Uploaded By</h4>, field: \"uploadedBy\"},\r\n  \r\n      {title: <h4 class = {classes.headerWidth}>Verification Status</h4>, field: \"verification\"},\r\n\r\n\r\n  \r\n    ]\r\n\r\n    \r\n    const datas = [\r\n      { id: 1, name: 'Shelter', fileSize: '10 MB', uploadDate: '22/03/2021',  uploadedBy: 'Arjun',   verification: 'Pending'},\r\n      { id: 1, name: 'Johny', fileSize: '20 MB',  uploadDate: '12/11/2020', uploadedBy: 'Rulap',  verification: 'Processing'},\r\n      { id: 1, name: 'Ajay', fileSize: '32 MB', uploadDate: '22/02/1990', uploadedBy: 'Arjun',  verification: 'Completed'},\r\n      { id: 1, name: 'Arjun', fileSize: '222 KB', uploadDate: '22/21/2021',  uploadedBy: 'Hemant',  verification: 'Pending'},\r\n      { id: 1, name: 'Sethia', fileSize: '120 KB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Pending'},\r\n      { id: 1, name: 'Depad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Processing'},\r\n      { id: 1, name: 'Shrpad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Pankaj',  verification: 'Processing'},\r\n      { id: 1, name: 'Hampesh', fileSize: '10 MB', uploadDate: '22/21/2011', uploadedBy: 'Deband',  verification: 'Pending'},\r\n   \r\n    ];\r\n    \r\n\r\n    const [data, setData] = useState([]); //table data\r\n  \r\n    //for error handling\r\n    const [iserror, setIserror] = useState(false)\r\n    const [errorMessages, setErrorMessages] = useState([])\r\n    \r\n    // For Dropdown\r\n    const [values, setValues] = React.useState([\r\n      \"Dropdown\",\r\n      \"Bam\",\r\n      \"Kate\",\r\n      \"Nicole\",\r\n      \"Aaron\"\r\n    ]);\r\n    const [selected, setSelected] = useState(\"Dropdown\");\r\n  \r\n    // function handleChange(event) {\r\n    //   setSelected(event.target.value);\r\n    // }\r\n  \r\n    const handleRowUpdate = (newData, oldData, resolve) => {\r\n      //validation\r\n      let errorList = []\r\n      if(newData.first_name === \"\"){\r\n        errorList.push(\"Please enter first name\")\r\n      }\r\n      if(newData.last_name === \"\"){\r\n        errorList.push(\"Please enter last name\")\r\n      }\r\n      if(newData.email === \"\" || validateEmail(newData.email) === false){\r\n        errorList.push(\"Please enter a valid email\")\r\n      }\r\n  \r\n      if(errorList.length < 1){\r\n        api.patch(\"/users/\"+newData.id, newData)\r\n        .then(res => {\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData;\r\n          setData([...dataUpdate]);\r\n          resolve()\r\n          setIserror(false)\r\n          setErrorMessages([])\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Update failed! Server error\"])\r\n          setIserror(true)\r\n          resolve()\r\n          \r\n        })\r\n      }else{\r\n        setErrorMessages(errorList)\r\n        setIserror(true)\r\n        resolve()\r\n  \r\n      }\r\n      \r\n    }\r\n  \r\n    const handleRowAdd = (newData, resolve) => {\r\n      //validation\r\n      let errorList = []\r\n      if(newData.first_name === undefined){\r\n        errorList.push(\"Please enter first name\")\r\n      }\r\n      if(newData.last_name === undefined){\r\n        errorList.push(\"Please enter last name\")\r\n      }\r\n      if(newData.email === undefined || validateEmail(newData.email) === false){\r\n        errorList.push(\"Please enter a valid email\")\r\n      }\r\n  \r\n      if(errorList.length < 1){ //no error\r\n        api.post(\"/users\", newData)\r\n        .then(res => {\r\n          let dataToAdd = [...data];\r\n          dataToAdd.push(newData);\r\n          setData(dataToAdd);\r\n          resolve()\r\n          setErrorMessages([])\r\n          setIserror(false)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Cannot add data. Server error!\"])\r\n          setIserror(true)\r\n          resolve()\r\n        })\r\n      }else{\r\n        setErrorMessages(errorList)\r\n        setIserror(true)\r\n        resolve()\r\n      }\r\n    }\r\n   \r\n    const handleRowDelete = (oldData, resolve) => {\r\n      api.delete(\"/users/\"+oldData.id)\r\n        .then(res => {\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve()\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Delete failed! Server error\"])\r\n          setIserror(true)\r\n          resolve()\r\n        })\r\n    }\r\n  \r\n    const [value, setValue] = React.useState(2);\r\n  \r\n    // const handleChanges = (event, newValue) => {\r\n    //   setValue(newValue);\r\n    // };\r\n  \r\n\r\n    // For Dropdwon Button \r\n  //   const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // const handleClick = (event) => {\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  // Record Filter on Select Member\r\n  const[filterdata,setFilterdata] = useState(datas);\r\n  const[filter,setFilter] = useState(false);\r\n  const [name, setName] = React.useState('showall');\r\n\r\n  const handleChange = (event) => {\r\n    setFilter(!filter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilterdata(name===\"showall\"?datas:datas.filter(dt=>dt.name===name))\r\n  }, [name])\r\n\r\n  // Code for share menu dropdown\r\n\r\n   const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const clickMe = () => {\r\n   \r\n    setAnchorEl(<div style={{fontSize:\"12px\"}}>   \r\n   <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n      style={{width:\"200px\"}}\r\n    >\r\n       <List>\r\n        <ListItem style={{height:\"40px\"}}>\r\n        <WhatsAppIcon className={classes.icon}  style={{color:\"green\"}}/> \r\n         <Button\r\n         /* Use classes property to inject custom styles */\r\n        \r\n         variant=\"raised\"\r\n         color=\"primary\"\r\n         > \r\n         WhatsApp </Button>\r\n       </ListItem>\r\n\r\n       <ListItem style={{height:\"40px\"}}>\r\n       <GetAppIcon className={classes.icon} style={{color:\"#4b4bb2\"}} /> <Button\r\n         /* Use classes property to inject custom styles */\r\n         classes={{ root: classes.button, label: classes.label }}\r\n         variant=\"raised\"\r\n         size=\"small\"\r\n         color=\"primary\"\r\n         > \r\n         Download </Button>\r\n       </ListItem>\r\n\r\n       <ListItem  style={{height:\"40px\"}}>\r\n       <EmailIcon className={classes.icon} style={{color:\"#957982\"}} /> <Button\r\n         /* Use classes property to inject custom styles */\r\n         classes={{ root: classes.button, label: classes.label }}\r\n         variant=\"raised\"\r\n         color=\"primary\"\r\n        \r\n         > \r\n        Email </Button>\r\n       </ListItem>\r\n     </List>\r\n    </Menu> \r\n    </div>\r\n    )\r\n  }\r\n\r\n\r\n  // Code for view Row data in details\r\n\r\n  const[modeldata,setModeldata] = useState(datas);\r\n\r\n  const showRecord=()=>\r\n  {\r\n    \r\n     alert(filterdata.name)\r\n    \r\n  }\r\n\r\n  // Model box const [open, setOpen] = React.useState(false);\r\n  const [modelName,setModelName] = useState({\r\n    fname:\"\"\r\n  });\r\n  const [showData,setShowData] = useState(datas);\r\n  // const [getData,setGetData] = useState(datas);\r\n  const [opens, setOpens] = React.useState(false);\r\n\r\n  const handleClickOpens = () => {\r\n    setOpens(true);\r\n    setShowData(<table id=\"viewTable\" style={{ border:\"1px solid black\",width:\"800px\"}}>\r\n    <thead>\r\n      <tr>\r\n       <th>File Name</th>\r\n       <th>File Size</th>\r\n       <th>Upload Date</th>\r\n       <th>Uploaded By</th>\r\n       <th>Verification Status</th>\r\n      </tr>\r\n     </thead> \r\n      <tbody>\r\n        {/* {showData.map((na)=><p>{na.name}</p>)} */}\r\n        {/* <tr> \r\n          <td>{datas}</td>\r\n          <td>dddddddddd</td>\r\n          <td>{showData.fname}</td>\r\n          <td>{showData.fname}</td>\r\n          <td>{showData.fname}</td>\r\n        </tr>  */}\r\n      </tbody>   \r\n   </table>)\r\n    alert(filterdata)\r\n\r\n    //alert('s')\r\n  };\r\n\r\n  const handleCloses = () => {\r\n    setOpens(false);\r\n  };\r\n \r\n\r\n  // Load Image from\r\n  const [loadimage, setLoadImage] = useState([]);\r\n  useEffect(() => {\r\n    loadList();\r\n  }, []);\r\n\r\n  const loadList = async () => {\r\n    const result = await axios.get(\"http://localhost:8000/api/list\");\r\n    setLoadImage(result.data.reverse());\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ padding:16, }}>\r\n      <Grid container>\r\n         <Grid item xs={1}>\r\n        \r\n         </Grid>\r\n        <Grid item xs={11}>\r\n          <div className={classes.root}>\r\n          <Paper elevation={4} style={{marginBottom:\"20px\"}}>   \r\n            <Box  color=\"black\" fontWeight=\"fontWeightBold\" p={2}><Typography variant=\"h6\" color=\"primary\">Home / Medical Records</Typography></Box>\r\n            {loadimage.map((e)=><p><img src={e.img_path} style={{height:\"200px\"}} /></p>)}\r\n          </Paper>  \r\n          \r\n           <Paper elevation={0} >\r\n             <Grid container  > \r\n               <Grid item xs={12} >\r\n                  <Box mt={2} mb={4}  display=\"flex\"> \r\n                      {/* <AddFile/> */}\r\n                    \r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        style={{marginLeft:\"30px\"}}\r\n                      > \r\n                       <MenuItem value=\"showall\">Select Member</MenuItem>\r\n                        <MenuItem value=\"Johny\">Johny</MenuItem>\r\n                        <MenuItem value=\"Deba\">Deba</MenuItem>\r\n                        <MenuItem value=\"Ranju\">Ranju</MenuItem>\r\n                        <MenuItem value=\"Arjun\">Arjun</MenuItem>\r\n                     \r\n                      </Select>\r\n                   </Box>\r\n                  {/* <MaterialTable mt={0}\r\n                     \r\n                    title=\"Member Details\"\r\n                    columns={columns}\r\n                    data={filterdata}\r\n                    icons={tableIcons}\r\n                    components={{\r\n                      Actions: props => (\r\n                        <ShareIcon onClick={clickMe} style={{color:\"green\"}} >\r\n                           Cliked\r\n                        </ShareIcon>\r\n                      \r\n                      )\r\n                    }}\r\n                    options={{\r\n                      headerStyle:{size:'80px'},\r\n                      search: false\r\n                      }}\r\n                    editable={{\r\n                      onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve) => {\r\n                            handleRowUpdate(newData, oldData, resolve);\r\n                            \r\n                        }),\r\n                    \r\n                      onRowDelete: (oldData) =>\r\n                        new Promise((resolve) => {\r\n                          handleRowDelete(oldData, resolve)\r\n                        }),\r\n                    }}\r\n                  /> */}\r\n\r\n                  {/* <MaterialTable\r\n                    icons={tableIcons}\r\n                  \r\n                    title=\"Member Details\"\r\n                    options={{\r\n                    \r\n                      search:false\r\n                    }}\r\n                    columns={columns}\r\n                    data={filterdata}\r\n                    onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\r\n                    actions={[\r\n                      {\r\n                        icon: 'savess',\r\n                        tooltip: 'Save Users',\r\n                        // onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\r\n                        onClick: {handleClickOpens}\r\n                        \r\n                      },\r\n                      {\r\n                        icon: 'saves',\r\n                        tooltip: 'Save User',\r\n                        onClick: (event, onRowClick) => alert(\"You saved \" + onRowClick.name)\r\n                        // onClick: {clickMe}\r\n                        \r\n                      }\r\n                      \r\n                    ]}\r\n                   \r\n                    components={{\r\n                      Action: props => (\r\n                        <Button\r\n                          onClick={handleClickOpens}\r\n                        \r\n                          style={{textTransform: 'none'}}\r\n                          size=\"small\"\r\n                        >\r\n                          <VisibilityIcon style={{color: 'green'}}/>\r\n                        </Button>,\r\n                          <Button\r\n                          onClick={handleClickOpens}\r\n                        \r\n                          style={{textTransform: 'none'}}\r\n                          size=\"small\"\r\n                        >\r\n                          <PublishIcon style={{color: 'green'}}/>\r\n                        </Button>\r\n                      ),\r\n                    }}\r\n                  /> */}\r\n                  <MaterialTable\r\n                        title=\"Multiple Actions Preview\"\r\n                        columns={columns}\r\n                        data={filterdata}\r\n                        // onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\r\n                        actions={[\r\n                          {\r\n                            icon: 'visibilityIcon',\r\n                            tooltip: 'Save User',\r\n                            iconProps: { style: { fontSize: \"18px\", color: \"green\" } },\r\n                           \r\n                            onClick:(handleClickOpens)\r\n                          },\r\n                          {\r\n                            icon: 'share',\r\n                            tooltip: 'Share',\r\n                            iconProps: { style: { fontSize: \"18px\", color: \"#1a9f6e\" } },\r\n                            onClick: (clickMe) \r\n                          }\r\n                        ]}\r\n                      />\r\n                   { anchorEl }\r\n               </Grid>  \r\n              </Grid> \r\n           </Paper>\r\n          </div>  \r\n        </Grid>   \r\n     </Grid> \r\n    \r\n      {/* <Dialog\r\n        open={opens}\r\n        onClose={handleCloses}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth={'lg'} // 'sm' || 'md' || 'lg' || 'xl'\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"View User Data\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            \r\n              {showData}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          \r\n          <Button onClick={handleCloses} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </div>\r\n  );\r\n}\r\nexport default MemberDetails;"]},"metadata":{},"sourceType":"module"}