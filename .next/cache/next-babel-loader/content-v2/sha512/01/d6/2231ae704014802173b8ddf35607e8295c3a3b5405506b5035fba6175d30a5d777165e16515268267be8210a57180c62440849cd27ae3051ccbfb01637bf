{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\organisms\\\\Section\\\\Section.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: theme.layout.contentWidth,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(8, 8)\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(12, 8)\n    }\n  },\n  fullWidth: {\n    maxWidth: '100%'\n  },\n  disablePadding: {\n    padding: 0\n  },\n  narrow: {\n    maxWidth: 800\n  }\n}));\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\n\nconst Section = props => {\n  const {\n    children,\n    fullWidth,\n    narrow,\n    disablePadding,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"fullWidth\", \"narrow\", \"disablePadding\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"section\", _extends({\n    className: clsx('section', classes.root, fullWidth ? classes.fullWidth : {}, narrow ? classes.narrow : {}, disablePadding ? classes.disablePadding : {}, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nSection.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Children to placed inside the section\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Should show narrow sections\r\n   */\n  narrow: PropTypes.bool,\n\n  /**\r\n   * Should the section be full width\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * Should the section render with no padding\r\n   */\n  disablePadding: PropTypes.bool\n};\nexport default Section;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/organisms/Section/Section.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","theme","root","maxWidth","layout","contentWidth","width","margin","padding","spacing","breakpoints","up","fullWidth","disablePadding","narrow","Section","props","children","className","rest","classes","propTypes","string","node","bool"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,MAAN,CAAaC,YADnB;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,MAAM,EAAE,QAHJ;AAIJC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJL;AAKJ,KAACR,KAAK,CAACS,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADmB,KAL1B;AAQJ,KAACR,KAAK,CAACS,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,EAAd,EAAkB,CAAlB;AADmB;AAR1B,GAD+B;AAarCG,EAAAA,SAAS,EAAE;AACTT,IAAAA,QAAQ,EAAE;AADD,GAb0B;AAgBrCU,EAAAA,cAAc,EAAE;AACdL,IAAAA,OAAO,EAAE;AADK,GAhBqB;AAmBrCM,EAAAA,MAAM,EAAE;AACNX,IAAAA,QAAQ,EAAE;AADJ;AAnB6B,CAAL,CAAN,CAA5B;AAwBA;AACA;AACA;AACA;AACA;;AACA,MAAMY,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AACJC,IAAAA,QADI;AAEJL,IAAAA,SAFI;AAGJE,IAAAA,MAHI;AAIJD,IAAAA,cAJI;AAKJK,IAAAA;AALI,MAOFF,KAPJ;AAAA,QAMKG,IANL,4BAOIH,KAPJ;;AASA,QAAMI,OAAO,GAAGpB,SAAS,EAAzB;AAEA,SACE;AACE,IAAA,SAAS,EAAEH,IAAI,CACb,SADa,EAEbuB,OAAO,CAAClB,IAFK,EAGbU,SAAS,GAAGQ,OAAO,CAACR,SAAX,GAAuB,EAHnB,EAIbE,MAAM,GAAGM,OAAO,CAACN,MAAX,GAAoB,EAJb,EAKbD,cAAc,GAAGO,OAAO,CAACP,cAAX,GAA4B,EAL7B,EAMbK,SANa;AADjB,KASMC,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWGF,QAXH,CADF;AAeD,CA3BD;;AA6BAF,OAAO,CAACM,SAAR,GAAoB;AAClB;AACF;AACA;AACEH,EAAAA,SAAS,EAAEpB,SAAS,CAACwB,MAJH;;AAKlB;AACF;AACA;AACEL,EAAAA,QAAQ,EAAEnB,SAAS,CAACyB,IARF;;AASlB;AACF;AACA;AACET,EAAAA,MAAM,EAAEhB,SAAS,CAAC0B,IAZA;;AAalB;AACF;AACA;AACEZ,EAAAA,SAAS,EAAEd,SAAS,CAAC0B,IAhBH;;AAiBlB;AACF;AACA;AACEX,EAAAA,cAAc,EAAEf,SAAS,CAAC0B;AApBR,CAApB;AAuBA,eAAeT,OAAf","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: theme.layout.contentWidth,\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 8),\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(12, 8),\r\n    },\r\n  },\r\n  fullWidth: {\r\n    maxWidth: '100%',\r\n  },\r\n  disablePadding: {\r\n    padding: 0,\r\n  },\r\n  narrow: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst Section = props => {\r\n  const {\r\n    children,\r\n    fullWidth,\r\n    narrow,\r\n    disablePadding,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        'section',\r\n        classes.root,\r\n        fullWidth ? classes.fullWidth : {},\r\n        narrow ? classes.narrow : {},\r\n        disablePadding ? classes.disablePadding : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  narrow: PropTypes.bool,\r\n  /**\r\n   * Should the section be full width\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Should the section render with no padding\r\n   */\r\n  disablePadding: PropTypes.bool,\r\n};\r\n\r\nexport default Section;\r\n"]},"metadata":{},"sourceType":"module"}