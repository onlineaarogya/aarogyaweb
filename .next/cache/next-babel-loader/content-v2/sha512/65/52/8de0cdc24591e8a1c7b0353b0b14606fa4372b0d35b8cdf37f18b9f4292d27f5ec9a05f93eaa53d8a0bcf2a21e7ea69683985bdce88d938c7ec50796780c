{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors, Typography } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    border: `solid 1px rgba(43, 41, 45, 0.2)`,\n    borderRadius: theme.spacing(1),\n    padding: theme.spacing(2),\n    background: 'transparent',\n    cursor: 'pointer',\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(3)\n    },\n    '&:hover': {\n      background: theme.palette.primary.main,\n      boxShadow: '0 11px 55px 10px rgba(0, 0, 0, 0.07), 0 13px 18px -8px rgba(0, 0, 0, 0.15)',\n      '& .card-job-minimal__title, & .card-job-minimal__location, & .card-job-minimal__arrow': {\n        color: 'white !important'\n      }\n    }\n  },\n  cardJobMinimalBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n      marginRight: theme.spacing(8)\n    }\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n/**\r\n * Component to display the job card company\r\n *\r\n * @param {Object} props\r\n */\n\nconst CardJobMinimal = props => {\n  const {\n    title,\n    subtitle,\n    showArrow,\n    titleProps,\n    subtitleProps,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"title\", \"subtitle\", \"showArrow\", \"titleProps\", \"subtitleProps\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, 'card-job-minimal')\n  }, rest), __jsx(\"div\", {\n    className: clsx(classes.cardJobMinimalBody, 'card-job-minimal__body'),\n    style: !showArrow ? {\n      marginRight: 0\n    } : {}\n  }, __jsx(\"div\", {\n    className: \"card-job-minimal__title-container\"\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    className: clsx(classes.title, 'card-job-minimal__title')\n  }, titleProps), title)), __jsx(\"div\", {\n    className: \"card-job-minimal__location-conatiner\"\n  }, __jsx(Typography, _extends({\n    variant: \"body2\",\n    color: \"textSecondary\",\n    className: \"card-job-minimal__location\"\n  }, subtitleProps), subtitle))), showArrow ? __jsx(\"div\", {\n    className: \"card-job-minimal__arrow-container\"\n  }, __jsx(Icon, {\n    fontIconClass: \"fas fa-angle-right\",\n    fontIconColor: colors.grey[700],\n    className: \"card-job-minimal__arrow\"\n  })) : null);\n};\n\nCardJobMinimal.defaultProps = {\n  showArrow: false,\n  titleProps: {},\n  subtitleProps: {}\n};\nexport default CardJobMinimal;","map":null,"metadata":{},"sourceType":"module"}