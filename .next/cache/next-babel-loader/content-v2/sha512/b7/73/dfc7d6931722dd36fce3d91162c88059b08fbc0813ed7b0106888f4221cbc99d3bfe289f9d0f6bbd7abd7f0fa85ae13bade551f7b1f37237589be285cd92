{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/Hero/Hero.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DescriptionCta, SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    overflow: 'hidden',\n    background: theme.palette.primary.dark,\n    '& section': {\n      padding: '46px 68px'\n    }\n  },\n  textWhite: {\n    color: 'white'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  progress: {},\n  percentage: {\n    width: '100px',\n    height: '100px',\n    lineHeight: '100px',\n    top: '100px',\n    textAlign: 'center',\n    position: 'relative',\n    zIndex: 10\n  }\n}));\n\nconst Hero = props => {\n  _s();\n\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const [prevProgressValve, setPrevProgressValve] = React.useState('');\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), __jsx(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(DescriptionCta, {\n    title: \"Account Settings\",\n    subtitle: \"Change account information and setting\",\n    primaryCta: __jsx(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classes.percentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, prevProgressValve, \"%\"), __jsx(CircularProgress, {\n      className: classes.progress,\n      variant: \"static\",\n      value: prevProgressValve,\n      size: 100,\n      thickness: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })),\n    align: 'left',\n    titleProps: {\n      className: classes.fontWeightBold,\n      color: 'textPrimary'\n    },\n    subtitleProps: {\n      // color: 'textSecondary',\n      className: classes.textWhite\n    },\n    titleProps: {\n      className: clsx(classes.title, classes.textWhite),\n      variant: 'h3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Hero, \"i4sny6cOH1FNwB7JLUaBB5NVkUE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Hero;\nHero.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n}; // export default Hero;\n\nexport default function CircularStatic() {\n  _s2();\n\n  const [progress, setProgress] = React.useState(60);\n  const [prevProgressValve, setPrevProgressValve] = React.useState('');\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      var a = '';\n      setProgress(prevProgress => prevProgress >= progress ? 0 : prevProgress + 10);\n    }, 1000);\n    return () => {// clearInterval(timer);\n    };\n    console.log('p', prevProgressValve);\n  }, []);\n  return __jsx(Hero, {\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 10\n    }\n  });\n}\n\n_s2(CircularStatic, \"j4eCSPHnP+jXygsRgifu/HpcEXM=\");\n\n_c2 = CircularStatic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hero\");\n$RefreshReg$(_c2, \"CircularStatic\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/Hero/Hero.js"],"names":["React","useState","PropTypes","clsx","makeStyles","DescriptionCta","SectionHeader","Section","CircularProgress","Typography","Box","Button","useStyles","theme","root","width","height","position","overflow","background","palette","primary","dark","padding","textWhite","color","title","fontWeight","progress","percentage","lineHeight","top","textAlign","zIndex","Hero","props","className","rest","classes","prevProgressValve","setPrevProgressValve","fontWeightBold","variant","propTypes","string","CircularStatic","setProgress","useEffect","timer","setInterval","a","prevProgress","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DescriptionCta, SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    overflow: 'hidden',\n    background: theme.palette.primary.dark,\n    '& section': {\n      padding: '46px 68px',\n    },\n  },\n\n  textWhite: {\n    color: 'white',\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n  progress: {},\n  percentage: {\n    width: '100px',\n    height: '100px',\n    lineHeight: '100px',\n    top: '100px',\n    textAlign: 'center',\n    position: 'relative',\n    zIndex: 10,\n  },\n}));\n\nconst Hero = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [prevProgressValve, setPrevProgressValve] = React.useState('');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Section>\n        {/* <SectionHeader\n          title=\"Account Settings\"\n          subtitle=\"Change account information and settings\"\n          align=\"left\"\n          disableGutter\n          titleProps={{\n            className: clsx(classes.title, classes.textWhite),\n            variant: 'h3',\n          }}\n          subtitleProps={{\n            className: classes.textWhite,\n          }}\n        /> */}\n        <DescriptionCta\n          title=\"Account Settings\"\n          subtitle=\"Change account information and setting\"\n          primaryCta={\n            <Box position=\"relative\" display=\"inline-flex\">\n              {/* <CircularProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                {...props}\n              />\n              <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Typography\n                  variant=\"caption\"\n                  component=\"div\"\n                  className={classes.textWhite}\n                >{`${Math.round(props.value)}%`}</Typography>\n              </Box> */}\n\n              <div className={classes.percentage}>{prevProgressValve}%</div>\n              <CircularProgress\n                className={classes.progress}\n                variant=\"static\"\n                value={prevProgressValve}\n                size={100}\n                thickness={5}\n              />\n            </Box>\n          }\n          align={'left'}\n          titleProps={{\n            className: classes.fontWeightBold,\n            color: 'textPrimary',\n          }}\n          subtitleProps={{\n            // color: 'textSecondary',\n            className: classes.textWhite,\n          }}\n          titleProps={{\n            className: clsx(classes.title, classes.textWhite),\n            variant: 'h3',\n          }}\n        />\n      </Section>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\n// export default Hero;\n\nexport default function CircularStatic() {\n  const [progress, setProgress] = React.useState(60);\n  const [prevProgressValve, setPrevProgressValve] = React.useState('');\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      var a = '';\n      setProgress(prevProgress =>\n        prevProgress >= progress ? 0 : prevProgress + 10,\n      );\n    }, 1000);\n\n    return () => {\n      // clearInterval(timer);\n    };\n    console.log('p', prevProgressValve);\n  }, []);\n\n  return <Hero value={progress} />;\n}\n"]},"metadata":{},"sourceType":"module"}