{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Breadcrumb/Breadcrumb.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Breadcrumbs, Typography, Link } from '@material-ui/core';\n\nconst Breadcrumb = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), __jsx(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, item.isActive ? __jsx(Typography, {\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, item.title) : __jsx(Link, {\n    href: item.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  }, item.title)))));\n};\n\n_c = Breadcrumb;\nBreadcrumb.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Breadcrumb/Breadcrumb.js"],"names":["React","PropTypes","Breadcrumbs","Typography","Link","Breadcrumb","props","data","className","rest","map","item","index","isActive","title","href","propTypes","string","array","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,WAAD;AAAa,kBAAW,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACR;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,QAAL,GACC,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,IAAI,CAACG,KAAtC,CADD,GAGC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAI,CAACI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBJ,IAAI,CAACG,KAA7B,CAJJ,CADD,CADH,CADF,CADF;AAeD,CAlBD;;KAAMT,U;AAoBNA,UAAU,CAACW,SAAX,GAAuB;AACrB;AACF;AACA;AACER,EAAAA,SAAS,EAAEP,SAAS,CAACgB,MAJA;;AAKrB;AACF;AACA;AACEV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,KAAV,CAAgBC;AARD,CAAvB;AAWA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Breadcrumbs, Typography, Link } from '@material-ui/core';\n\nconst Breadcrumb = props => {\n  const { data, className, ...rest } = props;\n\n  return (\n    <div className={className} {...rest}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        {data.map((item, index) => (\n          <span key={index}>\n            {item.isActive ? (\n              <Typography color=\"textPrimary\">{item.title}</Typography>\n            ) : (\n              <Link href={item.href}>{item.title}</Link>\n            )}\n          </span>\n        ))}\n      </Breadcrumbs>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}