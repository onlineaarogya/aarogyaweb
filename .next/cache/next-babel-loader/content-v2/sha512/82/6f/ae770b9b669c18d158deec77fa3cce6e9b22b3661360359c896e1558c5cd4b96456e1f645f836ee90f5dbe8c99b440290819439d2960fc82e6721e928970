{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Toolbar } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    maxWidth: theme.layout.contentWidth,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(0, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(0, 8)\n    }\n  },\n  logoContainer: {\n    width: 100,\n    height: 28,\n    [theme.breakpoints.up('md')]: {\n      width: 120,\n      height: 32\n    }\n  },\n  logoImage: {\n    // position: 'relative',\n    // top: '-29px',\n    // height: '120px',\n    // width: '160px',\n    top: '-19px',\n    width: '139px',\n    height: '70px',\n    position: 'relative'\n  }\n}));\n\nconst Topbar = (_ref) => {\n  let {\n    themeMode,\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"themeMode\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(Toolbar, _extends({\n    className: clsx(classes.toolbar, className)\n  }, rest), __jsx(\"div\", {\n    className: classes.logoContainer\n  }, __jsx(\"a\", {\n    href: \"/\",\n    title: \"thefront\"\n  }, __jsx(Image, {\n    className: classes.logoImage,\n    src: themeMode === 'light' ? 'http://localhost:3000/assets/logo-blue.png' : 'http://localhost:3000/assets/logo-white.png',\n    alt: \"Oaarogya Logo\",\n    lazy: false\n  }))));\n};\n\nexport default Topbar;","map":null,"metadata":{},"sourceType":"module"}