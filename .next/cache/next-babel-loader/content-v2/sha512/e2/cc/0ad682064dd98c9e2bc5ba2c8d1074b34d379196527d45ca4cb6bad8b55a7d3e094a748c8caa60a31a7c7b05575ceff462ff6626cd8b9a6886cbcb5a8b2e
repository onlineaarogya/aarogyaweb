{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DescriptionCta, SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    overflow: 'hidden',\n    background: '#2d3748',\n    '& section': {\n      padding: '46px 68px'\n    }\n  },\n  textWhite: {\n    color: 'white'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  progress: {\n    color: 'white',\n    width: '80px',\n    height: '80px'\n  },\n  percentage: {\n    width: '100px',\n    height: '100px',\n    lineHeight: '100px',\n    textAlign: 'center',\n    position: 'relative',\n    zIndex: 10,\n    left: '92px',\n    top: '-9px',\n    color: '#fff',\n    fontSize: 'large',\n    fontWeight: 'bold'\n  }\n}));\n\nconst Hero = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState('');\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      if (completed < 100) {\n        setCompleted(completed + 90);\n      }\n    }, 1000);\n  }, []);\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(Section, null, __jsx(DescriptionCta, {\n    title: \"Account Settings\",\n    subtitle: \"Change account information and setting\",\n    primaryCta: __jsx(Box, {\n      position: \"relative\",\n      display: \"inline-flex\"\n    }, __jsx(\"div\", {\n      className: classes.percentage\n    }, completed ? completed + '%' : null), __jsx(CircularProgress, {\n      className: classes.progress,\n      variant: \"static\",\n      value: completed,\n      size: 80,\n      thickness: 5\n    })),\n    align: 'left',\n    titleProps: {\n      className: classes.fontWeightBold,\n      color: 'textPrimary'\n    },\n    subtitleProps: {\n      // color: 'textSecondary',\n      className: classes.textWhite\n    },\n    titleProps: {\n      className: clsx(classes.title, classes.textWhite),\n      variant: 'h3'\n    }\n  })));\n};\n\nexport default Hero; // export default function CircularStatic() {\n//   const [progress, setProgress] = React.useState(60);\n//   React.useEffect(() => {\n//     if (progress !== 60) {\n//       const timer = setInterval(() => {\n//         setProgress(prevProgress =>\n//           prevProgress >= progress ? 0 : prevProgress + 10,\n//         );\n//       }, 400);\n//     }\n//   }, []);\n//   return <Hero value={progress} />;\n// }","map":null,"metadata":{},"sourceType":"module"}