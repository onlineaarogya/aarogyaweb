{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Divider, Grid, TextField, Snackbar, FormControlLabel, Radio, FormControl, FormLabel, RadioGroup } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport AlertMassage from 'components/helper/AlertMessage';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Autocomplete } from '@material-ui/lab';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0\n    },\n    rootTag: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      listStyle: 'none',\n      padding: theme.spacing(0.5),\n      margin: 0\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    },\n    dividerMargin: {\n      margin: theme.spacing(2)\n    },\n    addMoreContender: {\n      display: 'inline-flex',\n      float: 'right'\n    },\n    marginBottom: {\n      marginBottom: theme.spacing(1)\n    },\n    addButton: {\n      height: '40px',\n      position: 'relative',\n      left: '3px'\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function Medical() {\n  var classes = useStyles(); // for medical\n\n  var _React$useState = React.useState([{\n    key: 0,\n    label: 'Diabetes'\n  }, {\n    key: 1,\n    label: 'Porphyria'\n  }, {\n    key: 2,\n    label: 'Prostate Cancer'\n  }, {\n    key: 3,\n    label: 'Campomelic Dysplasia'\n  }, {\n    key: 4,\n    label: 'Ear Infection'\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chipData = _React$useState2[0],\n      setChipData = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      chipDataAdded = _React$useState4[0],\n      setChipDataAdded = _React$useState4[1];\n\n  var handleDelete = function handleDelete(chipToDelete) {\n    return function (data) {\n      setChipDataAdded(function (chips) {\n        return chips.filter(function (chip) {\n          return chip.key !== chipToDelete.key;\n        });\n      });\n    };\n  };\n  /* Item argument contains data for clicked chip component */\n\n\n  var handleClick1 = function handleClick1(data) {\n    return function () {\n      setAddNewMedicalProblem(data.label);\n      setChipDataAdded([].concat(_toConsumableArray(chipDataAdded), [{\n        key: chipDataAdded.length + 1,\n        label: data.label\n      }]));\n      setOpenMedicalDialog(true);\n    };\n  }; // useEffect(() => {\n  //   alert('changed');\n  // }, [chipDataAdded]);\n  // console.log(chipDataAdded);\n\n\n  var _useState = useState(''),\n      addNewMedicalProblem = _useState[0],\n      setAddNewMedicalProblem = _useState[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      status = _React$useState6[0],\n      setStatusBase = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dialogData = _React$useState8[0],\n      setDialogData = _React$useState8[1]; // medical problems dialogBox\n\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      openMedicalDialog = _React$useState10[0],\n      setOpenMedicalDialog = _React$useState10[1];\n\n  var handleClose_m_dialog = function handleClose_m_dialog() {\n    setOpenMedicalDialog(false);\n  }; // add new medical problem dialog\n\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      openNewMedicalDialog = _React$useState12[0],\n      setOpenNewMedicalDialog = _React$useState12[1];\n\n  var handleClose_NewMedical_Problem_dialog = function handleClose_NewMedical_Problem_dialog() {\n    setOpenNewMedicalDialog(false);\n  };\n\n  var open_dialog_for_new_medical_problem = function open_dialog_for_new_medical_problem() {\n    setOpenNewMedicalDialog(true);\n  };\n\n  return __jsx(\"div\", null, status ? __jsx(AlertMassage, {\n    key: status.key,\n    message: status.msg,\n    status: status.status\n  }) : null, __jsx(Dialog, {\n    open: openMedicalDialog,\n    onClose: handleClose_m_dialog,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(\"div\", null, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, addNewMedicalProblem ? addNewMedicalProblem : null, \" - Duration\"), __jsx(DialogContent, null, __jsx(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    style: {\n      flexDirection: 'inherit'\n    } // value={value}\n    // onChange={handleChange}\n\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Radio // checked={selectedValue === 'a'}\n    // onChange={handleChange}\n    , {\n      color: \"primary\",\n      value: \"a\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'A'\n      }\n    }),\n    label: \"0-3 Months\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\"\n    }),\n    label: \"3-6 Months\",\n    value: \"b\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'B'\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\",\n      value: \"c\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'C'\n      }\n    }),\n    label: \"6-12 Months\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\",\n      value: \"d\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'D'\n      }\n    }),\n    label: \"6-12 Months\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\",\n      value: \"e\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'E'\n      }\n    }),\n    label: \"6-12 Months\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\",\n      value: \"f\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'F'\n      }\n    }),\n    label: \"6-12 Months\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\",\n      value: \"g\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'G'\n      }\n    }),\n    label: \"6-12 Months\"\n  })), __jsx(Divider, null), __jsx(Typography, {\n    variant: \"h6\"\n  }, addNewMedicalProblem ? addNewMedicalProblem : null, \" - Medication\"), __jsx(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    style: {\n      flexDirection: 'inherit'\n    } // value={value}\n    // onChange={handleChange}\n\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Radio // checked={selectedValue === 'a'}\n    // onChange={handleChange}\n    , {\n      color: \"primary\",\n      value: \"yes\",\n      name: \"radio-button-demo\",\n      inputProps: {\n        'aria-label': 'Yes'\n      }\n    }),\n    label: \"Yes\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Radio, {\n      color: \"primary\"\n    }),\n    label: \"No\",\n    value: \"no\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'No'\n    }\n  }))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose_m_dialog,\n    color: \"primary\"\n  }, \"Done\")))), __jsx(Dialog, {\n    open: openNewMedicalDialog,\n    onClose: handleClose_NewMedical_Problem_dialog,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"sm\",\n    fullWidth: \"sm\"\n  }, __jsx(\"div\", null, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Add New Medical Problems\"), __jsx(DialogContent, null, __jsx(Autocomplete, {\n    multiple: true,\n    id: \"tags-filled\",\n    options: top100Films.map(function (option) {\n      return option.title;\n    }) // defaultValue={[top100Films[13].title]}\n    ,\n    freeSolo: true,\n    renderTags: function renderTags(value, getTagProps) {\n      return value.map(function (option, index) {\n        return __jsx(Chip, _extends({\n          variant: \"outlined\",\n          label: option\n        }, getTagProps({\n          index: index\n        })));\n      });\n    },\n    onChange: function onChange(e, option, reason) {\n      // console.log(reason);\n      if (reason == 'select-option' || reason == 'create-option') {\n        //  console.log(e.currentTarget.innerText);\n        setAddNewMedicalProblem(option[option.length - 1]);\n        setChipDataAdded([].concat(_toConsumableArray(chipDataAdded), [{\n          key: chipDataAdded.length + 1,\n          label: option[option.length - 1]\n        }]));\n        setOpenMedicalDialog(true);\n      }\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"outlined\",\n        label: \"Add New\",\n        fullWidth: \"true\",\n        placeholder: \"Medical Problems\" // style={{ width: '400px' }}\n\n      }));\n    }\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose_NewMedical_Problem_dialog,\n    color: \"primary\"\n  }, \"Done\")))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"Medical History\")), __jsx(\"br\", null), __jsx(Accordion, {\n    defaultExpanded: true\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"medicalProblem\",\n    id: \"medicalProblem\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Medial Problem\"), chipDataAdded.length !== 0 ? __jsx(Typography, {\n    className: classes.secondaryHeading\n  }, chipDataAdded.map(function (data) {\n    return data.label;\n  }).join(', ')) : null), __jsx(AccordionDetails, null, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12\n  }, chipDataAdded.map(function (data) {\n    var icon;\n    return __jsx(\"span\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      clickable: true // onClick={handleClick1(data)}\n      ,\n      label: data.label,\n      color: \"primary\",\n      variant: \"outlined\",\n      onDelete: // data.label === 'React' ? undefined : handleDelete(data)\n      handleDelete(data),\n      className: classes.chip\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    md: 12,\n    p: 10,\n    xs: 12,\n    className: classes.dividerMargin\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12\n  }, chipData.map(function (data) {\n    var icon;\n    return __jsx(\"span\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      clickable: true,\n      onClick: handleClick1(data),\n      label: data.label,\n      variant: \"outlined\" //   onDelete={\n      //     // data.label === 'React' ? undefined : handleDelete(data)\n      //     handleDelete(data)\n      //   }\n      ,\n      className: classes.chip\n    }));\n  }), __jsx(Chip, {\n    label: \"+ Add More\",\n    clickable: true,\n    onClick: open_dialog_for_new_medical_problem\n  }))))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"allergies\",\n    id: \"allergies\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Allergies\"), chipDataAdded.length !== 0 ? __jsx(Typography, {\n    className: classes.secondaryHeading\n  }, chipDataAdded.map(function (data) {\n    return data.label;\n  }).join(', ')) : null), __jsx(AccordionDetails, null, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12\n  }, chipDataAdded.map(function (data) {\n    var icon;\n    return __jsx(\"span\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      clickable: true // onClick={handleClick1(data)}\n      ,\n      label: data.label,\n      color: \"primary\",\n      variant: \"outlined\",\n      onDelete: // data.label === 'React' ? undefined : handleDelete(data)\n      handleDelete(data),\n      className: classes.chip\n    }));\n  })), __jsx(Grid, {\n    item: true,\n    md: 12,\n    p: 10,\n    xs: 12,\n    className: classes.dividerMargin\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12\n  }, chipData.map(function (data) {\n    var icon;\n    return __jsx(\"span\", {\n      key: data.key\n    }, __jsx(Chip, {\n      icon: icon,\n      clickable: true,\n      onClick: handleClick1(data),\n      label: data.label,\n      variant: \"outlined\" //   onDelete={\n      //     // data.label === 'React' ? undefined : handleDelete(data)\n      //     handleDelete(data)\n      //   }\n      ,\n      className: classes.chip\n    }));\n  }), __jsx(Chip, {\n    label: \"+ Add More\",\n    clickable: true,\n    onClick: open_dialog_for_new_medical_problem\n  }))))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"allergies\",\n    id: \"allergies\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Life Style\"))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"family-history\",\n    id: \"family-history\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Family History\"))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"procedure\",\n    id: \"procedure\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Procedure\"))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"risk-factor\",\n    id: \"isk-factor\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Risk Factor\"))), __jsx(Accordion, null, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"Other\",\n    id: \"Other\"\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Other\"))));\n}\nvar top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}];","map":null,"metadata":{},"sourceType":"module"}