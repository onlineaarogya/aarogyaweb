{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/components/atoms/DarkModeToggler/DarkModeToggler.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, colors } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative'\n  },\n  border: {\n    width: theme.spacing(5),\n    height: theme.spacing(2),\n    borderRadius: theme.spacing(3),\n    border: '3px solid',\n    borderColor: theme.palette.divider,\n    backgroundColor: 'transparent',\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(6),\n      height: theme.spacing(3)\n    }\n  },\n  borderDark: {\n    borderColor: colors.indigo[700]\n  },\n  modeToggler: {\n    position: 'absolute',\n    top: `-${theme.spacing(1 / 2)}px`,\n    left: `-${theme.spacing(1 / 2)}px`,\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    borderRadius: '50%',\n    backgroundColor: theme.palette.text.primary,\n    transition: `transform .3s cubic-bezier(.4,.03,0,1)`,\n    cursor: 'pointer',\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4)\n    }\n  },\n  modeTogglerDark: {\n    transform: `translateX(${theme.spacing(3)}px)`,\n    backgroundColor: colors.indigo[900]\n  },\n  modeTogglerIcon: {\n    fill: theme.palette.secondary.main,\n    marginTop: theme.spacing(1 / 2),\n    marginLeft: theme.spacing(1 / 2),\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(1),\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n/**\n * Component to display the dark mode toggler\n *\n * @param {Object} props\n */\n\nconst DarkModeToggler = (_ref) => {\n  let {\n    themeMode = 'light',\n    onClick,\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"themeMode\", \"onClick\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"span\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: clsx(classes.border, themeMode === 'dark' ? classes.borderDark : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: clsx(classes.modeToggler, themeMode === 'dark' ? classes.modeTogglerDark : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    className: classes.modeTogglerIcon,\n    \"aria-hidden\": \"true\",\n    width: \"14\",\n    height: \"13\",\n    viewBox: \"0 0 14 13\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.52208 7.71754C7.5782 7.71754 10.0557 5.24006 10.0557 2.18394C10.0557 1.93498 10.0392 1.68986 10.0074 1.44961C9.95801 1.07727 10.3495 0.771159 10.6474 0.99992C12.1153 2.12716 13.0615 3.89999 13.0615 5.89383C13.0615 9.29958 10.3006 12.0605 6.89485 12.0605C3.95334 12.0605 1.49286 10.001 0.876728 7.24527C0.794841 6.87902 1.23668 6.65289 1.55321 6.85451C2.41106 7.40095 3.4296 7.71754 4.52208 7.71754Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }))));\n};\n\nDarkModeToggler.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * The theme mode\n   */\n  themeMode: PropTypes.string,\n\n  /**\n   * Theme toggler function\n   */\n  onClick: PropTypes.func.isRequired\n};\nexport default DarkModeToggler;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/components/atoms/DarkModeToggler/DarkModeToggler.js"],"names":["React","clsx","PropTypes","makeStyles","colors","useStyles","theme","root","position","border","width","spacing","height","borderRadius","borderColor","palette","divider","backgroundColor","breakpoints","up","borderDark","indigo","modeToggler","top","left","text","primary","transition","cursor","modeTogglerDark","transform","modeTogglerIcon","fill","secondary","main","marginTop","marginLeft","DarkModeToggler","themeMode","onClick","className","rest","classes","propTypes","string","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n  },\n  border: {\n    width: theme.spacing(5),\n    height: theme.spacing(2),\n    borderRadius: theme.spacing(3),\n    border: '3px solid',\n    borderColor: theme.palette.divider,\n    backgroundColor: 'transparent',\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(6),\n      height: theme.spacing(3),\n    }\n  },\n  borderDark: {\n    borderColor: colors.indigo[700],\n  },\n  modeToggler: {\n    position: 'absolute',\n    top: `-${theme.spacing(1/2)}px`,\n    left: `-${theme.spacing(1/2)}px`,\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    borderRadius: '50%',\n    backgroundColor: theme.palette.text.primary,\n    transition: `transform .3s cubic-bezier(.4,.03,0,1)`,\n    cursor: 'pointer',\n    [theme.breakpoints.up('md')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n    }\n  },\n  modeTogglerDark: {\n    transform: `translateX(${theme.spacing(3)}px)`,\n    backgroundColor: colors.indigo[900],\n  },\n  modeTogglerIcon: {\n    fill: theme.palette.secondary.main,\n    marginTop: theme.spacing(1/2),\n    marginLeft: theme.spacing(1/2),\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n    }\n  },\n}));\n\n/**\n * Component to display the dark mode toggler\n *\n * @param {Object} props\n */\nconst DarkModeToggler = ({ themeMode = 'light', onClick, className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <span className={clsx(classes.root, className)} {...rest} onClick={onClick}>\n      <div\n        className={clsx(\n          classes.border,\n          themeMode === 'dark' ? classes.borderDark : '',\n        )}\n      />\n      <div\n        className={clsx(\n          classes.modeToggler,\n          themeMode === 'dark' ? classes.modeTogglerDark : '',\n        )}>\n        <svg\n          className={classes.modeTogglerIcon}\n          aria-hidden=\"true\"\n          width=\"14\"\n          height=\"13\"\n          viewBox=\"0 0 14 13\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M4.52208 7.71754C7.5782 7.71754 10.0557 5.24006 10.0557 2.18394C10.0557 1.93498 10.0392 1.68986 10.0074 1.44961C9.95801 1.07727 10.3495 0.771159 10.6474 0.99992C12.1153 2.12716 13.0615 3.89999 13.0615 5.89383C13.0615 9.29958 10.3006 12.0605 6.89485 12.0605C3.95334 12.0605 1.49286 10.001 0.876728 7.24527C0.794841 6.87902 1.23668 6.65289 1.55321 6.85451C2.41106 7.40095 3.4296 7.71754 4.52208 7.71754Z\" />\n        </svg>\n      </div>\n    </span>\n  );\n};\n\nDarkModeToggler.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The theme mode\n   */\n  themeMode: PropTypes.string,\n  /**\n   * Theme toggler function\n   */\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default DarkModeToggler;\n"]},"metadata":{},"sourceType":"module"}