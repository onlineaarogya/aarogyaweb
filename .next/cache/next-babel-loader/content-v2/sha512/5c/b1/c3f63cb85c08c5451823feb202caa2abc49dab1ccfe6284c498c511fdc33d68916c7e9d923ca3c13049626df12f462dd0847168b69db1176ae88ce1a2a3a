{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Divider, Button, List, ListItem, ListItemAvatar, Avatar, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { SectionHeader, DescriptionCta } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nimport SearchBox from '../../../IndexView/components/Hero';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& .description-cta__button-group': {\n        flexWrap: 'nowrap'\n      }\n    },\n    title: {\n      fontWeight: 'bold'\n    },\n    divider: _defineProperty({\n      margin: theme.spacing(3, 0)\n    }, theme.breakpoints.up('md'), {// margin: theme.spacing(5, 0),\n    }),\n    dividerBottom: {\n      position: 'relative',\n      left: '82px',\n      width: '89%',\n      top: '-17px'\n    },\n    textWhite: {\n      color: 'white'\n    },\n    cardHighlighted: {\n      background: theme.palette.primary.dark\n    },\n    checkBox: {\n      background: 'transparent',\n      borderRadius: 0\n    },\n    list: _defineProperty({\n      marginBottom: theme.spacing(3)\n    }, theme.breakpoints.up('md'), {\n      marginBottom: theme.spacing(4)\n    }),\n    webinarAvatar: {\n      width: 200,\n      height: 200,\n      border: \"\".concat(theme.spacing(1), \"px solid \").concat(theme.palette.background.paper),\n      boxShadow: \"0 2px 10px 0 \".concat(theme.palette.cardShadow),\n      borderRadius: theme.spacing(2)\n    },\n    listGrid: {\n      overflow: 'hidden',\n      marginBottom: theme.spacing(3),\n      '&:last-child': {\n        marginBottom: theme.spacing(0)\n      }\n    },\n    filterBox: {\n      border: \"\".concat(theme.spacing(1), \"px solid \").concat(theme.palette.background.paper),\n      boxShadow: \"0 0px 4px 0 \".concat(theme.palette.cardShadow),\n      borderRadius: theme.spacing(1),\n      padding: '15px 15px'\n    }\n  };\n});\n\nvar Main = function Main(props) {\n  var data = props.data,\n      className = props.className,\n      rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // Checkbox Group\n\n  var _React$useState = React.useState({\n    chocolate: true,\n    vanilla: false,\n    strawberry: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flavors = _React$useState2[0],\n      setFlavors = _React$useState2[1];\n\n  var chocolate = flavors.chocolate,\n      vanilla = flavors.vanilla,\n      strawberry = flavors.strawberry;\n\n  var handleFlavorChange = function handleFlavorChange(event) {\n    setFlavors(_objectSpread(_objectSpread({}, flavors), {}, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(SearchBox, null), __jsx(\"br\", null), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(\"div\", {\n    className: classes.filterBox\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"Filter Search Results\"), __jsx(FormGroup, null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: chocolate,\n      onChange: handleFlavorChange,\n      name: \"chocolate\"\n    }),\n    label: \"Chocolate\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: vanilla,\n      onChange: handleFlavorChange,\n      name: \"vanilla\"\n    }),\n    label: \"Vanilla\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\"\n    }),\n    label: \"Strawberry\"\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, data.map(function (item, index) {\n    return __jsx(\"div\", null, __jsx(Grid, {\n      key: index,\n      item: true,\n      container: true,\n      \"data-aos\": 'fade-up',\n      justify: \"space-between\",\n      spacing: isMd ? 4 : 2,\n      className: classes.listGrid,\n      direction: \"row-reverse\"\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 8\n    }, __jsx(SectionHeader // label={item.authorName}\n    , {\n      titleVariant: \"h5\",\n      title: item.authorName,\n      subtitle: \"1st floor , princess park , white house lane , bechar road , valsad, Valsad\",\n      ctaGroup: [__jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: isMd ? 'large' : 'medium',\n        fullWidth: true\n      }, \"Book now\"), __jsx(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        size: isMd ? 'large' : 'medium',\n        fullWidth: true\n      }, \"Learn More\")],\n      align: isMd ? 'left' : 'center',\n      disableGutter: true\n    })), __jsx(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 12,\n      md: 4,\n      justify: isMd ? 'flex-end' : 'center',\n      alignItems: \"center\"\n    }, __jsx(Avatar, _extends({}, item.authorPhoto, {\n      alt: item.authorName,\n      className: classes.webinarAvatar\n    })))), __jsx(Divider, {\n      className: (classes.divider, classes.dividerBottom)\n    }));\n  })))));\n};\n\nexport default Main;","map":null,"metadata":{},"sourceType":"module"}