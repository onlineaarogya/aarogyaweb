{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    textDecoration: 'none'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  icon: {\n    padding: 0,\n    marginLeft: theme.spacing(1),\n    '&:hover': {\n      background: 'transparent'\n    }\n  }\n}));\n/**\n * Component to display the \"Learn More\" link\n *\n * @param {Object} props\n */\n\nconst LearnMoreLink = props => {\n  const {\n    color,\n    component,\n    variant,\n    title,\n    href,\n    className,\n    iconProps,\n    typographyProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"color\", \"component\", \"variant\", \"title\", \"href\", \"className\", \"iconProps\", \"typographyProps\"]);\n\n  const classes = useStyles();\n\n  const children = __jsx(React.Fragment, null, __jsx(Typography, _extends({\n    component: \"span\",\n    className: clsx('learn-more-link__typography', classes.title),\n    variant: variant,\n    color: color || 'primary'\n  }, typographyProps), title), __jsx(IconButton, _extends({\n    className: clsx('learn-more-link__icon-button', classes.icon),\n    color: color || 'primary'\n  }, iconProps), __jsx(ArrowRightAltIcon, {\n    className: \"learn-more-link__arrow\"\n  })));\n\n  return __jsx(\"a\", _extends({\n    href: href,\n    className: clsx('learn-more-link', classes.root, className)\n  }, rest), children);\n};\n\nLearnMoreLink.defaultProps = {\n  variant: 'subtitle1',\n  href: '#',\n  typographyProps: {},\n  iconProps: {},\n  component: 'a'\n};\nexport default LearnMoreLink;","map":null,"metadata":{},"sourceType":"module"}