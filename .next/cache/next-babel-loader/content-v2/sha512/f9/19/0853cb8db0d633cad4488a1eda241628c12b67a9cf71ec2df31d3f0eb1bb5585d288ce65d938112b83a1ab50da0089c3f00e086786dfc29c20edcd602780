{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { AppBar, Box, Hidden, IconButton, Toolbar, List, ListItem, Button, makeStyles } from '@material-ui/core';\nimport { Image, DarkModeToggler } from 'components/atoms';\nimport MenuIcon from '@material-ui/icons/Menu';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  logoContainer: {\n    width: 100,\n    height: 28,\n    [theme.breakpoints.up('md')]: {\n      width: 120,\n      height: 32\n    }\n  },\n  logoImage: {\n    width: '100%',\n    height: '100%'\n  },\n  navigationContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  listItem: {\n    paddingRight: 0\n  },\n  listItemText: {\n    flex: '0 0 auto',\n    whiteSpace: 'nowrap'\n  },\n  listItemButton: {\n    whiteSpace: 'nowrap'\n  },\n  iconButton: {\n    paddingRight: 0,\n    '&:hover': {\n      background: 'transparent'\n    }\n  }\n}));\n\nconst TopBar = (_ref) => {\n  let {\n    className,\n    onMobileNavOpen,\n    themeToggler,\n    themeMode\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"onMobileNavOpen\", \"themeToggler\", \"themeMode\"]);\n\n  const classes = useStyles();\n  return __jsx(AppBar, _extends({\n    className: clsx(classes.root, className),\n    elevation: 0,\n    color: \"inherit\"\n  }, rest), __jsx(Toolbar, null, __jsx(\"div\", {\n    className: classes.logoContainer\n  }, __jsx(\"a\", {\n    href: \"/\",\n    title: \"thefront\"\n  }, __jsx(Image, {\n    className: classes.logoImage,\n    src: themeMode === 'light' ? 'https://assets.maccarianagency.com/the-front/logos/logo.svg' : 'https://assets.maccarianagency.com/the-front/logos/logo-negative.svg',\n    alt: \"thefront\",\n    lazy: false\n  }))), __jsx(Box, {\n    flexGrow: 1\n  }), __jsx(DarkModeToggler, {\n    themeMode: themeMode,\n    onClick: () => themeToggler()\n  }), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(List, {\n    disablePadding: true,\n    className: classes.navigationContainer\n  }, __jsx(ListItem, {\n    className: clsx(classes.listItem, 'menu-item--no-dropdown')\n  }, __jsx(Button, {\n    className: classes.listItemText,\n    component: \"a\",\n    href: \"/\",\n    variant: \"outlined\"\n  }, \"SEE ALL PAGES\")), __jsx(ListItem, {\n    className: clsx(classes.listItem, 'menu-item--no-dropdown')\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"a\",\n    target: \"blank\",\n    href: \"https://material-ui.com/store/items/the-front-landing-page/\",\n    className: classes.listItemButton\n  }, \"Buy Now\")))), __jsx(Hidden, {\n    mdUp: true\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    onClick: onMobileNavOpen,\n    className: classes.iconButton,\n    disableRipple: true\n  }, __jsx(MenuIcon, null)))));\n};\n\nexport default TopBar;","map":null,"metadata":{},"sourceType":"module"}