{"ast":null,"code":"import _regeneratorRuntime from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField, MenuItem, LinearProgress } from '@material-ui/core';\nimport validate from 'validate.js';\nimport { LearnMoreLink } from 'components/atoms';\nimport Link from 'next/link';\nimport { getPatientRegister } from '../../../../components/helper/PatientApi';\nimport AlertMassage from '../../../../components/helper/AlertMessage';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    }\n  };\n});\nvar schema = {\n  mobile: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 300\n    }\n  },\n  firstName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  lastName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  title: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    } // length: {\n    //   minimum: 8,\n    // },\n\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required',\n      email: true\n    },\n    length: {\n      maximum: 120\n    }\n  }\n};\n\nvar Form = function Form() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formState = _React$useState2[0],\n      setFormState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      subming = _React$useState4[0],\n      setSubiting = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      status = _React$useState6[0],\n      setStatusBase = _React$useState6[1];\n\n  React.useEffect(function () {\n    var errors = validate(formState.values, schema);\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        isValid: errors ? false : true,\n        errors: errors || {}\n      });\n    });\n  }, [formState.values]);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        values: _objectSpread(_objectSpread({}, formState.values), {}, _defineProperty({}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value)),\n        touched: _objectSpread(_objectSpread({}, formState.touched), {}, _defineProperty({}, event.target.name, true))\n      });\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setSubiting(true);\n\n              if (!formState.isValid) {\n                _context.next = 9;\n                break;\n              }\n\n              // window.location.replace('/');\n              data = JSON.stringify({\n                \"title\": formState.values.title,\n                \"first_name\": formState.values.firstName,\n                \"middle_name\": \"\",\n                \"last_name\": formState.values.lastName,\n                \"mobile\": formState.values.mobile,\n                \"email\": formState.values.email\n              });\n              _context.next = 6;\n              return getPatientRegister(data);\n\n            case 6:\n              res = _context.sent;\n\n              if (res.success) {\n                setStatusBase('');\n                setStatusBase({\n                  key: 22,\n                  status: 'success',\n                  msg: 'Account has been created successfully.'\n                });\n              } else {\n                // setStatusBase('');\n                // // console.log('hello error else');\n                // setStatusBase({\n                //   key: 22,\n                //   status: 'error',\n                //   msg:res.message,\n                // });\n                setStatusBase('');\n                setStatusBase({\n                  key: 22,\n                  status: 'error',\n                  msg: res.errors.email ? res.errors.email : '' + res.errors.mobile ? ' ' + res.errors.mobile : ''\n                });\n              } // console.log('res', res);\n\n\n              setSubiting(false);\n\n            case 9:\n              setFormState(function (formState) {\n                return _objectSpread(_objectSpread({}, formState), {}, {\n                  touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var hasError = function hasError(field) {\n    return formState.touched[field] && formState.errors[field] ? true : false;\n  }; // console.log('api Url', process.env.NEXT_PUBLIC_PATIENT_API_URL);\n\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, status ? __jsx(AlertMassage, {\n    key: status.key,\n    message: status.msg,\n    status: status.status\n  }) : null, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2\n  }, __jsx(TextField // placeholder=\"Firs\"\n  , {\n    label: \"Title *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"title\",\n    fullWidth: true,\n    select: true,\n    helperText: hasError('title') ? formState.errors.title[0] : null,\n    error: hasError('title'),\n    onChange: handleChange // type=\"title\"\n    ,\n    value: formState.values.title || ''\n  }, __jsx(MenuItem, {\n    value: \"Mr\"\n  }, \"Mr\"), __jsx(MenuItem, {\n    value: \"Miss\"\n  }, \"Miss\"))), __jsx(Grid, {\n    item: true,\n    xs: 5\n  }, __jsx(TextField, {\n    placeholder: \"First name\",\n    label: \"First name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"firstName\",\n    fullWidth: true,\n    helperText: hasError('firstName') ? formState.errors.firstName[0] : null,\n    error: hasError('firstName'),\n    onChange: handleChange,\n    type: \"firstName\",\n    value: formState.values.firstName || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 5\n  }, __jsx(TextField, {\n    placeholder: \"Last name\",\n    label: \"Last name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"lastName\",\n    fullWidth: true,\n    helperText: hasError('lastName') ? formState.errors.lastName[0] : null,\n    error: hasError('lastName'),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.lastName || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    placeholder: \"Mobile\",\n    label: \"Mobile *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"mobile\",\n    fullWidth: true,\n    helperText: hasError('mobile') ? formState.errors.mobile[0] : null,\n    error: hasError('mobile'),\n    onChange: handleChange,\n    type: \"mobile\",\n    value: formState.values.mobile || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    placeholder: \"Email\",\n    label: \"Email *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    error: hasError('email'),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"i\", null, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"Fields that are marked with * sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true\n  }, \"Submit\"), subming ? __jsx(LinearProgress, null) : null), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, \"Already have an account?\", __jsx(Link, {\n    href: \"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/signin\")\n  }, __jsx(LearnMoreLink, {\n    title: \"Sign in\"\n  })))))));\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}