{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, ListItemText, Avatar } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nimport { Section, Parallax } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    background: 'white',\n    overflow: 'hidden'\n  },\n  sectionWrapper: {\n    height: 239,\n    background: 'url(http://localhost:3000/assets/img/banner.png) no-repeat left #ed4550'\n  },\n  textWhite: {\n    color: '#2d3748'\n  },\n  title: {\n    fontWeight: 'bold',\n    position: 'relative',\n    top: 24\n  },\n  section: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nconst Hero = props => {\n  const {\n    className,\n    title,\n    author\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"title\", \"author\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(Parallax, {\n    backgroundImage: \"assets/img/blogArticle.jpeg\"\n  }, __jsx(\"div\", {\n    className: classes.sectionWrapper\n  }, __jsx(Section, {\n    className: classes.section\n  }, __jsx(React.Fragment, null, __jsx(SectionHeader, {\n    title: props.title,\n    align: \"left\",\n    \"data-aos\": \"fade-up\",\n    titleProps: {\n      className: clsx(classes.title, classes.textWhite),\n      variant: 'h3'\n    },\n    subtitleProps: {\n      className: classes.textWhite\n    }\n  }), __jsx(List, {\n    disablePadding: true\n  }, __jsx(ListItem, {\n    disableGutters: true\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar\n  }, __jsx(Avatar, _extends({}, author.photo, {\n    alt: author.name,\n    className: classes.avatar\n  }))), __jsx(ListItemText, {\n    primary: `Published by ${author.name}`,\n    secondary: `on ${author.date}`,\n    primaryTypographyProps: {\n      className: classes.textWhite,\n      variant: 'subtitle1'\n    },\n    secondaryTypographyProps: {\n      className: classes.textWhite,\n      variant: 'subtitle1'\n    }\n  }))))))));\n};\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}