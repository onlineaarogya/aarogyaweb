{"ast":null,"code":"import _extends from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { TextField, InputAdornment, useMediaQuery, Grid, Typography, Button, NoSsr, colors } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport { Section, CardBase } from 'components/organisms';\nimport Link from 'next/link';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    hero: {\n      background: theme.palette.alternate.dark\n    },\n    child: {\n      width: '90%',\n      position: 'relative',\n      left: '69px',\n      boxShadow: '0 2px 0px 0 rgb(23 70 161 / 11%)',\n      border: 'none',\n      '& .MuiCardContent-root': {\n        padding: '16px 16px'\n      }\n    },\n    heroWrapper: {\n      position: 'relative',\n      padding: '8px 0px'\n    },\n    heroImageContainer: _defineProperty({\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      bottom: 0,\n      height: '100%',\n      width: '100%',\n      // background:\n      //   'url(https://assets.maccarianagency.com/the-front/photos/people/designer.png) no-repeat right bottom',\n      // backgroundSize: 'contain',\n      display: 'none'\n    }, theme.breakpoints.up('sm'), {\n      display: 'block'\n    }),\n    heroGrid: {\n      maxWidth: 926\n    },\n    searchGrid: {\n      zIndex: 3\n    },\n    searchGridText: {\n      maxWidth: 605\n    },\n    textField: {\n      width: '100%'\n    },\n    searchButton: {\n      width: '100%',\n      height: '70%',\n      position: 'relative',\n      top: '15px'\n    },\n    searchIcon: {\n      color: colors.grey[600]\n    },\n    title: {\n      fontWeight: 'bold'\n    }\n  };\n});\n\nvar Hero = function Hero() {\n  var classes = useStyles();\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  var options = ['a', 'b', 'c'];\n  return __jsx(\"section\", null, __jsx(Section, {\n    className: classes.heroWrapper\n  }, __jsx(CardBase, {\n    variant: \"outlined\",\n    withShadow: true,\n    liftUp: true,\n    className: classes.child\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(Autocomplete, {\n    id: \"location\",\n    freeSolo: true,\n    options: top100Films.map(function (option) {\n      return option.title;\n    }),\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        margin: \"normal\",\n        placeholder: \"Location\",\n        variant: \"outlined\",\n        className: classes.textField,\n        size: isMd ? 'medium' : 'small',\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          startAdornment: __jsx(React.Fragment, null, __jsx(LocationOnOutlinedIcon, null), params.InputProps.startAdornment)\n        })\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Autocomplete, {\n    id: \"search\",\n    freeSolo: true,\n    options: top100Films.map(function (option) {\n      return option.title;\n    }),\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        margin: \"normal\",\n        placeholder: \"Search doctor, Clinic, Symptoms, Specialty etc.\",\n        variant: \"outlined\",\n        className: classes.textField,\n        size: isMd ? 'medium' : 'small',\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          startAdornment: __jsx(React.Fragment, null, __jsx(SearchOutlinedIcon, null), params.InputProps.startAdornment)\n        })\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 2\n  }, __jsx(Link, {\n    href: \"doctor-search\"\n  }, __jsx(Button, {\n    className: classes.searchButton,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Search\")))))));\n}; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nvar top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}