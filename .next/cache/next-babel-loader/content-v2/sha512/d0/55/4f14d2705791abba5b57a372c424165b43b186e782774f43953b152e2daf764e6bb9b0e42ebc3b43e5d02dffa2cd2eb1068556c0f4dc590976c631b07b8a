{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Button, Divider } from '@material-ui/core';\nimport MetaTitle from 'components/helper/MetaTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Link from 'next/link';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n\nconst ViewFamilyDoctor = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState('');\n\n  const fetchData = async () => {\n    const req = await fetch('https://randomuser.me/api/?gender=male&results=100');\n    const newData = await req.json();\n    return setData(newData.results);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [0]);\n  const rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }];\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(MetaTitle, {\n    title: \"View Family Doctor\",\n    metaKeyWord: \"\",\n    metaDescription: \"\"\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.titleCta\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"Family Doctor\"), __jsx(Link, {\n    href: `${process.env.NEXT_PUBLIC_BASE_URL}/account?pid=add-family-doctor`\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\"\n  }, __jsx(AddIcon, null), \" Add Family Doctor\")))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Divider, null)), __jsx(TableContainer, {\n    component: Paper\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n    component: \"th\"\n  }, \"Name\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"Mobile Number\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"email\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"Specialization\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"State\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"City\"), __jsx(TableCell, {\n    align: \"right\"\n  }, \"Address\"))), __jsx(TableBody, null, rows.map(row => __jsx(TableRow, {\n    key: row.id\n  }, __jsx(TableCell, null, row.firstName), __jsx(TableCell, {\n    align: \"right\"\n  }, row.lastName), __jsx(TableCell, {\n    align: \"right\"\n  }, row.age))))))));\n};\n\nexport default ViewFamilyDoctor;","map":null,"metadata":{},"sourceType":"module"}