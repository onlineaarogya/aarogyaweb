{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Coworking/components/Community/Community.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Button, Avatar } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(theme => ({\n  galleryMedia: {\n    width: 60,\n    height: 60,\n    marginLeft: theme.spacing(-2),\n    border: `3px solid ${theme.palette.background.paper}`,\n    '&:first-child': {\n      marginLeft: 0\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      height: 100\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 140,\n      height: 140\n    }\n  }\n}));\n\nconst Community = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"Join our community\",\n    subtitle: \"Over +8000 who use our coworking spaces to make their dreams come true.\",\n    ctaGroup: [__jsx(Button, {\n      variant: \"contained\",\n      size: isMd ? 'large' : 'medium',\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Book now\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Avatar, _extends({\n    key: index,\n    className: classes.galleryMedia,\n    alt: item.title\n  }, item.image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })))));\n};\n\nCommunity.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Community;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Coworking/components/Community/Community.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Button","Avatar","SectionHeader","useStyles","theme","galleryMedia","width","height","marginLeft","spacing","border","palette","background","paper","breakpoints","up","Community","props","data","className","rest","classes","isMd","defaultMatches","map","item","index","title","image","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useMediaQuery, Grid, Button, Avatar } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\n\nconst useStyles = makeStyles(theme => ({\n  galleryMedia: {\n    width: 60,\n    height: 60,\n    marginLeft: theme.spacing(-2),\n    border: `3px solid ${theme.palette.background.paper}`,\n    '&:first-child': {\n      marginLeft: 0,\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      height: 100,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 140,\n      height: 140,\n    },\n  },\n}));\n\nconst Community = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Join our community\"\n        subtitle=\"Over +8000 who use our coworking spaces to make their dreams come true.\"\n        ctaGroup={[\n          <Button\n            variant=\"contained\"\n            size={isMd ? 'large' : 'medium'}\n            color=\"primary\"\n          >\n            Book now\n          </Button>,\n        ]}\n      />\n      <Grid container justify=\"center\" data-aos=\"fade-up\">\n        {data.map((item, index) => (\n          <Avatar\n            key={index}\n            className={classes.galleryMedia}\n            alt={item.title}\n            {...item.image}\n          />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCommunity.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Community;\n"]},"metadata":{},"sourceType":"module"}