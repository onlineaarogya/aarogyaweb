{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/layouts/DocsLayout/components/Navbar/components/NavItem/NavItem.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { parse } from 'query-string';\nimport PropTypes from 'prop-types';\nimport { Typography, ListItem, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    textTransform: 'none',\n    width: '100%',\n    color: theme.palette.text.primary,\n    '&:hover': {\n      background: 'transparent',\n      color: theme.palette.primary.main\n    }\n  },\n  itemActive: {\n    color: theme.palette.primary.main,\n    '& span': {\n      fontWeight: 700\n    }\n  }\n}));\n\nconst getComponentId = () => parse(window.location.search).component || 'introduction';\n\nconst NavItem = (_ref) => {\n  let {\n    className,\n    href,\n    icon: Icon,\n    title,\n    id\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"href\", \"icon\", \"title\", \"id\"]);\n\n  const classes = useStyles();\n  return __jsx(ListItem, _extends({\n    className: clsx(classes.item, getComponentId() === id ? classes.itemActive : '', className),\n    component: 'a',\n    href: href\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.string,\n  id: PropTypes.string\n};\nexport default NavItem;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/layouts/DocsLayout/components/Navbar/components/NavItem/NavItem.js"],"names":["React","clsx","parse","PropTypes","Typography","ListItem","makeStyles","useStyles","theme","item","display","textTransform","width","color","palette","text","primary","background","main","itemActive","fontWeight","getComponentId","window","location","search","component","NavItem","className","href","icon","Icon","title","id","rest","classes","propTypes","string"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,mBAAjD;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,MAFX;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBC,OAJtB;AAKJ,eAAW;AACTC,MAAAA,UAAU,EAAE,aADH;AAETJ,MAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcE,OAAd,CAAsBE;AAFpB;AALP,GAD+B;AAWrCC,EAAAA,UAAU,EAAE;AACVN,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcE,OAAd,CAAsBE,IADnB;AAEV,cAAU;AACRE,MAAAA,UAAU,EAAE;AADJ;AAFA;AAXyB,CAAL,CAAN,CAA5B;;AAmBA,MAAMC,cAAc,GAAG,MAAMnB,KAAK,CAACoB,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAAL,CAA8BC,SAA9B,IAA2C,cAAxE;;AAEA,MAAMC,OAAO,GAAG,UAOV;AAAA,MAPW;AACfC,IAAAA,SADe;AAEfC,IAAAA,IAFe;AAGfC,IAAAA,IAAI,EAAEC,IAHS;AAIfC,IAAAA,KAJe;AAKfC,IAAAA;AALe,GAOX;AAAA,MADDC,IACC;;AACJ,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AAEA,SACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAEN,IAAI,CACbiC,OAAO,CAACzB,IADK,EAEbY,cAAc,OAAOW,EAArB,GAA0BE,OAAO,CAACf,UAAlC,GAA+C,EAFlC,EAGbQ,SAHa,CADjB;AAME,IAAA,SAAS,EAAE,GANb;AAOE,IAAA,IAAI,EAAEC;AAPR,KAQMK,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CF,KAA9C,CAVF,CADF;AAcD,CAxBD;;AA0BAL,OAAO,CAACS,SAAR,GAAoB;AAClBR,EAAAA,SAAS,EAAExB,SAAS,CAACiC,MADH;AAElBR,EAAAA,IAAI,EAAEzB,SAAS,CAACiC,MAFE;AAGlBL,EAAAA,KAAK,EAAE5B,SAAS,CAACiC,MAHC;AAIlBJ,EAAAA,EAAE,EAAE7B,SAAS,CAACiC;AAJI,CAApB;AAOA,eAAeV,OAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { parse } from 'query-string';\nimport PropTypes from 'prop-types';\nimport { Typography, ListItem, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    textTransform: 'none',\n    width: '100%',\n    color: theme.palette.text.primary,\n    '&:hover': {\n      background: 'transparent',\n      color: theme.palette.primary.main,\n    }\n  },\n  itemActive: {\n    color: theme.palette.primary.main,\n    '& span': {\n      fontWeight: 700,\n    },\n  },\n}));\n\nconst getComponentId = () => parse(window.location.search).component || 'introduction';\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  id,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(\n        classes.item,\n        getComponentId() === id ? classes.itemActive : '',\n        className,\n      )}\n      component={'a'}\n      href={href}\n      {...rest}\n    >\n      <Typography variant=\"body2\" component=\"span\">{title}</Typography>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default NavItem;"]},"metadata":{},"sourceType":"module"}