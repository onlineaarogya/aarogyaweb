{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/BlogReachView/components/VerticalOverlaped/VerticalOverlaped.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Typography, Grid } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { CardProduct } from 'components/organisms';\nimport Link from 'next/link';\nconst useStyles = makeStyles(theme => ({\n  cardProduct: {\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: theme.spacing(1),\n    boxShadow: 'none',\n    background: 'transparent',\n    paddingBottom: theme.spacing(2),\n    '& .card-product__content': {\n      padding: theme.spacing(4),\n      zIndex: 1,\n      background: theme.palette.background.paper,\n      width: '90%',\n      margin: '0 auto',\n      marginTop: theme.spacing(-6),\n      borderRadius: theme.spacing(1),\n      boxShadow: '0 3px 10px 2px rgba(0, 0, 0, 0.1)'\n    },\n    '& .card-product__media': {\n      minHeight: 300,\n      '& img': {\n        transitionDuration: '.7s',\n        transform: 'scale(1.0)'\n      }\n    },\n    '&:hover': {\n      '& .card-product__media img': {\n        transform: 'scale(1.2)'\n      }\n    }\n  },\n  image: {\n    objectFit: 'cover'\n  },\n  blogTitle: {\n    fontWeight: 700\n  },\n  tags: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  tag: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1 / 2),\n    background: theme.palette.primary.main,\n    color: 'white',\n    margin: theme.spacing(0, 1, 1, 0),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(0, 2, 2, 0)\n    }\n  },\n  author: {\n    margin: theme.spacing(1, 0),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(2, 0)\n    }\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst VerticalOverlaped = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n\n  const BlogMediaContent = props => __jsx(Image, _extends({}, props, {\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }));\n\n  const BlogContent = props => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, props.tags.split(',').map((item, index) => __jsx(Typography, {\n    variant: \"caption\",\n    className: classes.tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, item))), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    className: classes.blogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, props.title.substring(0, 100)), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\",\n    className: classes.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, props.name, \" - \", props.created)), __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, props.subtitle.substring(0, 300)));\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, props.api_data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(CardProduct, {\n    className: classes.cardProduct,\n    mediaContent: __jsx(BlogMediaContent, {\n      src: `${process.env.NEXT_PUBLIC_DB_HOST}` + item.field_image,\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }),\n    cardContent: __jsx(BlogContent, {\n      title: item.title,\n      subtitle: item.body.replace(/<[^>]*>?/gm, ''),\n      name: item.field_full_name,\n      user_picture: item.user_picture,\n      created: item.created,\n      tags: item.field_tags // author={item.author}\n      // date={item.date}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(VerticalOverlaped, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = VerticalOverlaped;\nVerticalOverlaped.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default VerticalOverlaped;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalOverlaped\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/BlogReachView/components/VerticalOverlaped/VerticalOverlaped.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","Typography","Grid","Image","CardProduct","Link","useStyles","theme","cardProduct","display","flexDirection","borderRadius","spacing","boxShadow","background","paddingBottom","padding","zIndex","palette","paper","width","margin","marginTop","minHeight","transitionDuration","transform","image","objectFit","blogTitle","fontWeight","tags","flexWrap","tag","primary","main","color","breakpoints","up","author","fontWeightBold","VerticalOverlaped","props","data","className","rest","classes","isMd","defaultMatches","BlogMediaContent","height","BlogContent","split","map","item","index","title","substring","name","created","subtitle","api_data","process","env","NEXT_PUBLIC_DB_HOST","field_image","body","replace","field_full_name","user_picture","field_tags","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Typography, Grid } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { CardProduct } from 'components/organisms';\nimport Link from 'next/link';\n\nconst useStyles = makeStyles(theme => ({\n  cardProduct: {\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: theme.spacing(1),\n    boxShadow: 'none',\n    background: 'transparent',\n    paddingBottom: theme.spacing(2),\n    '& .card-product__content': {\n      padding: theme.spacing(4),\n      zIndex: 1,\n      background: theme.palette.background.paper,\n      width: '90%',\n      margin: '0 auto',\n      marginTop: theme.spacing(-6),\n      borderRadius: theme.spacing(1),\n      boxShadow: '0 3px 10px 2px rgba(0, 0, 0, 0.1)',\n    },\n    '& .card-product__media': {\n      minHeight: 300,\n      '& img': {\n        transitionDuration: '.7s',\n        transform: 'scale(1.0)',\n      },\n    },\n    '&:hover': {\n      '& .card-product__media img': {\n        transform: 'scale(1.2)',\n      },\n    },\n  },\n  image: {\n    objectFit: 'cover',\n  },\n  blogTitle: {\n    fontWeight: 700,\n  },\n  tags: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  tag: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1 / 2),\n    background: theme.palette.primary.main,\n    color: 'white',\n    margin: theme.spacing(0, 1, 1, 0),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(0, 2, 2, 0),\n    },\n  },\n  author: {\n    margin: theme.spacing(1, 0),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(2, 0),\n    },\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst VerticalOverlaped = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  const BlogMediaContent = props => (\n    <Image\n      {...props}\n      className={classes.image}\n      lazyProps={{ width: '100%', height: '100%' }}\n    />\n  );\n\n  const BlogContent = props => (\n    <div>\n      <div className={classes.tags}>\n        {props.tags.split(',').map((item, index) => (\n          <Typography variant=\"caption\" className={classes.tag} key={index}>\n            {item}\n          </Typography>\n        ))}\n      </div>\n\n      <Typography\n        variant=\"h6\"\n        color=\"textPrimary\"\n        className={classes.blogTitle}\n      >\n        {props.title.substring(0, 100)}\n      </Typography>\n\n      <Typography\n        variant=\"body2\"\n        color=\"textPrimary\"\n        className={classes.author}\n      >\n        <i>\n          {props.name} - {props.created}\n        </i>\n      </Typography>\n      <Typography variant=\"body1\" color=\"textPrimary\">\n        {props.subtitle.substring(0, 300)}\n      </Typography>\n    </div>\n  );\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        {props.api_data.map((item, index) => (\n          <Grid item xs={12} sm={6} key={index} data-aos=\"fade-up\">\n            <CardProduct\n              className={classes.cardProduct}\n              mediaContent={\n                <BlogMediaContent\n                  src={`${process.env.NEXT_PUBLIC_DB_HOST}` + item.field_image}\n                  alt={item.title}\n                />\n              }\n              cardContent={\n                <BlogContent\n                  title={item.title}\n                  subtitle={item.body.replace(/<[^>]*>?/gm, '')}\n                  name={item.field_full_name}\n                  user_picture={item.user_picture}\n                  created={item.created}\n                  tags={item.field_tags}\n                  // author={item.author}\n                  // date={item.date}\n                />\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nVerticalOverlaped.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default VerticalOverlaped;\n"]},"metadata":{},"sourceType":"module"}