{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Avatar, Typography, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  }\n}));\n/**\n * Component to display the review card\n *\n * @param {Object} props\n */\n\nconst CardReview = props => {\n  const {\n    icon,\n    text,\n    authorPhoto,\n    authorName,\n    authorTitle,\n    align,\n    textVariant,\n    className,\n    textProps,\n    listItemPrimaryTypographyProps,\n    listItemSecondaryTypographyProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"icon\", \"text\", \"authorPhoto\", \"authorName\", \"authorTitle\", \"align\", \"textVariant\", \"className\", \"textProps\", \"listItemPrimaryTypographyProps\", \"listItemSecondaryTypographyProps\"]);\n\n  const classes = useStyles();\n  let justifyGrid = 'center';\n\n  if (align === 'left') {\n    justifyGrid = 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return __jsx(CardBase, _extends({\n    className: clsx('card-review', classes.root, className)\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"card-review__wrapper\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: justifyGrid,\n    xs: 12,\n    className: \"card-review__icon-wrapper\"\n  }, icon), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-review__text-wrapper\"\n  }, __jsx(Typography, _extends({\n    variant: textVariant,\n    align: align,\n    component: \"p\"\n  }, textProps), text)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-review__lits-container\"\n  }, __jsx(Grid, {\n    container: true,\n    justify: justifyGrid,\n    className: \"card-review__list-wrapper\"\n  }, __jsx(List, {\n    disablePadding: true,\n    className: \"card-review__list\"\n  }, __jsx(ListItem, {\n    className: \"card-review__list-item\"\n  }, __jsx(ListItemAvatar, {\n    className: \"card-review__list-item-avatar\"\n  }, __jsx(Avatar, _extends({}, authorPhoto, {\n    alt: authorName,\n    className: \"card-review__avatar\"\n  }))), __jsx(ListItemText, {\n    className: \"card-review__list-item-text\",\n    primary: authorName,\n    secondary: authorTitle,\n    primaryTypographyProps: _objectSpread({}, listItemPrimaryTypographyProps),\n    secondaryTypographyProps: _objectSpread({}, listItemSecondaryTypographyProps)\n  })))))));\n};\n\nCardReview.defaultProps = {\n  align: 'center',\n  textVariant: 'h6',\n  textProps: {},\n  listItemPrimaryTypographyProps: {},\n  listItemSecondaryTypographyProps: {}\n};\nexport default CardReview;","map":null,"metadata":{},"sourceType":"module"}