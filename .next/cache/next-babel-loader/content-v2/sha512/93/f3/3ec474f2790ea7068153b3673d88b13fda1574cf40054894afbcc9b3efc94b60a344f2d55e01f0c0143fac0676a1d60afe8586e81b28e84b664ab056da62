{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/components/molecules/CountUpNumber/CountUpNumber.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n/**\n * Component to display the Count Up Numbers\n *\n *\n */\n\nconst CountUpNumber = props => {\n  _s();\n\n  const {\n    start,\n    end,\n    suffix,\n    prefix,\n    label,\n    textColor,\n    labelColor,\n    className,\n    visibilitySensorProps,\n    wrapperProps,\n    countWrapperProps,\n    countNumberProps,\n    labelProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"start\", \"end\", \"suffix\", \"prefix\", \"label\", \"textColor\", \"labelColor\", \"className\", \"visibilitySensorProps\", \"wrapperProps\", \"countWrapperProps\", \"countNumberProps\", \"labelProps\"]);\n\n  const [viewPortEntered, setViewPortEntered] = React.useState(false);\n\n  const setViewPortVisibility = isVisible => {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: clsx('countup-number', className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), __jsx(VisibilitySensor, _extends({\n    onChange: isVisible => setViewPortVisibility(isVisible),\n    delayedCall: true\n  }, visibilitySensorProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", _extends({\n    className: \"countup-number__wrapper\"\n  }, wrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(Typography, _extends({\n    variant: \"h4\",\n    gutterBottom: true,\n    align: \"center\",\n    color: textColor || 'textPrimary',\n    className: \"countup-number__count-wrapper\"\n  }, countWrapperProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(CountUp, _extends({\n    delay: 1,\n    redraw: false,\n    end: viewPortEntered ? end : start,\n    start: start,\n    suffix: suffix || '',\n    prefix: prefix || '',\n    className: \"countup-number__count\"\n  }, countNumberProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))), __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: labelColor || 'textSecondary',\n    align: \"center\",\n    className: \"countup-number__label\"\n  }, labelProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), label))));\n};\n\n_s(CountUpNumber, \"8AKg4UTEcuAm2yS5CsLyRzCMCDY=\");\n\n_c = CountUpNumber;\nCountUpNumber.defaultProps = {\n  start: 0,\n  visibilitySensorProps: {},\n  wrapperProps: {},\n  countWrapperProps: {},\n  countNumberProps: {},\n  labelProps: {}\n};\nCountUpNumber.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * The Suffix of the count up number\n   */\n  suffix: PropTypes.string,\n\n  /**\n   * The Prefix of the count up number\n   */\n  prefix: PropTypes.string,\n\n  /**\n   * The label text of the count up number\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Starting number\n   */\n  start: PropTypes.number,\n\n  /**\n   * End number\n   */\n  end: PropTypes.number.isRequired,\n\n  /**\n   * Text color\n   */\n  textColor: PropTypes.string,\n\n  /**\n   * Label color\n   */\n  labelColor: PropTypes.string,\n\n  /**\n   * Additional properties to pass to the VisibilitySensor Component\n   */\n  visibilitySensorProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the wrapper div\n   */\n  wrapperProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the count wrapper Typography component\n   */\n  countWrapperProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the CountUp React component\n   */\n  countNumberProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the label Typography component\n   */\n  labelProps: PropTypes.object\n};\nexport default CountUpNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountUpNumber\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/components/molecules/CountUpNumber/CountUpNumber.js"],"names":["React","VisibilitySensor","CountUp","clsx","PropTypes","Typography","CountUpNumber","props","start","end","suffix","prefix","label","textColor","labelColor","className","visibilitySensorProps","wrapperProps","countWrapperProps","countNumberProps","labelProps","rest","viewPortEntered","setViewPortEntered","useState","setViewPortVisibility","isVisible","defaultProps","propTypes","string","isRequired","number","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\n/**\n * Component to display the Count Up Numbers\n *\n *\n */\nconst CountUpNumber = props => {\n  const {\n    start,\n    end,\n    suffix,\n    prefix,\n    label,\n    textColor,\n    labelColor,\n    className,\n    visibilitySensorProps,\n    wrapperProps,\n    countWrapperProps,\n    countNumberProps,\n    labelProps,\n    ...rest\n  } = props;\n\n  const [viewPortEntered, setViewPortEntered] = React.useState(false);\n  const setViewPortVisibility = isVisible => {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return (\n    <div className={clsx('countup-number', className)} {...rest}>\n      <VisibilitySensor\n        onChange={isVisible => setViewPortVisibility(isVisible)}\n        delayedCall\n        {...visibilitySensorProps}\n      >\n        <div className=\"countup-number__wrapper\" {...wrapperProps}>\n          <Typography\n            variant=\"h4\"\n            gutterBottom\n            align=\"center\"\n            color={textColor || 'textPrimary'}\n            className=\"countup-number__count-wrapper\"\n            {...countWrapperProps}\n          >\n            <CountUp\n              delay={1}\n              redraw={false}\n              end={viewPortEntered ? end : start}\n              start={start}\n              suffix={suffix || ''}\n              prefix={prefix || ''}\n              className=\"countup-number__count\"\n              {...countNumberProps}\n            />\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color={labelColor || 'textSecondary'}\n            align=\"center\"\n            className=\"countup-number__label\"\n            {...labelProps}\n          >\n            {label}\n          </Typography>\n        </div>\n      </VisibilitySensor>\n    </div>\n  );\n};\n\nCountUpNumber.defaultProps = {\n  start: 0,\n  visibilitySensorProps: {},\n  wrapperProps: {},\n  countWrapperProps: {},\n  countNumberProps: {},\n  labelProps: {},\n};\n\nCountUpNumber.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The Suffix of the count up number\n   */\n  suffix: PropTypes.string,\n  /**\n   * The Prefix of the count up number\n   */\n  prefix: PropTypes.string,\n  /**\n   * The label text of the count up number\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Starting number\n   */\n  start: PropTypes.number,\n  /**\n   * End number\n   */\n  end: PropTypes.number.isRequired,\n  /**\n   * Text color\n   */\n  textColor: PropTypes.string,\n  /**\n   * Label color\n   */\n  labelColor: PropTypes.string,\n  /**\n   * Additional properties to pass to the VisibilitySensor Component\n   */\n  visibilitySensorProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the wrapper div\n   */\n  wrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the count wrapper Typography component\n   */\n  countWrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the CountUp React component\n   */\n  countNumberProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the label Typography component\n   */\n  labelProps: PropTypes.object,\n};\n\nexport default CountUpNumber;\n"]},"metadata":{},"sourceType":"module"}