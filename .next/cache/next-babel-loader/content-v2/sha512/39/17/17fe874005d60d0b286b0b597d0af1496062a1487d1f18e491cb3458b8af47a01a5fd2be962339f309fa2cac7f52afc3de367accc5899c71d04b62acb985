{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport Swiper from 'swiper';\nconst useStyles = makeStyles(theme => ({\n  swiperSlide: {\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: theme.spacing(6)\n    }\n  },\n  number: {\n    fontWeight: 900\n  }\n}));\n/**\n * Component to display the number swiper\n *\n * @param {Object} props\n */\n\nconst SwiperNumber = props => {\n  const {\n    items,\n    className,\n    numberProps,\n    labelProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"items\", \"className\", \"numberProps\", \"labelProps\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  React.useEffect(() => {\n    new Swiper('.swiper-container', {\n      slidesPerView: isMd ? 4 : 3,\n      spaceBetween: 30,\n      pagination: {\n        el: '.swiper-container .swiper-pagination',\n        type: 'bullets',\n        clickable: true\n      },\n      autoplay: {\n        delay: 5000\n      }\n    });\n  });\n  return __jsx(\"div\", _extends({\n    className: clsx('swiper-number', 'swiper-container', className)\n  }, rest), __jsx(\"div\", {\n    className: \"swiper-number__wrapper swiper-wrapper\"\n  }, items.map((item, index) => __jsx(\"div\", {\n    className: clsx('swiper-number__item', classes.swiperSlide, 'swiper-slide'),\n    key: index,\n    style: {\n      width: 'auto'\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: \"swiper-number__item-container\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"swiper-number__number-wrapper\"\n  }, __jsx(Typography, _extends({\n    variant: \"h3\",\n    align: \"center\",\n    className: clsx('swiper-number__number', classes.number)\n  }, numberProps), item.number)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"swiper-number__label-wrapper\"\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    align: \"center\",\n    className: \"swiper-number__label\"\n  }, labelProps), item.title)))))), __jsx(\"div\", {\n    className: \"swiper-number__pagination swiper-pagination\"\n  }));\n};\n\nSwiperNumber.defaultProps = {\n  numberProps: {},\n  labelProps: {}\n};\nexport default SwiperNumber;","map":null,"metadata":{},"sourceType":"module"}