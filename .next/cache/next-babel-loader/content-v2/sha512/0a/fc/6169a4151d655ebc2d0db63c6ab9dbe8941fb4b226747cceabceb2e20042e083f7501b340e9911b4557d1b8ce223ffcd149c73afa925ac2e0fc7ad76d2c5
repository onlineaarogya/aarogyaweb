{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/CardJobCompany/CardJobCompany.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nimport { LearnMoreLink } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  companyAvatar: {\n    width: 60,\n    height: 60\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1)\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2)\n  },\n  companyName: {\n    fontWeight: 700\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1)\n  }\n}));\n/**\n * Component to display the job card company\n *\n * @param {Object} props\n */\n\nconst CardJobCompany = props => {\n  _s();\n\n  const {\n    jobTitle,\n    jobLocation,\n    companyLogo,\n    companyName,\n    jobsCount,\n    companyInfo,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"jobTitle\", \"jobLocation\", \"companyLogo\", \"companyName\", \"jobsCount\", \"companyInfo\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(CardBase, _extends({\n    className: clsx('card-company', classes.root, className),\n    align: \"left\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    src: companyLogo,\n    alt: companyName,\n    className: classes.companyAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.companyName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, companyName)), __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, jobTitle), __jsx(\"span\", {\n    className: clsx(classes.dot, classes.dotSmall, classes.dotMargin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, jobLocation)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(LearnMoreLink, {\n    title: jobsCount,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    component: \"p\",\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, companyInfo))));\n};\n\n_s(CardJobCompany, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardJobCompany;\nCardJobCompany.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Job title of the card\n   */\n  jobTitle: PropTypes.string.isRequired,\n\n  /**\n   * Job location of the card\n   */\n  jobLocation: PropTypes.string.isRequired,\n\n  /**\n   * Company logo of the card\n   */\n  companyLogo: PropTypes.string.isRequired,\n\n  /**\n   * Company name of the card\n   */\n  companyName: PropTypes.string.isRequired,\n\n  /**\n   * Count of the jobs in the the card\n   */\n  jobsCount: PropTypes.string.isRequired,\n\n  /**\n   * Company info in the card\n   */\n  companyInfo: PropTypes.string.isRequired\n};\nexport default CardJobCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardJobCompany\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/CardJobCompany/CardJobCompany.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Typography","Avatar","CardBase","LearnMoreLink","useStyles","theme","root","height","width","companyAvatar","dot","display","spacing","background","palette","text","primary","borderRadius","marginRight","dotSmall","companyName","fontWeight","dotMargin","margin","CardJobCompany","props","jobTitle","jobLocation","companyLogo","jobsCount","companyInfo","className","rest","classes","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Avatar } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nimport { LearnMoreLink } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  companyAvatar: {\n    width: 60,\n    height: 60,\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1),\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2),\n  },\n  companyName: {\n    fontWeight: 700,\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\n/**\n * Component to display the job card company\n *\n * @param {Object} props\n */\nconst CardJobCompany = props => {\n  const {\n    jobTitle,\n    jobLocation,\n    companyLogo,\n    companyName,\n    jobsCount,\n    companyInfo,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <CardBase\n      className={clsx('card-company', classes.root, className)}\n      align=\"left\"\n      {...rest}\n    >\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Avatar\n            src={companyLogo}\n            alt={companyName}\n            className={classes.companyAvatar}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" className={classes.companyName}>\n            {companyName}\n          </Typography>\n        </Grid>\n        <Grid item container alignItems=\"center\" xs={12}>\n          <Typography component=\"span\" variant=\"subtitle1\" color=\"textPrimary\">\n            {jobTitle}\n          </Typography>\n          <span\n            className={clsx(classes.dot, classes.dotSmall, classes.dotMargin)}\n          />\n          <Typography component=\"span\" variant=\"subtitle1\" color=\"textPrimary\">\n            {jobLocation}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <LearnMoreLink title={jobsCount} variant=\"subtitle1\" />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography component=\"p\" variant=\"body2\" color=\"textSecondary\">\n            {companyInfo}\n          </Typography>\n        </Grid>\n      </Grid>\n    </CardBase>\n  );\n};\n\nCardJobCompany.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Job title of the card\n   */\n  jobTitle: PropTypes.string.isRequired,\n  /**\n   * Job location of the card\n   */\n  jobLocation: PropTypes.string.isRequired,\n  /**\n   * Company logo of the card\n   */\n  companyLogo: PropTypes.string.isRequired,\n  /**\n   * Company name of the card\n   */\n  companyName: PropTypes.string.isRequired,\n  /**\n   * Count of the jobs in the the card\n   */\n  jobsCount: PropTypes.string.isRequired,\n  /**\n   * Company info in the card\n   */\n  companyInfo: PropTypes.string.isRequired,\n};\n\nexport default CardJobCompany;\n"]},"metadata":{},"sourceType":"module"}