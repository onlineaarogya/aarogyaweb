{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/components/organisms/CardCategoryLink/CardCategoryLink.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, colors, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  fontWeight700: {\n    fontWeight: 700\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  }\n}));\n/**\n * Component to display the category link card\n *\n * @param {Object} props\n */\n\nconst CardCategoryLink = props => {\n  const {\n    fontIconClass,\n    color,\n    title,\n    subtitle,\n    href,\n    align,\n    className,\n    iconAlternateProps,\n    titleProps,\n    subtitleProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"fontIconClass\", \"color\", \"title\", \"subtitle\", \"href\", \"align\", \"className\", \"iconAlternateProps\", \"titleProps\", \"subtitleProps\"]);\n\n  const classes = useStyles();\n  let justifyGrid = 'flex-start';\n\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return __jsx(CardBase, _extends({\n    className: clsx('card-category-link', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"card-category-link__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: justifyGrid,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(IconAlternate, _extends({\n    fontIconClass: fontIconClass,\n    color: color,\n    size: \"medium\"\n  }, iconAlternateProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"h6\",\n    align: align,\n    className: classes.fontWeight700\n  }, titleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), title)), subtitle && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    align: align,\n    color: \"textSecondary\"\n  }, subtitleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), subtitle))), __jsx(\"a\", {\n    href: href,\n    className: clsx('card-category-link__item', classes.categoryIconButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    className: \"card-category-link__icon-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowRightAltIcon, {\n    className: \"card-category-link__icon\",\n    style: {\n      color: color[500]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })))));\n};\n\nCardCategoryLink.defaultProps = {\n  align: 'left',\n  href: '#',\n  iconAlternateProps: {},\n  titleProps: {},\n  subtitleProps: {}\n};\nCardCategoryLink.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Promo title to show inside the card\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Promo subtitle to show inside the card\n   */\n  subtitle: PropTypes.string,\n\n  /**\n   * Promo description to show inside the card\n   */\n  href: PropTypes.string.isRequired,\n\n  /**\n   * Promo font icon class name to show inside the card\n   */\n  fontIconClass: PropTypes.string,\n\n  /**\n   * Promo icon color to show inside the card\n   */\n  color: PropTypes.oneOf([colors.red, colors.pink, colors.purple, colors.deepPurple, colors.indigo, colors.blue, colors.lightBlue, colors.cyan, colors.teal, colors.green, colors.lightGreen, colors.lime, colors.yellow, colors.amber, colors.orange, colors.deepOrange, colors.brown, colors.grey, colors.blueGrey]).isRequired,\n\n  /**\n   * The content alignment\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\n   * Additional props to pass to the IconAlternate component\n   */\n  iconAlternateProps: PropTypes.object,\n\n  /**\n   * Additional props to pass to the title Typography component\n   */\n  titleProps: PropTypes.object,\n\n  /**\n   * Additional props to pass to the subtitle Typography component\n   */\n  subtitleProps: PropTypes.object\n};\nexport default CardCategoryLink;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/components/organisms/CardCategoryLink/CardCategoryLink.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Typography","colors","IconButton","ArrowRightAltIcon","IconAlternate","CardBase","useStyles","theme","root","height","width","fontWeight700","fontWeight","categoryIconButton","display","justifyContent","CardCategoryLink","props","fontIconClass","color","title","subtitle","href","align","className","iconAlternateProps","titleProps","subtitleProps","rest","classes","justifyGrid","defaultProps","propTypes","string","isRequired","oneOf","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, colors, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  fontWeight700: {\n    fontWeight: 700,\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end',\n  },\n}));\n\n/**\n * Component to display the category link card\n *\n * @param {Object} props\n */\nconst CardCategoryLink = props => {\n  const {\n    fontIconClass,\n    color,\n    title,\n    subtitle,\n    href,\n    align,\n    className,\n    iconAlternateProps,\n    titleProps,\n    subtitleProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  let justifyGrid = 'flex-start';\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n  return (\n    <CardBase\n      className={clsx('card-category-link', classes.root, className)}\n      {...rest}\n    >\n      <>\n      <Grid container spacing={2} className=\"card-category-link__wrapper\">\n        <Grid item container justify={justifyGrid} xs={12}>\n          <IconAlternate\n            fontIconClass={fontIconClass}\n            color={color}\n            size=\"medium\"\n            {...iconAlternateProps}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h6\"\n            align={align}\n            className={classes.fontWeight700}\n            {...titleProps}\n          >\n            {title}\n          </Typography>\n        </Grid>\n        {subtitle && (\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              align={align}\n              color=\"textSecondary\"\n              {...subtitleProps}\n            >\n              {subtitle}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      <a\n        href={href}\n        className={clsx('card-category-link__item', classes.categoryIconButton)}\n      >\n        <IconButton className=\"card-category-link__icon-button\">\n          <ArrowRightAltIcon\n            className=\"card-category-link__icon\"\n            style={{ color: color[500] }}\n          />\n        </IconButton>\n      </a>\n      </>\n    </CardBase>\n  );\n};\n\nCardCategoryLink.defaultProps = {\n  align: 'left',\n  href: '#',\n  iconAlternateProps: {},\n  titleProps: {},\n  subtitleProps: {},\n};\n\nCardCategoryLink.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Promo title to show inside the card\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Promo subtitle to show inside the card\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Promo description to show inside the card\n   */\n  href: PropTypes.string.isRequired,\n  /**\n   * Promo font icon class name to show inside the card\n   */\n  fontIconClass: PropTypes.string,\n  /**\n   * Promo icon color to show inside the card\n   */\n  color: PropTypes.oneOf([\n    colors.red,\n    colors.pink,\n    colors.purple,\n    colors.deepPurple,\n    colors.indigo,\n    colors.blue,\n    colors.lightBlue,\n    colors.cyan,\n    colors.teal,\n    colors.green,\n    colors.lightGreen,\n    colors.lime,\n    colors.yellow,\n    colors.amber,\n    colors.orange,\n    colors.deepOrange,\n    colors.brown,\n    colors.grey,\n    colors.blueGrey,\n  ]).isRequired,\n  /**\n   * The content alignment\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n  /**\n   * Additional props to pass to the IconAlternate component\n   */\n  iconAlternateProps: PropTypes.object,\n  /**\n   * Additional props to pass to the title Typography component\n   */\n  titleProps: PropTypes.object,\n  /**\n   * Additional props to pass to the subtitle Typography component\n   */\n  subtitleProps: PropTypes.object,\n};\n\nexport default CardCategoryLink;\n"]},"metadata":{},"sourceType":"module"}