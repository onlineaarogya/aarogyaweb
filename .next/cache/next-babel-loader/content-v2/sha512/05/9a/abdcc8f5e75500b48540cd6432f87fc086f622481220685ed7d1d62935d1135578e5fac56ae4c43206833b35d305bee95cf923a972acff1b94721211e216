{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nlet tbIcons = '';\nexport default tbIcons = {\n  Add: /*#__PURE__*/forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref\n  }))),\n  Check: /*#__PURE__*/forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref\n  }))),\n  Clear: /*#__PURE__*/forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref\n  }))),\n  Delete: /*#__PURE__*/forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref\n  }))),\n  DetailPanel: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref\n  }))),\n  Edit: /*#__PURE__*/forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref\n  }))),\n  Export: /*#__PURE__*/forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref\n  }))),\n  Filter: /*#__PURE__*/forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref\n  }))),\n  FirstPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref\n  }))),\n  LastPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref\n  }))),\n  NextPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref\n  }))),\n  PreviousPage: /*#__PURE__*/forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref\n  }))),\n  ResetSearch: /*#__PURE__*/forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref\n  }))),\n  Search: /*#__PURE__*/forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref\n  }))),\n  SortArrow: /*#__PURE__*/forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n    ref: ref\n  }))),\n  ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref\n  }))),\n  ViewColumn: /*#__PURE__*/forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref\n  })))\n};","map":null,"metadata":{},"sourceType":"module"}