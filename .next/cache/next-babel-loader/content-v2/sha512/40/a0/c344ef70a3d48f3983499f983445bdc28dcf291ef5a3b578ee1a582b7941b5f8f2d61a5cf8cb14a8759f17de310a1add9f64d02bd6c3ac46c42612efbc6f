{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/IndexView/components/Hero/Hero.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { TextField, InputAdornment, useMediaQuery, Grid, Typography, Button, NoSsr, colors } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircle from 'material-ui-icons/AccountCircle';\nimport { Section, CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  hero: {\n    background: theme.palette.alternate.dark\n  },\n  child: {\n    width: '90%',\n    position: 'relative',\n    left: '69px',\n    '& .MuiCardContent-root': {\n      padding: '16px 16px'\n    }\n  },\n  heroWrapper: {\n    position: 'relative',\n    padding: '8px 0px'\n  },\n  heroImageContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    height: '100%',\n    width: '100%',\n    // background:\n    //   'url(https://assets.maccarianagency.com/the-front/photos/people/designer.png) no-repeat right bottom',\n    // backgroundSize: 'contain',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  heroGrid: {\n    maxWidth: 926\n  },\n  searchGrid: {\n    zIndex: 3\n  },\n  searchGridText: {\n    maxWidth: 605\n  },\n  textField: {\n    width: '100%'\n  },\n  searchButton: {\n    width: '100%',\n    height: '100%'\n  },\n  searchIcon: {\n    color: colors.grey[600]\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst Hero = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    className: classes.heroWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(CardBase, {\n    variant: \"outlined\",\n    withShadow: true,\n    liftUp: true,\n    className: classes.child,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    options: top100Films.map(option => option.title),\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"freeSolo\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      }, __jsx(AccountCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(TextField // label=\"Search doctor, clinic etc.\"\n  , {\n    variant: \"outlined\",\n    placeholder: \"Search doctor, Clinic, Symptoms, Specialty etc.\",\n    className: classes.textField,\n    size: isMd ? 'medium' : 'small',\n    InputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, __jsx(NoSsr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, __jsx(\"i\", {\n        className: clsx('fas fa-search', classes.searchIcon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    className: classes.searchButton,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Search\"))))));\n}; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\nexport default Hero;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/IndexView/components/Hero/Hero.js"],"names":["React","clsx","makeStyles","useTheme","TextField","InputAdornment","useMediaQuery","Grid","Typography","Button","NoSsr","colors","Autocomplete","AccountCircle","Section","CardBase","useStyles","theme","hero","background","palette","alternate","dark","child","width","position","left","padding","heroWrapper","heroImageContainer","top","bottom","height","display","breakpoints","up","heroGrid","maxWidth","searchGrid","zIndex","searchGridText","textField","searchButton","searchIcon","color","grey","title","fontWeight","Hero","classes","isMd","defaultMatches","top100Films","map","option","params","startAdornment","year"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,MARF,QASO,mBATP;AAUA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,sBAAlC;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBC;AADhC,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,IAAI,EAAE,MAHD;AAIL,8BAA0B;AACxBC,MAAAA,OAAO,EAAE;AADe;AAJrB,GAJ8B;AAYrCC,EAAAA,WAAW,EAAE;AACXH,IAAAA,QAAQ,EAAE,UADC;AAEXE,IAAAA,OAAO,EAAE;AAFE,GAZwB;AAgBrCE,EAAAA,kBAAkB,EAAE;AAClBJ,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,IAAI,EAAE,CAFY;AAGlBI,IAAAA,GAAG,EAAE,CAHa;AAIlBC,IAAAA,MAAM,EAAE,CAJU;AAKlBC,IAAAA,MAAM,EAAE,MALU;AAMlBR,IAAAA,KAAK,EAAE,MANW;AAOlB;AACA;AACA;AACAS,IAAAA,OAAO,EAAE,MAVS;AAWlB,KAAChB,KAAK,CAACiB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,OAAO,EAAE;AADmB;AAXZ,GAhBiB;AA+BrCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF,GA/B2B;AAkCrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AADE,GAlCyB;AAqCrCC,EAAAA,cAAc,EAAE;AACdH,IAAAA,QAAQ,EAAE;AADI,GArCqB;AAwCrCI,EAAAA,SAAS,EAAE;AACTjB,IAAAA,KAAK,EAAE;AADE,GAxC0B;AA2CrCkB,EAAAA,YAAY,EAAE;AACZlB,IAAAA,KAAK,EAAE,MADK;AAEZQ,IAAAA,MAAM,EAAE;AAFI,GA3CuB;AA+CrCW,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEjC,MAAM,CAACkC,IAAP,CAAY,GAAZ;AADG,GA/CyB;AAkDrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP;AAlD8B,CAAL,CAAN,CAA5B;;AAuDA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGjC,SAAS,EAAzB;AAEA,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAM+C,IAAI,GAAG5C,aAAa,CAACW,KAAK,CAACiB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDgB,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEF,OAAO,CAACrB,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,SAAS,EAAEqB,OAAO,CAAC1B,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAE6B,WAAW,CAACC,GAAZ,CAAgBC,MAAM,IAAIA,MAAM,CAACR,KAAjC,CAHX;AAIE,IAAA,WAAW,EAAES,MAAM,IACjB,MAAC,SAAD,eACMA,MADN;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAyCE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,CACE;AADF;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,WAAW,EAAC,iDAHd;AAIE,IAAA,SAAS,EAAEN,OAAO,CAACR,SAJrB;AAKE,IAAA,IAAI,EAAES,IAAI,GAAG,QAAH,GAAc,OAL1B;AAME,IAAA,UAAU,EAAE;AACVM,MAAAA,cAAc,EACZ,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEvD,IAAI,CAAC,eAAD,EAAkBgD,OAAO,CAACN,UAA1B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAFQ,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,EA8DE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAEM,OAAO,CAACP,YADrB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA9DF,CANF,CADF,CADF,CADF;AAsFD,CA9FD,C,CA+FA;;;AACA,MAAMU,WAAW,GAAG,CAClB;AAAEN,EAAAA,KAAK,EAAE,0BAAT;AAAqCW,EAAAA,IAAI,EAAE;AAA3C,CADkB,EAElB;AAAEX,EAAAA,KAAK,EAAE,eAAT;AAA0BW,EAAAA,IAAI,EAAE;AAAhC,CAFkB,EAGlB;AAAEX,EAAAA,KAAK,EAAE,wBAAT;AAAmCW,EAAAA,IAAI,EAAE;AAAzC,CAHkB,EAIlB;AAAEX,EAAAA,KAAK,EAAE,iBAAT;AAA4BW,EAAAA,IAAI,EAAE;AAAlC,CAJkB,EAKlB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CALkB,EAMlB;AAAEX,EAAAA,KAAK,EAAE,kBAAT;AAA6BW,EAAAA,IAAI,EAAE;AAAnC,CANkB,EAOlB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CAPkB,EAQlB;AAAEX,EAAAA,KAAK,EAAE,+CAAT;AAA0DW,EAAAA,IAAI,EAAE;AAAhE,CARkB,EASlB;AAAEX,EAAAA,KAAK,EAAE,gCAAT;AAA2CW,EAAAA,IAAI,EAAE;AAAjD,CATkB,EAUlB;AAAEX,EAAAA,KAAK,EAAE,YAAT;AAAuBW,EAAAA,IAAI,EAAE;AAA7B,CAVkB,EAWlB;AAAEX,EAAAA,KAAK,EAAE,mDAAT;AAA8DW,EAAAA,IAAI,EAAE;AAApE,CAXkB,EAYlB;AAAEX,EAAAA,KAAK,EAAE,gDAAT;AAA2DW,EAAAA,IAAI,EAAE;AAAjE,CAZkB,EAalB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CAbkB,EAclB;AAAEX,EAAAA,KAAK,EAAE,WAAT;AAAsBW,EAAAA,IAAI,EAAE;AAA5B,CAdkB,EAelB;AAAEX,EAAAA,KAAK,EAAE,uCAAT;AAAkDW,EAAAA,IAAI,EAAE;AAAxD,CAfkB,EAgBlB;AAAEX,EAAAA,KAAK,EAAE,iCAAT;AAA4CW,EAAAA,IAAI,EAAE;AAAlD,CAhBkB,EAiBlB;AAAEX,EAAAA,KAAK,EAAE,YAAT;AAAuBW,EAAAA,IAAI,EAAE;AAA7B,CAjBkB,EAkBlB;AAAEX,EAAAA,KAAK,EAAE,YAAT;AAAuBW,EAAAA,IAAI,EAAE;AAA7B,CAlBkB,EAmBlB;AAAEX,EAAAA,KAAK,EAAE,eAAT;AAA0BW,EAAAA,IAAI,EAAE;AAAhC,CAnBkB,EAoBlB;AAAEX,EAAAA,KAAK,EAAE,oCAAT;AAA+CW,EAAAA,IAAI,EAAE;AAArD,CApBkB,EAqBlB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CArBkB,EAsBlB;AAAEX,EAAAA,KAAK,EAAE,OAAT;AAAkBW,EAAAA,IAAI,EAAE;AAAxB,CAtBkB,EAuBlB;AAAEX,EAAAA,KAAK,EAAE,0BAAT;AAAqCW,EAAAA,IAAI,EAAE;AAA3C,CAvBkB,EAwBlB;AAAEX,EAAAA,KAAK,EAAE,uBAAT;AAAkCW,EAAAA,IAAI,EAAE;AAAxC,CAxBkB,EAyBlB;AAAEX,EAAAA,KAAK,EAAE,mBAAT;AAA8BW,EAAAA,IAAI,EAAE;AAApC,CAzBkB,EA0BlB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CA1BkB,EA2BlB;AAAEX,EAAAA,KAAK,EAAE,wBAAT;AAAmCW,EAAAA,IAAI,EAAE;AAAzC,CA3BkB,EA4BlB;AAAEX,EAAAA,KAAK,EAAE,eAAT;AAA0BW,EAAAA,IAAI,EAAE;AAAhC,CA5BkB,EA6BlB;AAAEX,EAAAA,KAAK,EAAE,qBAAT;AAAgCW,EAAAA,IAAI,EAAE;AAAtC,CA7BkB,EA8BlB;AAAEX,EAAAA,KAAK,EAAE,8BAAT;AAAyCW,EAAAA,IAAI,EAAE;AAA/C,CA9BkB,EA+BlB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CA/BkB,EAgClB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CAhCkB,EAiClB;AAAEX,EAAAA,KAAK,EAAE,YAAT;AAAuBW,EAAAA,IAAI,EAAE;AAA7B,CAjCkB,EAkClB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CAlCkB,EAmClB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CAnCkB,EAoClB;AAAEX,EAAAA,KAAK,EAAE,gBAAT;AAA2BW,EAAAA,IAAI,EAAE;AAAjC,CApCkB,EAqClB;AAAEX,EAAAA,KAAK,EAAE,kBAAT;AAA6BW,EAAAA,IAAI,EAAE;AAAnC,CArCkB,EAsClB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CAtCkB,EAuClB;AAAEX,EAAAA,KAAK,EAAE,yBAAT;AAAoCW,EAAAA,IAAI,EAAE;AAA1C,CAvCkB,EAwClB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CAxCkB,EAyClB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CAzCkB,EA0ClB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CA1CkB,EA2ClB;AAAEX,EAAAA,KAAK,EAAE,4BAAT;AAAuCW,EAAAA,IAAI,EAAE;AAA7C,CA3CkB,EA4ClB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CA5CkB,EA6ClB;AAAEX,EAAAA,KAAK,EAAE,UAAT;AAAqBW,EAAAA,IAAI,EAAE;AAA3B,CA7CkB,EA8ClB;AAAEX,EAAAA,KAAK,EAAE,WAAT;AAAsBW,EAAAA,IAAI,EAAE;AAA5B,CA9CkB,EA+ClB;AAAEX,EAAAA,KAAK,EAAE,SAAT;AAAoBW,EAAAA,IAAI,EAAE;AAA1B,CA/CkB,EAgDlB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CAhDkB,EAiDlB;AAAEX,EAAAA,KAAK,EAAE,eAAT;AAA0BW,EAAAA,IAAI,EAAE;AAAhC,CAjDkB,EAkDlB;AAAEX,EAAAA,KAAK,EAAE,gBAAT;AAA2BW,EAAAA,IAAI,EAAE;AAAjC,CAlDkB,EAmDlB;AAAEX,EAAAA,KAAK,EAAE,OAAT;AAAkBW,EAAAA,IAAI,EAAE;AAAxB,CAnDkB,EAoDlB;AAAEX,EAAAA,KAAK,EAAE,kBAAT;AAA6BW,EAAAA,IAAI,EAAE;AAAnC,CApDkB,EAqDlB;AACEX,EAAAA,KAAK,EACH,sEAFJ;AAGEW,EAAAA,IAAI,EAAE;AAHR,CArDkB,EA0DlB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CA1DkB,EA2DlB;AAAEX,EAAAA,KAAK,EAAE,iBAAT;AAA4BW,EAAAA,IAAI,EAAE;AAAlC,CA3DkB,EA4DlB;AAAEX,EAAAA,KAAK,EAAE,qBAAT;AAAgCW,EAAAA,IAAI,EAAE;AAAtC,CA5DkB,EA6DlB;AAAEX,EAAAA,KAAK,EAAE,wBAAT;AAAmCW,EAAAA,IAAI,EAAE;AAAzC,CA7DkB,EA8DlB;AAAEX,EAAAA,KAAK,EAAE,gBAAT;AAA2BW,EAAAA,IAAI,EAAE;AAAjC,CA9DkB,EA+DlB;AAAEX,EAAAA,KAAK,EAAE,kBAAT;AAA6BW,EAAAA,IAAI,EAAE;AAAnC,CA/DkB,EAgElB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CAhEkB,EAiElB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CAjEkB,EAkElB;AAAEX,EAAAA,KAAK,EAAE,iBAAT;AAA4BW,EAAAA,IAAI,EAAE;AAAlC,CAlEkB,EAmElB;AAAEX,EAAAA,KAAK,EAAE,uBAAT;AAAkCW,EAAAA,IAAI,EAAE;AAAxC,CAnEkB,EAoElB;AAAEX,EAAAA,KAAK,EAAE,mBAAT;AAA8BW,EAAAA,IAAI,EAAE;AAApC,CApEkB,EAqElB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CArEkB,EAsElB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CAtEkB,EAuElB;AAAEX,EAAAA,KAAK,EAAE,6BAAT;AAAwCW,EAAAA,IAAI,EAAE;AAA9C,CAvEkB,EAwElB;AAAEX,EAAAA,KAAK,EAAE,6BAAT;AAAwCW,EAAAA,IAAI,EAAE;AAA9C,CAxEkB,EAyElB;AAAEX,EAAAA,KAAK,EAAE,UAAT;AAAqBW,EAAAA,IAAI,EAAE;AAA3B,CAzEkB,EA0ElB;AAAEX,EAAAA,KAAK,EAAE,cAAT;AAAyBW,EAAAA,IAAI,EAAE;AAA/B,CA1EkB,EA2ElB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CA3EkB,EA4ElB;AAAEX,EAAAA,KAAK,EAAE,SAAT;AAAoBW,EAAAA,IAAI,EAAE;AAA1B,CA5EkB,EA6ElB;AAAEX,EAAAA,KAAK,EAAE,4CAAT;AAAuDW,EAAAA,IAAI,EAAE;AAA7D,CA7EkB,EA8ElB;AAAEX,EAAAA,KAAK,EAAE,gBAAT;AAA2BW,EAAAA,IAAI,EAAE;AAAjC,CA9EkB,EA+ElB;AAAEX,EAAAA,KAAK,EAAE,YAAT;AAAuBW,EAAAA,IAAI,EAAE;AAA7B,CA/EkB,EAgFlB;AAAEX,EAAAA,KAAK,EAAE,GAAT;AAAcW,EAAAA,IAAI,EAAE;AAApB,CAhFkB,EAiFlB;AAAEX,EAAAA,KAAK,EAAE,qBAAT;AAAgCW,EAAAA,IAAI,EAAE;AAAtC,CAjFkB,EAkFlB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CAlFkB,EAmFlB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CAnFkB,EAoFlB;AAAEX,EAAAA,KAAK,EAAE,qBAAT;AAAgCW,EAAAA,IAAI,EAAE;AAAtC,CApFkB,EAqFlB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CArFkB,EAsFlB;AAAEX,EAAAA,KAAK,EAAE,oBAAT;AAA+BW,EAAAA,IAAI,EAAE;AAArC,CAtFkB,EAuFlB;AAAEX,EAAAA,KAAK,EAAE,kBAAT;AAA6BW,EAAAA,IAAI,EAAE;AAAnC,CAvFkB,EAwFlB;AAAEX,EAAAA,KAAK,EAAE,uCAAT;AAAkDW,EAAAA,IAAI,EAAE;AAAxD,CAxFkB,EAyFlB;AAAEX,EAAAA,KAAK,EAAE,SAAT;AAAoBW,EAAAA,IAAI,EAAE;AAA1B,CAzFkB,EA0FlB;AAAEX,EAAAA,KAAK,EAAE,uBAAT;AAAkCW,EAAAA,IAAI,EAAE;AAAxC,CA1FkB,EA2FlB;AAAEX,EAAAA,KAAK,EAAE,aAAT;AAAwBW,EAAAA,IAAI,EAAE;AAA9B,CA3FkB,EA4FlB;AAAEX,EAAAA,KAAK,EAAE,OAAT;AAAkBW,EAAAA,IAAI,EAAE;AAAxB,CA5FkB,EA6FlB;AAAEX,EAAAA,KAAK,EAAE,mBAAT;AAA8BW,EAAAA,IAAI,EAAE;AAApC,CA7FkB,EA8FlB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CA9FkB,EA+FlB;AAAEX,EAAAA,KAAK,EAAE,WAAT;AAAsBW,EAAAA,IAAI,EAAE;AAA5B,CA/FkB,EAgGlB;AAAEX,EAAAA,KAAK,EAAE,uBAAT;AAAkCW,EAAAA,IAAI,EAAE;AAAxC,CAhGkB,EAiGlB;AAAEX,EAAAA,KAAK,EAAE,qBAAT;AAAgCW,EAAAA,IAAI,EAAE;AAAtC,CAjGkB,EAkGlB;AAAEX,EAAAA,KAAK,EAAE,WAAT;AAAsBW,EAAAA,IAAI,EAAE;AAA5B,CAlGkB,EAmGlB;AAAEX,EAAAA,KAAK,EAAE,iBAAT;AAA4BW,EAAAA,IAAI,EAAE;AAAlC,CAnGkB,EAoGlB;AAAEX,EAAAA,KAAK,EAAE,SAAT;AAAoBW,EAAAA,IAAI,EAAE;AAA1B,CApGkB,EAqGlB;AAAEX,EAAAA,KAAK,EAAE,sBAAT;AAAiCW,EAAAA,IAAI,EAAE;AAAvC,CArGkB,EAsGlB;AAAEX,EAAAA,KAAK,EAAE,QAAT;AAAmBW,EAAAA,IAAI,EAAE;AAAzB,CAtGkB,EAuGlB;AAAEX,EAAAA,KAAK,EAAE,UAAT;AAAqBW,EAAAA,IAAI,EAAE;AAA3B,CAvGkB,EAwGlB;AAAEX,EAAAA,KAAK,EAAE,iCAAT;AAA4CW,EAAAA,IAAI,EAAE;AAAlD,CAxGkB,CAApB;AA2GA,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  TextField,\n  InputAdornment,\n  useMediaQuery,\n  Grid,\n  Typography,\n  Button,\n  NoSsr,\n  colors,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircle from 'material-ui-icons/AccountCircle';\n\nimport { Section, CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  hero: {\n    background: theme.palette.alternate.dark,\n  },\n  child: {\n    width: '90%',\n    position: 'relative',\n    left: '69px',\n    '& .MuiCardContent-root': {\n      padding: '16px 16px',\n    },\n  },\n  heroWrapper: {\n    position: 'relative',\n    padding: '8px 0px',\n  },\n  heroImageContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    height: '100%',\n    width: '100%',\n    // background:\n    //   'url(https://assets.maccarianagency.com/the-front/photos/people/designer.png) no-repeat right bottom',\n    // backgroundSize: 'contain',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  heroGrid: {\n    maxWidth: 926,\n  },\n  searchGrid: {\n    zIndex: 3,\n  },\n  searchGridText: {\n    maxWidth: 605,\n  },\n  textField: {\n    width: '100%',\n  },\n  searchButton: {\n    width: '100%',\n    height: '100%',\n  },\n  searchIcon: {\n    color: colors.grey[600],\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst Hero = () => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <section>\n      <Section className={classes.heroWrapper}>\n        <CardBase\n          variant=\"outlined\"\n          withShadow\n          liftUp\n          className={classes.child}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={4}>\n              <Autocomplete\n                id=\"free-solo-demo\"\n                freeSolo\n                options={top100Films.map(option => option.title)}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    label=\"freeSolo\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                )}\n              />\n              {/* <TextField\n                placeholder=\"Location\"\n                variant=\"outlined\"\n                className={classes.textField}\n                size={isMd ? 'medium' : 'small'}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <NoSsr>\n                        <i\n                          className={clsx(\n                            'fas fa-map-marker-alt',\n                            classes.searchIcon,\n                          )}\n                        />\n                      </NoSsr>\n                    </InputAdornment>\n                  ),\n                }}\n              /> */}\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                // label=\"Search doctor, clinic etc.\"\n                variant=\"outlined\"\n                placeholder=\"Search doctor, Clinic, Symptoms, Specialty etc.\"\n                className={classes.textField}\n                size={isMd ? 'medium' : 'small'}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <NoSsr>\n                        <i\n                          className={clsx('fas fa-search', classes.searchIcon)}\n                        />\n                      </NoSsr>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={2}>\n              <Button\n                className={classes.searchButton}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </CardBase>\n      </Section>\n    </section>\n  );\n};\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title:\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}