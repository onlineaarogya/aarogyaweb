{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'React';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { Grid, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold'\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)'\n    }\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  fontWeight300: {\n    fontWeight: 300\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700\n  }\n}));\n\nconst Questions = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const {\n    url\n  } = props.api_data;\n  const items = []; // var len = oFullResponse.results.length;\n\n  props.api_data.data.forEach(function (arrayItem) {\n    // console.log(props.api_data.data.[0]);\n    items.push({\n      id: arrayItem.nid,\n      title: arrayItem.title,\n      subtitle: arrayItem.field_subtitle.substring(0, 100),\n      text: arrayItem.body.replace(/<[^>]*>?/gm, '') // link: 'Check it out',\n\n    });\n  });\n  const [state, setstate] = useState(initialState)([]); // const fetchData = async () => {\n  //   const req = await fetch(\n  //     'https://randomuser.me/api/?gender=male&results=100',\n  //   );\n  //   const newData = await req.json();\n  //   return setData(newData.results);\n  // };\n  // const handleClick = event => {\n  //   event.preventDefault();\n  //   fetchData();\n  // };\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, __jsx(IconAlternate, {\n    fontIconClass: data.icon,\n    size: \"medium\",\n    color: colors.red,\n    shape: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: url,\n    secondary: `Letâ€™s try to fix your ${url} issues.`,\n    primaryTypographyProps: {\n      variant: 'h6'\n    },\n    secondaryTypographyProps: {\n      variant: 'h6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    className: classes.listItemText,\n    primary: \"Updated Answers\",\n    secondary: `${props.api_data.data.length} answers`,\n    primaryTypographyProps: {\n      variant: 'subtitle1',\n      color: 'textSecondary'\n    },\n    secondaryTypographyProps: {\n      variant: 'body1',\n      className: classes.answerCount\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.accordionGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Accordion, {\n    items: items,\n    titleProps: {\n      variant: 'subtitle1',\n      className: classes.fontWeightBold\n    },\n    subtitleProps: {\n      className: classes.fontWeight300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Questions, \"MDfwtDSu5HtAhpAAt3QEPIX1FyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Questions;\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Questions/Questions.js"],"names":["useState","PropTypes","makeStyles","colors","Grid","List","ListItem","ListItemAvatar","ListItemText","IconAlternate","Accordion","useStyles","theme","title","fontWeight","accordionGrid","boxShadow","fontWeightBold","fontWeight300","listItemAvatar","marginRight","spacing","listItemText","display","justifyContent","alignItems","flexWrap","answerCount","padding","borderRadius","background","palette","error","main","color","Questions","props","data","className","rest","classes","url","api_data","items","forEach","arrayItem","push","id","nid","subtitle","field_subtitle","substring","text","body","replace","state","setstate","initialState","icon","red","variant","length","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'React';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)',\n    },\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  fontWeight300: {\n    fontWeight: 300,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700,\n  },\n}));\n\nconst Questions = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  const { url } = props.api_data;\n  const items = [];\n  // var len = oFullResponse.results.length;\n  props.api_data.data.forEach(function(arrayItem) {\n    // console.log(props.api_data.data.[0]);\n    items.push({\n      id: arrayItem.nid,\n      title: arrayItem.title,\n      subtitle: arrayItem.field_subtitle.substring(0, 100),\n      text: arrayItem.body.replace(/<[^>]*>?/gm, ''),\n      // link: 'Check it out',\n    });\n  });\n\n  const [state, setstate] = useState(initialState)([]);\n\n  // const fetchData = async () => {\n  //   const req = await fetch(\n  //     'https://randomuser.me/api/?gender=male&results=100',\n  //   );\n  //   const newData = await req.json();\n\n  //   return setData(newData.results);\n  // };\n\n  // const handleClick = event => {\n  //   event.preventDefault();\n  //   fetchData();\n  // };\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List>\n            <ListItem disableGutters>\n              <ListItemAvatar className={classes.listItemAvatar}>\n                <IconAlternate\n                  fontIconClass={data.icon}\n                  size=\"medium\"\n                  color={colors.red}\n                  shape=\"circle\"\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={url}\n                secondary={`Letâ€™s try to fix your ${url} issues.`}\n                primaryTypographyProps={{\n                  variant: 'h6',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'h6',\n                }}\n              />\n            </ListItem>\n            <ListItem disableGutters>\n              <ListItemText\n                className={classes.listItemText}\n                primary=\"Updated Answers\"\n                secondary={`${props.api_data.data.length} answers`}\n                primaryTypographyProps={{\n                  variant: 'subtitle1',\n                  color: 'textSecondary',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'body1',\n                  className: classes.answerCount,\n                }}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} className={classes.accordionGrid}>\n          <Accordion\n            items={items}\n            titleProps={{\n              variant: 'subtitle1',\n              className: classes.fontWeightBold,\n            }}\n            subtitleProps={{\n              className: classes.fontWeight300,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}