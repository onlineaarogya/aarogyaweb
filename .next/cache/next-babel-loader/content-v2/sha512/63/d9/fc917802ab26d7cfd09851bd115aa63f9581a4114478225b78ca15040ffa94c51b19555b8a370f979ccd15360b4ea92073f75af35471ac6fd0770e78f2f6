{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Avatar, Typography, Grid, Divider } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { CardProduct } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  cardProduct: {\n    display: 'flex',\n    height: '100%',\n    borderRadius: theme.spacing(1),\n    '& .card-product__content, & .card-product__media': {\n      flex: '1 1 50%',\n      height: '100%'\n    },\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column !important',\n      '& .card-product__content, & .card-product__media': {\n        flex: '1 1 100%'\n      }\n    }\n  },\n  cardProductReverse: {\n    flexDirection: 'row-reverse',\n    '& .card-product__media img': {\n      borderRadius: theme.spacing(0, 0, 0, 20)\n    }\n  },\n  image: {\n    objectFit: 'cover',\n    borderRadius: theme.spacing(0, 0, 20, 0)\n  },\n  blogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  list: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  avatarContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  tags: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  tag: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1 / 2),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    margin: theme.spacing(0, 1, 1, 0),\n    cursor: 'pointer',\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(0, 2, 2, 0)\n    }\n  }\n}));\n\nconst Horizontal = props => {\n  // console.log('horizental', props.api_data);\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]); // console.log('props', props);\n  // console.log('praveen', process.env.DB_HOST);\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n\n  const BlogMediaContent = props => __jsx(Image, _extends({}, props, {\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    }\n  }));\n\n  const BlogContent = props => __jsx(\"div\", {\n    className: classes.blogContent\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    gutterBottom: true\n  }, props.title), __jsx(Typography, {\n    escapeHtml: \"false\",\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    gutterBottom: true\n  }, props.subtitle.substring(0, 400)), __jsx(\"div\", {\n    className: classes.tags\n  }, props.tags.split(',').map((item, index) => __jsx(Typography, {\n    variant: \"caption\",\n    color: \"primary\",\n    className: classes.tag,\n    key: index\n  }, item))), __jsx(\"div\", {\n    style: {\n      flexGrow: 1\n    }\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(\"div\", {\n    className: classes.list\n  }, __jsx(\"div\", {\n    className: classes.avatarContainer\n  }, __jsx(Avatar, {\n    src: `${process.env.NEXT_PUBLIC_DB_HOST + props.user_picture}`,\n    className: classes.avatar\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\"\n  }, props.name)), __jsx(Typography, {\n    variant: \"overline\",\n    color: \"textSecondary\"\n  }, props.created)));\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, props.api_data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(CardProduct, {\n    withShadow: true,\n    liftUp: true,\n    className: clsx(classes.cardProduct, index % 2 !== 0 ? classes.cardProductReverse : {}),\n    mediaContent: __jsx(React.Fragment, null, __jsx(BlogMediaContent, {\n      src: `${process.env.NEXT_PUBLIC_DB_HOST}` + item.field_image,\n      alt: item.title\n    })),\n    cardContent: __jsx(BlogContent, {\n      title: item.title,\n      subtitle: item.body.replace(/<[^>]*>?/gm, ''),\n      name: item.field_full_name,\n      user_picture: item.user_picture,\n      created: item.created,\n      tags: item.field_tags // author={item.author}\n      // date={item.date}\n\n    })\n  })))));\n};\n\nexport default Horizontal;","map":null,"metadata":{},"sourceType":"module"}