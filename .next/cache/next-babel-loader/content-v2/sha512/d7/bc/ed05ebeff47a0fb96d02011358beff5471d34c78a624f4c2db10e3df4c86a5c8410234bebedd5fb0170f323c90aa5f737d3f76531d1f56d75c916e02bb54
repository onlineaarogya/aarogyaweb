{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/components/organisms/CardReview/CardReview.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Avatar, Typography, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  }\n}));\n/**\n * Component to display the review card\n *\n * @param {Object} props\n */\n\nconst CardReview = props => {\n  const {\n    icon,\n    text,\n    authorPhoto,\n    authorName,\n    authorTitle,\n    align,\n    textVariant,\n    className,\n    textProps,\n    listItemPrimaryTypographyProps,\n    listItemSecondaryTypographyProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"icon\", \"text\", \"authorPhoto\", \"authorName\", \"authorTitle\", \"align\", \"textVariant\", \"className\", \"textProps\", \"listItemPrimaryTypographyProps\", \"listItemSecondaryTypographyProps\"]);\n\n  const classes = useStyles();\n  let justifyGrid = 'center';\n\n  if (align === 'left') {\n    justifyGrid = 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return __jsx(CardBase, _extends({\n    className: clsx('card-review', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"card-review__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: justifyGrid,\n    xs: 12,\n    className: \"card-review__icon-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, icon), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-review__text-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, _extends({\n    variant: textVariant,\n    align: align,\n    component: \"p\"\n  }, textProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), text)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-review__lits-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: justifyGrid,\n    className: \"card-review__list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(List, {\n    disablePadding: true,\n    className: \"card-review__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(ListItem, {\n    className: \"card-review__list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, __jsx(ListItemAvatar, {\n    className: \"card-review__list-item-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, __jsx(Avatar, _extends({}, authorPhoto, {\n    alt: authorName,\n    className: \"card-review__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }))), __jsx(ListItemText, {\n    className: \"card-review__list-item-text\",\n    primary: authorName,\n    secondary: authorTitle,\n    primaryTypographyProps: _objectSpread({}, listItemPrimaryTypographyProps),\n    secondaryTypographyProps: _objectSpread({}, listItemSecondaryTypographyProps),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nCardReview.defaultProps = {\n  align: 'center',\n  textVariant: 'h6',\n  textProps: {},\n  listItemPrimaryTypographyProps: {},\n  listItemSecondaryTypographyProps: {}\n};\nCardReview.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Icon to show inside the review card\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * Review text to show inside the review card\n   */\n  text: PropTypes.string.isRequired,\n\n  /**\n   * Reviewer photo to show inside the review card.Should be an object with src and srcSet properties\n   */\n  authorPhoto: PropTypes.object.isRequired,\n\n  /**\n   * Reviewer name to show inside the review card\n   */\n  authorName: PropTypes.string.isRequired,\n\n  /**\n   * Reviewer title to show inside the review card\n   */\n  authorTitle: PropTypes.string,\n\n  /**\n   * Alignment of the content\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\n   * Review text variant\n   */\n  textVariant: PropTypes.string,\n\n  /**\n   * Additional props to pass to the text Typography component\n   */\n  textProps: PropTypes.object,\n\n  /**\n   * Additional props to pass to the list item primary text Typography component\n   */\n  listItemPrimaryTypographyProps: PropTypes.object,\n\n  /**\n   * Additional props to pass to the list item secondary text Typography component\n   */\n  listItemSecondaryTypographyProps: PropTypes.object\n};\nexport default CardReview;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/components/organisms/CardReview/CardReview.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Avatar","Typography","List","ListItem","ListItemAvatar","ListItemText","CardBase","useStyles","theme","root","height","width","CardReview","props","icon","text","authorPhoto","authorName","authorTitle","align","textVariant","className","textProps","listItemPrimaryTypographyProps","listItemSecondaryTypographyProps","rest","classes","justifyGrid","defaultProps","propTypes","string","node","isRequired","object","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Avatar,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n}));\n\n/**\n * Component to display the review card\n *\n * @param {Object} props\n */\nconst CardReview = props => {\n  const {\n    icon,\n    text,\n    authorPhoto,\n    authorName,\n    authorTitle,\n    align,\n    textVariant,\n    className,\n    textProps,\n    listItemPrimaryTypographyProps,\n    listItemSecondaryTypographyProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  let justifyGrid = 'center';\n  if (align === 'left') {\n    justifyGrid = 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return (\n    <CardBase\n      className={clsx('card-review', classes.root, className)}\n      {...rest}\n    >\n      <Grid container spacing={2} className=\"card-review__wrapper\">\n        <Grid\n          item\n          container\n          justify={justifyGrid}\n          xs={12}\n          className=\"card-review__icon-wrapper\"\n        >\n          {icon}\n        </Grid>\n        <Grid item xs={12} className=\"card-review__text-wrapper\">\n          <Typography\n            variant={textVariant}\n            align={align}\n            component=\"p\"\n            {...textProps}\n          >\n            {text}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className=\"card-review__lits-container\">\n          <Grid\n            container\n            justify={justifyGrid}\n            className=\"card-review__list-wrapper\"\n          >\n            <List disablePadding className=\"card-review__list\">\n              <ListItem className=\"card-review__list-item\">\n                <ListItemAvatar className=\"card-review__list-item-avatar\">\n                  <Avatar\n                    {...authorPhoto}\n                    alt={authorName}\n                    className=\"card-review__avatar\"\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  className=\"card-review__list-item-text\"\n                  primary={authorName}\n                  secondary={authorTitle}\n                  primaryTypographyProps={{\n                    ...listItemPrimaryTypographyProps,\n                  }}\n                  secondaryTypographyProps={{\n                    ...listItemSecondaryTypographyProps,\n                  }}\n                />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      </Grid>\n    </CardBase>\n  );\n};\n\nCardReview.defaultProps = {\n  align: 'center',\n  textVariant: 'h6',\n  textProps: {},\n  listItemPrimaryTypographyProps: {},\n  listItemSecondaryTypographyProps: {},\n};\n\nCardReview.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Icon to show inside the review card\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * Review text to show inside the review card\n   */\n  text: PropTypes.string.isRequired,\n  /**\n   * Reviewer photo to show inside the review card.Should be an object with src and srcSet properties\n   */\n  authorPhoto: PropTypes.object.isRequired,\n  /**\n   * Reviewer name to show inside the review card\n   */\n  authorName: PropTypes.string.isRequired,\n  /**\n   * Reviewer title to show inside the review card\n   */\n  authorTitle: PropTypes.string,\n  /**\n   * Alignment of the content\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n  /**\n   * Review text variant\n   */\n  textVariant: PropTypes.string,\n  /**\n   * Additional props to pass to the text Typography component\n   */\n  textProps: PropTypes.object,\n  /**\n   * Additional props to pass to the list item primary text Typography component\n   */\n  listItemPrimaryTypographyProps: PropTypes.object,\n  /**\n   * Additional props to pass to the list item secondary text Typography component\n   */\n  listItemSecondaryTypographyProps: PropTypes.object,\n};\n\nexport default CardReview;\n"]},"metadata":{},"sourceType":"module"}