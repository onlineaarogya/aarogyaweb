{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%'\n  }\n}));\n/**\r\n * Component to display the map\r\n *\r\n * @param {Object} props\r\n */\n\nconst Map = props => {\n  const {\n    zoom,\n    center,\n    pins,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"zoom\", \"center\", \"pins\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    const L = require('leaflet');\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    const markerIcon2x = require('assets/images/leaflet-assets/marker-icon-2x.png');\n\n    const markerIcon = require('assets/images/leaflet-assets/marker-icon.png');\n\n    const markerShadow = require('assets/images/leaflet-assets/marker-shadow.png');\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: typeof markerIcon2x === 'object' ? markerIcon2x.default : markerIcon2x,\n      iconUrl: typeof markerIcon === 'object' ? markerIcon.default : markerIcon,\n      shadowUrl: typeof markerShadow === 'object' ? markerShadow.default : markerShadow\n    });\n  });\n\n  if (true) {\n    return null;\n  }\n\n  const ReactMap = require('react-leaflet').Map;\n\n  const TileLayer = require('react-leaflet').TileLayer;\n\n  const Marker = require('react-leaflet').Marker;\n\n  return __jsx(ReactMap, _extends({\n    zoom: zoom,\n    center: center,\n    className: clsx('map', classes.root, className)\n  }, rest), __jsx(TileLayer, {\n    className: \"map__tile-layer\",\n    detectRetina: true,\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  }), pins && pins.length && pins.map((item, i) => __jsx(Marker, {\n    className: \"map__marker\",\n    position: [item.location.y, item.location.x],\n    key: i\n  })));\n};\n\nvar maxBounds = [[20.26667, 73.01667] //Southwest\n];\nMap.defaultProps = {\n  zoom: 11,\n  center: [0, 0],\n  maxBounds: maxBounds\n};\nexport default Map;","map":null,"metadata":{},"sourceType":"module"}