{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  dBlock: {\n    display: 'block'\n  }\n}));\n/**\n * Component to display the images\n *\n * @param {Object} props\n */\n\nconst Image = props => {\n  const {\n    src,\n    srcSet,\n    alt,\n    lazy,\n    lazyProps,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"src\", \"srcSet\", \"alt\", \"lazy\", \"lazyProps\", \"className\"]);\n\n  const classes = useStyles();\n\n  if (lazy) {\n    return __jsx(LazyLoadImage, _extends({\n      className: clsx('image', classes.root, classes.dBlock, className),\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      effect: \"opacity\"\n    }, lazyProps, rest));\n  }\n\n  return __jsx(\"img\", _extends({\n    className: clsx('image', classes.root, className),\n    alt: alt,\n    src: src,\n    srcSet: srcSet\n  }, rest));\n};\n\nImage.defaultProps = {\n  alt: '...',\n  lazy: true,\n  lazyProps: {\n    width: 'auto',\n    height: 'auto'\n  }\n};\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}