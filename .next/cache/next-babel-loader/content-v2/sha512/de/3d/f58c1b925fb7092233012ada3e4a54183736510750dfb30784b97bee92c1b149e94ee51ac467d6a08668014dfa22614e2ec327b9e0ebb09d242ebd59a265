{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\views\\\\AfterLogin\\\\MemberDetails\\\\components\\\\UploadFile\\\\UploadFile.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { AttachFile, AudioTrack, Description, PictureAsPdf, Theaters } from '@material-ui/icons';\nimport { Link, NavLink } from \"react-router-dom\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nconst styless = makeStyles(theme => ({\n  root: {\n    background: '#4caf50'\n  }\n})); // Code for Image crop \n\nfunction generateDownload(canvas, crop) {\n  if (!crop || !canvas) {\n    return;\n  }\n\n  canvas.toBlob(blob => {\n    const previewUrl = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.download = 'cropPreview.png';\n    anchor.href = URL.createObjectURL(blob);\n    anchor.click();\n    window.URL.revokeObjectURL(previewUrl);\n  }, 'image/png', 1);\n} // End of Image crop \n\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, \"Add Image\"), __jsx(DropzoneDialog, {\n    acceptedFiles: ['image/*'],\n    cancelButtonText: \"cancel\",\n    submitButtonText: \"submit\",\n    maxFileSize: 5000000,\n    open: open,\n    onClose: () => setOpen(false),\n    onSave: files => {\n      console.log('Files:', files);\n      setOpen(false);\n    },\n    showPreviews: true,\n    showFileNamesInPreview: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/views/AfterLogin/MemberDetails/components/UploadFile/UploadFile.js"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Box","Typography","PublishIcon","useState","useEffect","useCallback","useRef","AttachFile","AudioTrack","Description","PictureAsPdf","Theaters","Link","NavLink","CloudUploadIcon","Redirect","useHistory","Alert","Snackbar","makeStyles","axios","styless","theme","root","background","generateDownload","canvas","crop","toBlob","blob","previewUrl","window","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","styles","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","setOpen","open","files","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAqD,OAArD;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,YAA9C,EAA4DC,QAA5D,QAA4E,oBAA5E;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAAUC,QAAV,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR;AAD+B,CAAZ,CAAD,CAA1B,C,CAKA;;AAEA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AACtC,MAAI,CAACA,IAAD,IAAS,CAACD,MAAd,EAAsB;AACpB;AACD;;AAEDA,EAAAA,MAAM,CAACE,MAAP,CACGC,IAAD,IAAU;AACR,UAAMC,UAAU,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAnB;AAEA,UAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,QAAP,GAAkB,iBAAlB;AACAH,IAAAA,MAAM,CAACI,IAAP,GAAcN,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAd;AACAK,IAAAA,MAAM,CAACK,KAAP;AAEAR,IAAAA,MAAM,CAACC,GAAP,CAAWQ,eAAX,CAA2BV,UAA3B;AACD,GAVH,EAWE,WAXF,EAYE,CAZF;AAcD,C,CAED;;;AAEA,MAAMW,MAAM,GAAInB,KAAD,KAAY;AACzBC,EAAAA,IAAI,EAAE;AACJmB,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd;AAFL,GADmB;AAKzBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAEzB,KAAK,CAACsB,OAAN,CAAc,CAAd,CAFI;AAGXI,IAAAA,GAAG,EAAE1B,KAAK,CAACsB,OAAN,CAAc,CAAd,CAHM;AAIXK,IAAAA,KAAK,EAAE3B,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AALY,CAAZ,CAAf;;AAaA,MAAMC,WAAW,GAAG5D,UAAU,CAACiD,MAAD,CAAV,CAAoBY,KAAD,IAAW;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA2CH,KAAjD;AAAA,QAAuCI,KAAvC,4BAAiDJ,KAAjD;;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,iBAAiB,MAAjC;AAAkC,IAAA,SAAS,EAAEE,OAAO,CAAChC;AAArD,KAA+DkC,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,QAA1B,CADF,EAEGE,OAAO,GACN,MAAC,UAAD;AAAY,kBAAW,OAAvB;AAA+B,IAAA,SAAS,EAAED,OAAO,CAACV,WAAlD;AAA+D,IAAA,OAAO,EAAEW,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAIJ,IANN,CADF;AAUD,CAZmB,CAApB;AAcA,MAAME,aAAa,GAAGlE,UAAU,CAAE8B,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJoB,IAAAA,OAAO,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd;AADL;AADqC,CAAZ,CAAD,CAAV,CAIlBhD,gBAJkB,CAAtB;AAMA,MAAM+D,aAAa,GAAGnE,UAAU,CAAE8B,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJmB,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,OAAO,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd;AAFL;AADqC,CAAZ,CAAD,CAAV,CAKlB/C,gBALkB,CAAtB;AAOA,eAAe,SAAS+D,iBAAT,CAA2BP,KAA3B,EAAkC;AAG/C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAMQ,OAAO,CAAC,IAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK,EAIC,MAAC,cAAD;AACI,IAAA,aAAa,EAAE,CAAC,SAAD,CADnB;AAEI,IAAA,gBAAgB,EAAE,QAFtB;AAGI,IAAA,gBAAgB,EAAE,QAHtB;AAII,IAAA,WAAW,EAAE,OAJjB;AAKI,IAAA,IAAI,EAAEC,IALV;AAMI,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CAN1B;AAOI,IAAA,MAAM,EAAGE,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACAF,MAAAA,OAAO,CAAC,KAAD,CAAP;AACC,KAVL;AAWI,IAAA,YAAY,EAAE,IAXlB;AAYI,IAAA,sBAAsB,EAAE,IAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADH,CADF;AAuBD","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport {useState,useEffect,useCallback, useRef} from 'react';\r\n\r\nimport { AttachFile, AudioTrack, Description, PictureAsPdf, Theaters } from '@material-ui/icons';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nconst styless = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#4caf50'\r\n  }\r\n}));\r\n// Code for Image crop \r\n\r\nfunction generateDownload(canvas, crop) {\r\n  if (!crop || !canvas) {\r\n    return;\r\n  }\r\n\r\n  canvas.toBlob(\r\n    (blob) => {\r\n      const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n      const anchor = document.createElement('a');\r\n      anchor.download = 'cropPreview.png';\r\n      anchor.href = URL.createObjectURL(blob);\r\n      anchor.click();\r\n\r\n      window.URL.revokeObjectURL(previewUrl);\r\n    },\r\n    'image/png',\r\n    1\r\n  );\r\n}\r\n\r\n// End of Image crop \r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div>\r\n  <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>\r\n    Add Image\r\n  </Button>\r\n        <DropzoneDialog\r\n            acceptedFiles={['image/*']}\r\n            cancelButtonText={\"cancel\"}\r\n            submitButtonText={\"submit\"}\r\n            maxFileSize={5000000}\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            onSave={(files) => {\r\n            console.log('Files:', files);\r\n            setOpen(false);\r\n            }}\r\n            showPreviews={true}\r\n            showFileNamesInPreview={true}\r\n        />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}