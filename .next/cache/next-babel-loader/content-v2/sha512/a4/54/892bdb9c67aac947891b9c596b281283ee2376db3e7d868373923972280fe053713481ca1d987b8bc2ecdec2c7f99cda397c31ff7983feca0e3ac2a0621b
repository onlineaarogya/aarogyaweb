{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { Section } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'visible'\n  },\n  colorDefault: {\n    background: colors.indigo[900]\n  },\n  heroWrapper: {\n    zIndex: 2\n  },\n  heroCover: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0.2,\n    width: '100%',\n    height: '100%',\n    zIndex: 1\n  },\n  heroBg: {\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat'\n  },\n  noCoverOpacity: {\n    opacity: 1\n  }\n}));\n/**\r\n * Component to display the background hero\r\n *\r\n * @param {Object} props\r\n */\n\nconst HeroBackground = props => {\n  const {\n    children,\n    disbaleCoverOpacity,\n    backgroundImg,\n    backgroundPosition,\n    backgroundColor,\n    contentSectionClassName,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"disbaleCoverOpacity\", \"backgroundImg\", \"backgroundPosition\", \"backgroundColor\", \"contentSectionClassName\", \"className\"]);\n\n  const classes = useStyles();\n  const useCustomStyles = makeStyles(() => ({\n    coverBg: {\n      backgroundImage: `url(${backgroundImg})`\n    },\n    backgroundColor: {\n      background: backgroundColor\n    },\n    backgroundPosition: {\n      backgroundPosition: backgroundPosition\n    }\n  }));\n  const customClasses = useCustomStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx('hero-background', classes.root, backgroundColor ? customClasses.backgroundColor : classes.colorDefault, className)\n  }, rest), __jsx(\"div\", {\n    className: clsx('hero-background__wrapper', classes.heroWrapper)\n  }, __jsx(Section, {\n    className: clsx(contentSectionClassName ? contentSectionClassName : '', 'hero-background__section')\n  }, children)), __jsx(\"div\", {\n    className: clsx('hero-background__cover', classes.heroBg, classes.heroCover, customClasses.coverBg, backgroundPosition ? customClasses.backgroundPosition : {}, disbaleCoverOpacity ? classes.noCoverOpacity : {})\n  }));\n};\n\nexport default HeroBackground;","map":null,"metadata":{},"sourceType":"module"}