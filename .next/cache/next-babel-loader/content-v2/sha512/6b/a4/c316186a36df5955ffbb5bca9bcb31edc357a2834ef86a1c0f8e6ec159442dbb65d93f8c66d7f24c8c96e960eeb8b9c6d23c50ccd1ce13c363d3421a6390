{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\views\\\\AfterLogin\\\\UpdateProfile\\\\UpdateProfile.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nclass UpdateProfile extends React.Component {\n  render() {\n    return __jsx(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: Yup.object().shape({\n        firstName: Yup.string().required('First Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: fields => {\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, \"First Name\"), __jsx(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, \"Last Name\"), __jsx(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"lastName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, \"Email\"), __jsx(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, \"Password\"), __jsx(Field, {\n        name: \"password\",\n        type: \"password\",\n        className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"password\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, \"Confirm Password\"), __jsx(Field, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        className: 'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"confirmPassword\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, \"Register\"), __jsx(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, \"Reset\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default {\n  UpdateProfile\n}; // import React, { lazy, Suspense } from 'react';\n// import { parse } from 'query-string';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Section } from 'components/organisms';\n// import { Loading } from './components';\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     minHeight: '100vh',\n//     height: '100%',\n//     width: '100%',\n//   },\n//   section: {\n//     paddingTop: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       paddingTop: theme.spacing(4),\n//     }\n//   },\n// }));\n// const getComponentId = () => parse(window.location.search).component || 'introduction';\n// const renderComponent = () => {\n//   let Component = null;\n//   const componentId = getComponentId();\n// //   switch (componentId) {\n// //     case 'introduction':\n// //       const Introduction = lazy(() => import('./parts/Introduction'));\n// //       Component = <Introduction />;\n// //       break;\n// //     case 'quick-start':\n// //       const QuickStart = lazy(() => import('./parts/QuickStart'));\n// //       Component = <QuickStart />;\n// //       break;\n// //     case 'changelog':\n// //       const Changelog = lazy(() => import('./parts/Changelog'));\n// //       Component = <Changelog />;\n// //       break;\n// //     case 'dark-mode-toggler':\n// //       const DarkModeTogglerExample = lazy(() => import('./examples/DarkModeTogglerExample'));\n// //       Component = <DarkModeTogglerExample />;\n// //       break;\n// //     case 'icon':\n// //       const IconExample = lazy(() => import('./examples/IconExample'));\n// //       Component = <IconExample />;\n// //       break;\n// //     case 'icon-text':\n// //       const IconTextExample = lazy(() => import('./examples/IconTextExample'));\n// //       Component = <IconTextExample />;\n// //       break;\n// //     case 'image':\n// //       const ImageExample = lazy(() => import('./examples/ImageExample'));\n// //       Component = <ImageExample />;\n// //       break;\n// //     case 'learn-more-link':\n// //       const LearnMoreLinkExample = lazy(() => import('./examples/LearnMoreLinkExample'));\n// //       Component = <LearnMoreLinkExample />;\n// //       break;\n// //     case 'count-up-number':\n// //       const CountUpNumberExample = lazy(() => import('./examples/CountUpNumberExample'));\n// //       Component = <CountUpNumberExample />;\n// //       break;\n// //     case 'description-with-cta':\n// //       const DescriptionCtaExample = lazy(() => import('./examples/DescriptionCtaExample'));\n// //       Component = <DescriptionCtaExample />;\n// //       break;\n// //     case 'icon-alternate':\n// //       const IconAlternateExample = lazy(() => import('./examples/IconAlternateExample'));\n// //       Component = <IconAlternateExample />;\n// //       break;\n// //     case 'overlapped-images':\n// //       const OverlapedImagesExample = lazy(() => import('./examples/OverlapedImagesExample'));\n// //       Component = <OverlapedImagesExample />;\n// //       break;\n// //     case 'section-header':\n// //       const SectionHeaderExample = lazy(() => import('./examples/SectionHeaderExample'));\n// //       Component = <SectionHeaderExample />;\n// //       break;\n// //     case 'image-swiper':\n// //       const SwiperImageExample = lazy(() => import('./examples/SwiperImageExample'));\n// //       Component = <SwiperImageExample />;\n// //       break;\n// //     case 'numbers-swiper':\n// //       const SwiperNumberExample = lazy(() => import('./examples/SwiperNumberExample'));\n// //       Component = <SwiperNumberExample />;\n// //       break;\n// //     case 'typed-text':\n// //       const TypedTextExample = lazy(() => import('./examples/TypedTextExample'));\n// //       Component = <TypedTextExample />;\n// //       break;\n// //     case 'accordion':\n// //       const AccordionExample = lazy(() => import('./examples/AccordionExample'));\n// //       Component = <AccordionExample />;\n// //       break;\n// //     case 'card-base':\n// //       const CardBaseExample = lazy(() => import('./examples/CardBaseExample'));\n// //       Component = <CardBaseExample />;\n// //       break;\n// //     case 'card-category':\n// //       const CardCategoryExample = lazy(() => import('./examples/CardCategoryExample'));\n// //       Component = <CardCategoryExample />;\n// //       break;\n// //     case 'card-category-link':\n// //       const CardCategoryLinkExample = lazy(() => import('./examples/CardCategoryLinkExample'));\n// //       Component = <CardCategoryLinkExample />;\n// //       break;\n// //     case 'card-job':\n// //       const CardJobExample = lazy(() => import('./examples/CardJobExample'));\n// //       Component = <CardJobExample />;\n// //       break;\n// //     case 'card-job-company':\n// //       const CardJobCompanyExample = lazy(() => import('./examples/CardJobCompanyExample'));\n// //       Component = <CardJobCompanyExample />;\n// //       break;\n// //     case 'card-job-minimal':\n// //       const CardJobMinimalExample = lazy(() => import('./examples/CardJobMinimalExample'));\n// //       Component = <CardJobMinimalExample />;\n// //       break;\n// //     case 'card-job-tag':\n// //       const CardJobTagExample = lazy(() => import('./examples/CardJobTagExample'));\n// //       Component = <CardJobTagExample />;\n// //       break;\n// //     case 'card-pricing-standard':\n// //       const CardPricingStandardExample = lazy(() => import('./examples/CardPricingStandardExample'));\n// //       Component = <CardPricingStandardExample />;\n// //       break;\n// //     case 'card-product':\n// //       const CardProductExample = lazy(() => import('./examples/CardProductExample'));\n// //       Component = <CardProductExample />;\n// //       break;\n// //     case 'card-promo':\n// //       const CardPromoExample = lazy(() => import('./examples/CardPromoExample'));\n// //       Component = <CardPromoExample />;\n// //       break;\n// //     case 'card-review':\n// //       const CardReviewExample = lazy(() => import('./examples/CardReviewExample'));\n// //       Component = <CardReviewExample />;\n// //       break;\n// //     case 'description-list-icon':\n// //       const DescriptionListIconExample = lazy(() => import('./examples/DescriptionListIconExample'));\n// //       Component = <DescriptionListIconExample />;\n// //       break;\n// //     case 'hero-background':\n// //       const HeroBackgroundExample = lazy(() => import('./examples/HeroBackgroundExample'));\n// //       Component = <HeroBackgroundExample />;\n// //       break;\n// //     case 'hero-shaped':\n// //       const HeroShapedExample = lazy(() => import('./examples/HeroShapedExample'));\n// //       Component = <HeroShapedExample />;\n// //       break;\n// //     case 'hero-side-image':\n// //       const HeroSideImageExample = lazy(() => import('./examples/HeroSideImageExample'));\n// //       Component = <HeroSideImageExample />;\n// //       break;\n// //     case 'hero-simple-background':\n// //       const HeroSimpleBackgroundExample = lazy(() => import('./examples/HeroSimpleBackgroundExample'));\n// //       Component = <HeroSimpleBackgroundExample />;\n// //       break;\n// //     case 'map':\n// //       const MapExample = lazy(() => import('./examples/MapExample'));\n// //       Component = <MapExample />;\n// //       break;\n// //     case 'parallax':\n// //       const ParallaxExample = lazy(() => import('./examples/ParallaxExample'));\n// //       Component = <ParallaxExample />;\n// //       break;\n// //     case 'section':\n// //       const SectionExample = lazy(() => import('./examples/SectionExample'));\n// //       Component = <SectionExample />;\n// //       break;\n// //     case 'section-alternate':\n// //       const SectionAlternateExample = lazy(() => import('./examples/SectionAlternateExample'));\n// //       Component = <SectionAlternateExample />;\n// //       break;\n// //     default:\n// //       Component = null;\n// //       break;\n// //   }\n// //   return Component;\n// };\n// const UpdateProfile = () => {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root}>\n//       <Section className={classes.section}>\n//         <Suspense fallback={<Loading />}>\n//        <h1>hello Account Info hello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Info</h1>\n//         </Suspense>\n//       </Section>\n//     </div>\n//   );\n// };\n// export default UpdateProfile;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/views/AfterLogin/UpdateProfile/UpdateProfile.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","UpdateProfile","Component","render","firstName","lastName","email","password","confirmPassword","object","shape","string","required","min","oneOf","ref","fields","alert","JSON","stringify","errors","status","touched"],"mappings":"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":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nclass UpdateProfile extends React.Component {\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string()\r\n                        .required('First Name is required'),\r\n                    lastName: Yup.string()\r\n                        .required('Last Name is required'),\r\n                    email: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('Email is required'),\r\n                    password: Yup.string()\r\n                        .min(6, 'Password must be at least 6 characters')\r\n                        .required('Password is required'),\r\n                    confirmPassword: Yup.string()\r\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n                        .required('Confirm Password is required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default { UpdateProfile };\r\n\r\n// import React, { lazy, Suspense } from 'react';\r\n// import { parse } from 'query-string';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import { Section } from 'components/organisms';\r\n// import { Loading } from './components';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     minHeight: '100vh',\r\n//     height: '100%',\r\n//     width: '100%',\r\n//   },\r\n//   section: {\r\n//     paddingTop: theme.spacing(2),\r\n//     [theme.breakpoints.up('md')]: {\r\n//       paddingTop: theme.spacing(4),\r\n//     }\r\n//   },\r\n// }));\r\n\r\n// const getComponentId = () => parse(window.location.search).component || 'introduction';\r\n\r\n// const renderComponent = () => {\r\n//   let Component = null;\r\n//   const componentId = getComponentId();\r\n\r\n// //   switch (componentId) {\r\n// //     case 'introduction':\r\n// //       const Introduction = lazy(() => import('./parts/Introduction'));\r\n// //       Component = <Introduction />;\r\n// //       break;\r\n// //     case 'quick-start':\r\n// //       const QuickStart = lazy(() => import('./parts/QuickStart'));\r\n// //       Component = <QuickStart />;\r\n// //       break;\r\n// //     case 'changelog':\r\n// //       const Changelog = lazy(() => import('./parts/Changelog'));\r\n// //       Component = <Changelog />;\r\n// //       break;\r\n// //     case 'dark-mode-toggler':\r\n// //       const DarkModeTogglerExample = lazy(() => import('./examples/DarkModeTogglerExample'));\r\n// //       Component = <DarkModeTogglerExample />;\r\n// //       break;\r\n// //     case 'icon':\r\n// //       const IconExample = lazy(() => import('./examples/IconExample'));\r\n// //       Component = <IconExample />;\r\n// //       break;\r\n// //     case 'icon-text':\r\n// //       const IconTextExample = lazy(() => import('./examples/IconTextExample'));\r\n// //       Component = <IconTextExample />;\r\n// //       break;\r\n// //     case 'image':\r\n// //       const ImageExample = lazy(() => import('./examples/ImageExample'));\r\n// //       Component = <ImageExample />;\r\n// //       break;\r\n// //     case 'learn-more-link':\r\n// //       const LearnMoreLinkExample = lazy(() => import('./examples/LearnMoreLinkExample'));\r\n// //       Component = <LearnMoreLinkExample />;\r\n// //       break;\r\n// //     case 'count-up-number':\r\n// //       const CountUpNumberExample = lazy(() => import('./examples/CountUpNumberExample'));\r\n// //       Component = <CountUpNumberExample />;\r\n// //       break;\r\n// //     case 'description-with-cta':\r\n// //       const DescriptionCtaExample = lazy(() => import('./examples/DescriptionCtaExample'));\r\n// //       Component = <DescriptionCtaExample />;\r\n// //       break;\r\n// //     case 'icon-alternate':\r\n// //       const IconAlternateExample = lazy(() => import('./examples/IconAlternateExample'));\r\n// //       Component = <IconAlternateExample />;\r\n// //       break;\r\n// //     case 'overlapped-images':\r\n// //       const OverlapedImagesExample = lazy(() => import('./examples/OverlapedImagesExample'));\r\n// //       Component = <OverlapedImagesExample />;\r\n// //       break;\r\n// //     case 'section-header':\r\n// //       const SectionHeaderExample = lazy(() => import('./examples/SectionHeaderExample'));\r\n// //       Component = <SectionHeaderExample />;\r\n// //       break;\r\n// //     case 'image-swiper':\r\n// //       const SwiperImageExample = lazy(() => import('./examples/SwiperImageExample'));\r\n// //       Component = <SwiperImageExample />;\r\n// //       break;\r\n// //     case 'numbers-swiper':\r\n// //       const SwiperNumberExample = lazy(() => import('./examples/SwiperNumberExample'));\r\n// //       Component = <SwiperNumberExample />;\r\n// //       break;\r\n// //     case 'typed-text':\r\n// //       const TypedTextExample = lazy(() => import('./examples/TypedTextExample'));\r\n// //       Component = <TypedTextExample />;\r\n// //       break;\r\n// //     case 'accordion':\r\n// //       const AccordionExample = lazy(() => import('./examples/AccordionExample'));\r\n// //       Component = <AccordionExample />;\r\n// //       break;\r\n// //     case 'card-base':\r\n// //       const CardBaseExample = lazy(() => import('./examples/CardBaseExample'));\r\n// //       Component = <CardBaseExample />;\r\n// //       break;\r\n// //     case 'card-category':\r\n// //       const CardCategoryExample = lazy(() => import('./examples/CardCategoryExample'));\r\n// //       Component = <CardCategoryExample />;\r\n// //       break;\r\n// //     case 'card-category-link':\r\n// //       const CardCategoryLinkExample = lazy(() => import('./examples/CardCategoryLinkExample'));\r\n// //       Component = <CardCategoryLinkExample />;\r\n// //       break;\r\n// //     case 'card-job':\r\n// //       const CardJobExample = lazy(() => import('./examples/CardJobExample'));\r\n// //       Component = <CardJobExample />;\r\n// //       break;\r\n// //     case 'card-job-company':\r\n// //       const CardJobCompanyExample = lazy(() => import('./examples/CardJobCompanyExample'));\r\n// //       Component = <CardJobCompanyExample />;\r\n// //       break;\r\n// //     case 'card-job-minimal':\r\n// //       const CardJobMinimalExample = lazy(() => import('./examples/CardJobMinimalExample'));\r\n// //       Component = <CardJobMinimalExample />;\r\n// //       break;\r\n// //     case 'card-job-tag':\r\n// //       const CardJobTagExample = lazy(() => import('./examples/CardJobTagExample'));\r\n// //       Component = <CardJobTagExample />;\r\n// //       break;\r\n// //     case 'card-pricing-standard':\r\n// //       const CardPricingStandardExample = lazy(() => import('./examples/CardPricingStandardExample'));\r\n// //       Component = <CardPricingStandardExample />;\r\n// //       break;\r\n// //     case 'card-product':\r\n// //       const CardProductExample = lazy(() => import('./examples/CardProductExample'));\r\n// //       Component = <CardProductExample />;\r\n// //       break;\r\n// //     case 'card-promo':\r\n// //       const CardPromoExample = lazy(() => import('./examples/CardPromoExample'));\r\n// //       Component = <CardPromoExample />;\r\n// //       break;\r\n// //     case 'card-review':\r\n// //       const CardReviewExample = lazy(() => import('./examples/CardReviewExample'));\r\n// //       Component = <CardReviewExample />;\r\n// //       break;\r\n// //     case 'description-list-icon':\r\n// //       const DescriptionListIconExample = lazy(() => import('./examples/DescriptionListIconExample'));\r\n// //       Component = <DescriptionListIconExample />;\r\n// //       break;\r\n// //     case 'hero-background':\r\n// //       const HeroBackgroundExample = lazy(() => import('./examples/HeroBackgroundExample'));\r\n// //       Component = <HeroBackgroundExample />;\r\n// //       break;\r\n// //     case 'hero-shaped':\r\n// //       const HeroShapedExample = lazy(() => import('./examples/HeroShapedExample'));\r\n// //       Component = <HeroShapedExample />;\r\n// //       break;\r\n// //     case 'hero-side-image':\r\n// //       const HeroSideImageExample = lazy(() => import('./examples/HeroSideImageExample'));\r\n// //       Component = <HeroSideImageExample />;\r\n// //       break;\r\n// //     case 'hero-simple-background':\r\n// //       const HeroSimpleBackgroundExample = lazy(() => import('./examples/HeroSimpleBackgroundExample'));\r\n// //       Component = <HeroSimpleBackgroundExample />;\r\n// //       break;\r\n// //     case 'map':\r\n// //       const MapExample = lazy(() => import('./examples/MapExample'));\r\n// //       Component = <MapExample />;\r\n// //       break;\r\n// //     case 'parallax':\r\n// //       const ParallaxExample = lazy(() => import('./examples/ParallaxExample'));\r\n// //       Component = <ParallaxExample />;\r\n// //       break;\r\n// //     case 'section':\r\n// //       const SectionExample = lazy(() => import('./examples/SectionExample'));\r\n// //       Component = <SectionExample />;\r\n// //       break;\r\n// //     case 'section-alternate':\r\n// //       const SectionAlternateExample = lazy(() => import('./examples/SectionAlternateExample'));\r\n// //       Component = <SectionAlternateExample />;\r\n// //       break;\r\n// //     default:\r\n// //       Component = null;\r\n// //       break;\r\n// //   }\r\n\r\n// //   return Component;\r\n// };\r\n\r\n// const UpdateProfile = () => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Section className={classes.section}>\r\n//         <Suspense fallback={<Loading />}>\r\n//        <h1>hello Account Info hello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Info</h1>\r\n//         </Suspense>\r\n//       </Section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateProfile;"]},"metadata":{},"sourceType":"module"}