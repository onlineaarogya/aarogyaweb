{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Faq/Faq.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { DescriptionListIcon, CardJobMinimal } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  descriptionListIcon: {\n    marginBottom: theme.spacing(2)\n  },\n  marginTop: {\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\n\nconst Faq = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const tag = {\n    tags: [{\n      title: 'admin',\n      tid: 1\n    }, {\n      title: 'billing',\n      tid: 2\n    }]\n  };\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, tag.tags.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(IconAlternate // fontIconClass={data.account.icon}\n    , {\n      size: \"medium\",\n      color: data.account.color,\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }),\n    title: item.title // subtitle={data.account.subtitle}\n    ,\n    align: \"left\",\n    className: classes.descriptionListIcon,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })))));\n};\n\nFaq.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Faq;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Faq/Faq.js"],"names":["React","PropTypes","makeStyles","Grid","IconAlternate","DescriptionListIcon","CardJobMinimal","useStyles","theme","descriptionListIcon","marginBottom","spacing","marginTop","breakpoints","up","Faq","props","data","className","rest","classes","tag","tags","title","tid","map","item","index","account","color","propTypes","string","object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,sBAApD;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADK,GADgB;AAIrCC,EAAAA,SAAS,EAAE;AACT,KAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,SAAS,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AADiB;AADrB;AAJ0B,CAAL,CAAN,CAA5B;;AAWA,MAAMI,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,GAAG,GAAG;AACVC,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,GAAG,EAAE;AAFP,KADI,EAKJ;AACED,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,GAAG,EAAE;AAFP,KALI;AADI,GAAZ;AAaA,SACE;AAAK,IAAA,SAAS,EAAEN;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,GAAG,CAACC,IAAJ,CAASG,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACZ,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AACE,IAAA,IAAI,EACF,MAAC,aAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEV,IAAI,CAACW,OAAL,CAAaC,KAHtB;AAIE,MAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAEH,IAAI,CAACH,KATd,CAUE;AAVF;AAWE,IAAA,KAAK,EAAC,MAXR;AAYE,IAAA,SAAS,EAAEH,OAAO,CAACX,mBAZrB;AAaE,gBAAS,SAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF;AAoHD,CApID;;AAsIAM,GAAG,CAACe,SAAJ,GAAgB;AACd;AACF;AACA;AACEZ,EAAAA,SAAS,EAAEjB,SAAS,CAAC8B,MAJP;;AAKd;AACF;AACA;AACEd,EAAAA,IAAI,EAAEhB,SAAS,CAAC+B,MAAV,CAAiBC;AART,CAAhB;AAWA,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { DescriptionListIcon, CardJobMinimal } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  descriptionListIcon: {\n    marginBottom: theme.spacing(2),\n  },\n  marginTop: {\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(5),\n    },\n  },\n}));\n\nconst Faq = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  const tag = {\n    tags: [\n      {\n        title: 'admin',\n        tid: 1,\n      },\n      {\n        title: 'billing',\n        tid: 2,\n      },\n    ],\n  };\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={4}>\n        {tag.tags.map((item, index) => (\n          <Grid item xs={12} md={6}>\n            <DescriptionListIcon\n              icon={\n                <IconAlternate\n                  // fontIconClass={data.account.icon}\n                  size=\"medium\"\n                  color={data.account.color}\n                  shape=\"circle\"\n                />\n              }\n              title={item.title}\n              // subtitle={data.account.subtitle}\n              align=\"left\"\n              className={classes.descriptionListIcon}\n              data-aos=\"fade-up\"\n            />\n            {/* <Grid container spacing={2}>\n            {data.account.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid> */}\n          </Grid>\n        ))}\n        {/* <Grid item xs={12} md={6}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.billing.icon}\n                size=\"medium\"\n                color={data.billing.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.billing.title}\n            subtitle={data.billing.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.billing.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.marginTop}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.organizations.icon}\n                size=\"medium\"\n                color={data.organizations.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.organizations.title}\n            subtitle={data.organizations.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.organizations.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.marginTop}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.customizing.icon}\n                size=\"medium\"\n                color={data.customizing.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.customizing.title}\n            subtitle={data.customizing.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.customizing.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n};\n\nFaq.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Faq;\n"]},"metadata":{},"sourceType":"module"}