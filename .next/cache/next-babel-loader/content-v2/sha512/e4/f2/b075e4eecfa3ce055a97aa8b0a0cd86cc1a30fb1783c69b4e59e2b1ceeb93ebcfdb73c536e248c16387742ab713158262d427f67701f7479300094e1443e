{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/views/SignupCover/components/Form/Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField, MenuItem, LinearProgress } from '@material-ui/core';\nimport validate from 'validate.js';\nimport { LearnMoreLink } from 'components/atoms';\nimport Link from 'next/link';\nimport { getPatientRegister } from '../../../../components/helper/PatientApi';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst schema = {\n  mobile: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 300\n    }\n  },\n  firstName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  lastName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  title: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    } // length: {\n    //   minimum: 8,\n    // },\n\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required',\n      email: true\n    },\n    length: {\n      maximum: 120\n    }\n  }\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [subming, setSubiting] = React.useState(false);\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setSubiting(true);\n\n    if (formState.isValid) {\n      // window.location.replace('/');\n      var raw = JSON.stringify({\n        \"title\": formState.values.title,\n        \"first_name\": formState.values.firstName,\n        \"middle_name\": \"\",\n        \"last_name\": formState.values.lastName,\n        \"mobile\": formState.values.mobile,\n        \"email\": formState.values.email\n      });\n      const res = await getPatientRegister(raw);\n      console.log('res', res);\n      setSubiting(false);\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false; // console.log('api Url', process.env.NEXT_PUBLIC_PATIENT_API_URL);\n\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(TextField // placeholder=\"Firs\"\n  , {\n    label: \"Title *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"title\",\n    fullWidth: true,\n    select: true,\n    helperText: hasError('title') ? formState.errors.title[0] : null,\n    error: hasError('title'),\n    onChange: handleChange // type=\"title\"\n    ,\n    value: formState.values.title || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(MenuItem, {\n    value: \"Mr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Mr\"), __jsx(MenuItem, {\n    value: \"Miss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Miss\"))), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"First name\",\n    label: \"First name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"firstName\",\n    fullWidth: true,\n    helperText: hasError('firstName') ? formState.errors.firstName[0] : null,\n    error: hasError('firstName'),\n    onChange: handleChange,\n    type: \"firstName\",\n    value: formState.values.firstName || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Last name\",\n    label: \"Last name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"lastName\",\n    fullWidth: true,\n    helperText: hasError('lastName') ? formState.errors.lastName[0] : null,\n    error: hasError('lastName'),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.lastName || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Mobile\",\n    label: \"Mobile *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"mobile\",\n    fullWidth: true,\n    helperText: hasError('mobile') ? formState.errors.mobile[0] : null,\n    error: hasError('mobile'),\n    onChange: handleChange,\n    type: \"mobile\",\n    value: formState.values.mobile || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Email\",\n    label: \"Email *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    error: hasError('email'),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"Fields that are marked with * sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Submit\"), subming ? __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 24\n    }\n  }) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Already have an account?\", __jsx(Link, {\n    href: `${process.env.NEXT_PUBLIC_BASE_URL}/signin`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Sign in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/views/SignupCover/components/Form/Form.js"],"names":["React","makeStyles","Typography","Grid","Button","TextField","MenuItem","LinearProgress","validate","LearnMoreLink","Link","getPatientRegister","useStyles","theme","root","width","schema","mobile","presence","allowEmpty","message","length","maximum","firstName","lastName","title","email","Form","classes","formState","setFormState","useState","isValid","values","touched","errors","subming","setSubiting","useEffect","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","raw","JSON","stringify","res","console","log","hasError","field","process","env","NEXT_PUBLIC_BASE_URL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  MenuItem,\n  LinearProgress,\n} from '@material-ui/core';\nimport validate from 'validate.js';\nimport { LearnMoreLink } from 'components/atoms';\nimport Link from 'next/link';\nimport { getPatientRegister } from '../../../../components/helper/PatientApi';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst schema = {\n  mobile: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 300,\n    },\n  },\n  firstName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 120,\n    },\n  },\n  lastName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 120,\n    },\n  },\n  title: {\n    presence: { allowEmpty: false, message: 'is required' },\n    // length: {\n    //   minimum: 8,\n    // },\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'is required', email: true },\n    length: {\n      maximum: 120,\n    },\n  },\n};\n\nconst Form = () => {\n  const classes = useStyles();\n\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n\n  const [subming, setSubiting] = React.useState(false);\n\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setSubiting(true);\n    if (formState.isValid) {\n      \n      // window.location.replace('/');\n\n      var raw = JSON.stringify({\"title\":formState.values.title,\"first_name\":formState.values.firstName,\"middle_name\":\"\",\"last_name\":formState.values.lastName,\"mobile\":formState.values.mobile,\"email\":formState.values.email});\n     \n         const res = await getPatientRegister(raw);\n      console.log('res', res);\n      setSubiting(false);\n    }\n\n    setFormState(formState => ({\n      ...formState,\n      touched: {\n        ...formState.touched,\n        ...formState.errors,\n      },\n    }));\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n  // console.log('api Url', process.env.NEXT_PUBLIC_PATIENT_API_URL);\n  return (\n    <div className={classes.root}>\n      <form name=\"password-reset-form\" method=\"post\" onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={2}>\n            <TextField\n              // placeholder=\"Firs\"\n              label=\"Title *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"title\"\n              fullWidth\n              select\n              helperText={hasError('title') ? formState.errors.title[0] : null}\n              error={hasError('title')}\n              onChange={handleChange}\n              // type=\"title\"\n              value={formState.values.title || ''}\n            >\n              <MenuItem value=\"Mr\">Mr</MenuItem>\n              <MenuItem value=\"Miss\">Miss</MenuItem>\n              {/* <MenuItem value=\"2\">Enterprise</MenuItem> */}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={5}>\n            <TextField\n              placeholder=\"First name\"\n              label=\"First name *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"firstName\"\n              fullWidth\n              helperText={\n                hasError('firstName') ? formState.errors.firstName[0] : null\n              }\n              error={hasError('firstName')}\n              onChange={handleChange}\n              type=\"firstName\"\n              value={formState.values.firstName || ''}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              placeholder=\"Last name\"\n              label=\"Last name *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"lastName\"\n              fullWidth\n              helperText={\n                hasError('lastName') ? formState.errors.lastName[0] : null\n              }\n              error={hasError('lastName')}\n              onChange={handleChange}\n              type=\"lastName\"\n              value={formState.values.lastName || ''}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              placeholder=\"Mobile\"\n              label=\"Mobile *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"mobile\"\n              fullWidth\n              helperText={\n                hasError('mobile') ? formState.errors.mobile[0] : null\n              }\n              error={hasError('mobile')}\n              onChange={handleChange}\n              type=\"mobile\"\n              value={formState.values.mobile || ''}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              placeholder=\"Email\"\n              label=\"Email *\"\n              variant=\"outlined\"\n              size=\"medium\"\n              name=\"email\"\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              error={hasError('email')}\n              onChange={handleChange}\n              type=\"email\"\n              value={formState.values.email || ''}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <i>\n              <Typography variant=\"subtitle2\">\n                Fields that are marked with * sign are required.\n              </Typography>\n            </i>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              type=\"submit\"\n              color=\"primary\"\n              fullWidth\n            >\n              Submit\n            </Button>\n            {subming ? <LinearProgress /> : null}\n            \n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              color=\"textSecondary\"\n              align=\"center\"\n            >\n              Already have an account?\n              <Link href={`${process.env.NEXT_PUBLIC_BASE_URL}/signin`}>\n                <LearnMoreLink title=\"Sign in\" />\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}