{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/CareerOpening/components/Application/Application.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Box, LinearProgress } from '@material-ui/core';\nimport { IconText } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: 'transparent',\n    borderRadius: 0\n  },\n  iconText: {\n    fontWeight: 700,\n    marginLeft: theme.spacing(2)\n  },\n  form: {\n    '& .MuiTextField-root': {\n      background: theme.palette.background.paper\n    },\n    '& .MuiOutlinedInput-input': {\n      background: theme.palette.background.paper\n    }\n  },\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  uploadButton: {\n    display: 'flex',\n    justifyContent: 'center',\n    border: '1px solid transparent',\n    background: theme.palette.alternate.dark,\n    textTransform: 'lowercase',\n    '& .icon-text': {\n      width: 'auto'\n    },\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'flex-start'\n    }\n  }\n}));\n\nconst Application = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n\n  const handleSubmit = values => {\n    let data = new FormData();\n    data.append('field_resume_c', values.photo1);\n    return fetch('http://localhost:8888/oaarogya/web/api/post-contact', {\n      method: 'post',\n      // headers: new Headers({\n      //   Accept: 'application/json',\n      // }),\n      body: data\n    }).then(response => response.json()).catch(error => console.log(error));\n  };\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"Apply fo this job\" // subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n    ,\n    subtitleProps: {\n      variant: 'body1',\n      color: 'textPrimary'\n    },\n    \"data-aos\": \"fade-up\",\n    align: isMd ? 'center' : 'left',\n    id: \"apply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      full_name: '',\n      resume: '',\n      email: '',\n      massage: ''\n    },\n    validationSchema: Yup.object().shape({\n      full_name: Yup.string().max(255).required('full_name is required'),\n      resume: Yup.string().max(255).required('resume is required'),\n      email: Yup.string().max(255).required('email is required')\n    }),\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      let data = new FormData();\n      data.append('title', values.full_name);\n      data.append('field_resume_c', values.resume);\n      data.append('fiied_email', values.email);\n      data.append('body', values.massage);\n      return fetch('http://localhost:8888/oaarogya/web/api/post-contact', {\n        method: 'post',\n        // headers: new Headers({\n        //   Accept: 'application/json',\n        // }),\n        body: data\n      }).then(response => response.json()).catch(error => console.log(error)); // console.log(JSON.stringify(values, null, 2));\n      // const res = await getEmployeeAction(\n      //   JSON.stringify(newData, null, 2)\n      // );\n\n      if (res.success) {\n        // setSnackValue(res.message);\n        // setSnackStatus('success');\n        // handleClick();\n        setSubmitting(false); // setTimeout(() => {\n        //   navigate('/app/view-employee', { replace: true });\n        // }, 3000);\n      } else {\n        // console.log(res.message);\n        // setSnackValue(res.message);\n        // setSnackStatus('error');\n        // handleClick();\n        setSubmitting(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    touched,\n    values,\n    resetForm\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.full_name && errors.full_name),\n    fullWidth: true,\n    helperText: touched.full_name && errors.full_name,\n    label: \"Full Name\" // margin=\"normal\"\n    ,\n    name: \"full_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.full_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    component: \"label\",\n    color: \"primary\",\n    fullWidth: true,\n    size: \"large\",\n    className: classes.uploadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, __jsx(IconText, {\n    fontIconClass: \"fas fa-cloud-upload-alt\",\n    color: theme.palette.primary.main,\n    title: \"Upload CV\",\n    typographyProps: {\n      className: classes.iconText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: event => {\n      setFieldValue('resume', event.target.files[0]);\n    },\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.massage && errors.massage),\n    fullWidth: true,\n    helperText: touched.massage && errors.massage,\n    label: \"Massage\",\n    name: \"massage\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.massage,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  })), __jsx(Box, {\n    my: 2,\n    ml: 1.4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Apply Now\"), isSubmitting && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 36\n    }\n  })))))));\n};\n\nApplication.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default Application;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/CareerOpening/components/Application/Application.js"],"names":["React","Component","Formik","Form","Yup","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","Button","Box","LinearProgress","IconText","SectionHeader","useStyles","theme","icon","background","borderRadius","iconText","fontWeight","marginLeft","spacing","form","palette","paper","inputTitle","marginBottom","uploadButton","display","justifyContent","border","alternate","dark","textTransform","width","breakpoints","down","Application","props","className","rest","classes","isMd","up","defaultMatches","handleSubmit","values","data","FormData","append","photo1","fetch","method","body","then","response","json","catch","error","console","log","variant","color","full_name","resume","email","massage","object","shape","string","max","required","setSubmitting","res","success","errors","handleBlur","handleChange","isSubmitting","setFieldValue","touched","resetForm","Boolean","primary","main","event","target","files","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  LinearProgress,\n} from '@material-ui/core';\nimport { IconText } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: 'transparent',\n    borderRadius: 0,\n  },\n  iconText: {\n    fontWeight: 700,\n    marginLeft: theme.spacing(2),\n  },\n  form: {\n    '& .MuiTextField-root': {\n      background: theme.palette.background.paper,\n    },\n    '& .MuiOutlinedInput-input': {\n      background: theme.palette.background.paper,\n    },\n  },\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  uploadButton: {\n    display: 'flex',\n    justifyContent: 'center',\n    border: '1px solid transparent',\n    background: theme.palette.alternate.dark,\n    textTransform: 'lowercase',\n    '& .icon-text': {\n      width: 'auto',\n    },\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'flex-start',\n    },\n  },\n}));\n\nconst Application = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  const handleSubmit = values => {\n    let data = new FormData();\n\n    data.append('field_resume_c', values.photo1);\n    return fetch('http://localhost:8888/oaarogya/web/api/post-contact', {\n      method: 'post',\n      // headers: new Headers({\n      //   Accept: 'application/json',\n      // }),\n      body: data,\n    })\n      .then(response => response.json())\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Apply fo this job\"\n        // subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n        subtitleProps={{\n          variant: 'body1',\n          color: 'textPrimary',\n        }}\n        data-aos=\"fade-up\"\n        align={isMd ? 'center' : 'left'}\n        id=\"apply\"\n      />\n      <div className={classes.form}>\n        <Formik\n          initialValues={{\n            full_name: '',\n            resume: '',\n            email: '',\n            massage: '',\n          }}\n          validationSchema={Yup.object().shape({\n            full_name: Yup.string()\n              .max(255)\n              .required('full_name is required'),\n            resume: Yup.string()\n              .max(255)\n              .required('resume is required'),\n            email: Yup.string()\n              .max(255)\n              .required('email is required'),\n          })}\n          onSubmit={async (values, { setSubmitting }) => {\n            let data = new FormData();\n\n            data.append('title', values.full_name);\n            data.append('field_resume_c', values.resume);\n            data.append('fiied_email', values.email);\n            data.append('body', values.massage);\n            return fetch(\n              'http://localhost:8888/oaarogya/web/api/post-contact',\n              {\n                method: 'post',\n                // headers: new Headers({\n                //   Accept: 'application/json',\n                // }),\n                body: data,\n              },\n            )\n              .then(response => response.json())\n              .catch(error => console.log(error));\n\n            // console.log(JSON.stringify(values, null, 2));\n            // const res = await getEmployeeAction(\n            //   JSON.stringify(newData, null, 2)\n            // );\n            if (res.success) {\n              // setSnackValue(res.message);\n              // setSnackStatus('success');\n              // handleClick();\n              setSubmitting(false);\n              // setTimeout(() => {\n              //   navigate('/app/view-employee', { replace: true });\n              // }, 3000);\n            } else {\n              // console.log(res.message);\n              // setSnackValue(res.message);\n              // setSnackStatus('error');\n              // handleClick();\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            touched,\n            values,\n            resetForm,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={isMd ? 4 : 2}>\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <TextField\n                    error={Boolean(touched.full_name && errors.full_name)}\n                    fullWidth\n                    helperText={touched.full_name && errors.full_name}\n                    label=\"Full Name\"\n                    // margin=\"normal\"\n                    name=\"full_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.full_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12} data-aos=\"fade-up\">\n                  <Button\n                    variant=\"outlined\"\n                    component=\"label\"\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    className={classes.uploadButton}\n                  >\n                    <IconText\n                      fontIconClass=\"fas fa-cloud-upload-alt\"\n                      color={theme.palette.primary.main}\n                      title=\"Upload CV\"\n                      typographyProps={{\n                        className: classes.iconText,\n                      }}\n                    />\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      onChange={event => {\n                        setFieldValue('resume', event.target.files[0]);\n                      }}\n                      style={{ display: 'none' }}\n                    />\n                  </Button>\n                </Grid>\n\n                {/* <Grid item xs={12} data-aos=\"fade-up\">\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.inputTitle}\n                  >\n                    Message\n                  </Typography>\n                  <TextField\n                    placeholder=\"Your question about our services\"\n                    variant=\"outlined\"\n                    name=\"message\"\n                    fullWidth\n                    multiline\n                    // rows={4}\n                    error={Boolean(touched.massage && errors.massage)}\n                    helperText={touched.massage && errors.massage}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.massage}\n                  />\n                </Grid> */}\n\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <TextField\n                    error={Boolean(touched.massage && errors.massage)}\n                    fullWidth\n                    helperText={touched.massage && errors.massage}\n                    label=\"Massage\"\n                    name=\"massage\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.massage}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Box my={2} ml={1.4}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Apply Now\n                  </Button>\n                  {isSubmitting && <LinearProgress />}\n                </Box>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nApplication.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Application;\n"]},"metadata":{},"sourceType":"module"}