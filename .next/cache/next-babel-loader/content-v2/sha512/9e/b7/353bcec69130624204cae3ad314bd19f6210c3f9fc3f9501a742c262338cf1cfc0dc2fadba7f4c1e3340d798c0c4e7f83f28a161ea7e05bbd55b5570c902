{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\organisms\\\\Map\\\\Map.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%'\n  }\n}));\n/**\r\n * Component to display the map\r\n *\r\n * @param {Object} props\r\n */\n\nconst Map = props => {\n  const {\n    zoom,\n    center,\n    pins,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"zoom\", \"center\", \"pins\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    const L = require('leaflet');\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    const markerIcon2x = require('assets/images/leaflet-assets/marker-icon-2x.png');\n\n    const markerIcon = require('assets/images/leaflet-assets/marker-icon.png');\n\n    const markerShadow = require('assets/images/leaflet-assets/marker-shadow.png');\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: typeof markerIcon2x === 'object' ? markerIcon2x.default : markerIcon2x,\n      iconUrl: typeof markerIcon === 'object' ? markerIcon.default : markerIcon,\n      shadowUrl: typeof markerShadow === 'object' ? markerShadow.default : markerShadow\n    });\n  });\n\n  if (true) {\n    return null;\n  }\n\n  const ReactMap = require('react-leaflet').Map;\n\n  const TileLayer = require('react-leaflet').TileLayer;\n\n  const Marker = require('react-leaflet').Marker;\n\n  return __jsx(ReactMap, _extends({\n    zoom: zoom,\n    center: center,\n    className: clsx('map', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), __jsx(TileLayer, {\n    className: \"map__tile-layer\",\n    detectRetina: true,\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), pins && pins.length && pins.map((item, i) => __jsx(Marker, {\n    className: \"map__marker\",\n    position: [item.location.y, item.location.x],\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar maxBounds = [[20.26667, 73.01667] //Southwest\n];\nMap.defaultProps = {\n  zoom: 11,\n  center: [0, 0],\n  maxBounds: maxBounds\n};\nMap.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Map zoom\r\n   */\n  zoom: PropTypes.node,\n\n  /**\r\n   * Map center\r\n   */\n  center: PropTypes.array.isRequired,\n\n  /**\r\n   * data of the locations. Example: [{ location: { x: number, y: number } }]\r\n   */\n  pins: PropTypes.array\n};\nexport default Map;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/organisms/Map/Map.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","root","position","top","left","right","bottom","width","height","Map","props","zoom","center","pins","className","rest","classes","useEffect","L","require","Icon","Default","prototype","_getIconUrl","markerIcon2x","markerIcon","markerShadow","mergeOptions","iconRetinaUrl","default","iconUrl","shadowUrl","ReactMap","TileLayer","Marker","length","map","item","i","location","y","x","maxBounds","defaultProps","propTypes","string","node","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the map\r\n *\r\n * @param {Object} props\r\n */\r\nconst Map = props => {\r\n  const { zoom, center, pins, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const L = require('leaflet');\r\n    delete L.Icon.Default.prototype._getIconUrl;\r\n\r\n    const markerIcon2x = require('assets/images/leaflet-assets/marker-icon-2x.png');\r\n    const markerIcon = require('assets/images/leaflet-assets/marker-icon.png');\r\n    const markerShadow = require('assets/images/leaflet-assets/marker-shadow.png');\r\n\r\n    L.Icon.Default.mergeOptions({\r\n      iconRetinaUrl:\r\n        typeof markerIcon2x === 'object' ? markerIcon2x.default : markerIcon2x,\r\n      iconUrl: typeof markerIcon === 'object' ? markerIcon.default : markerIcon,\r\n      shadowUrl:\r\n        typeof markerShadow === 'object' ? markerShadow.default : markerShadow,\r\n    });\r\n  });\r\n\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const ReactMap = require('react-leaflet').Map;\r\n  const TileLayer = require('react-leaflet').TileLayer;\r\n  const Marker = require('react-leaflet').Marker;\r\n\r\n  return (\r\n    <ReactMap\r\n      zoom={zoom}\r\n      center={center}\r\n      className={clsx('map', classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <TileLayer\r\n        className=\"map__tile-layer\"\r\n        detectRetina={true}\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {pins &&\r\n        pins.length &&\r\n        pins.map((item, i) => (\r\n          <Marker\r\n            className=\"map__marker\"\r\n            position={[item.location.y, item.location.x]}\r\n            key={i}\r\n          />\r\n        ))}\r\n    </ReactMap>\r\n  );\r\n};\r\nvar maxBounds = [\r\n  [20.26667, 73.01667], //Southwest\r\n];\r\n\r\nMap.defaultProps = {\r\n  zoom: 11,\r\n  center: [0, 0],\r\n  maxBounds: maxBounds,\r\n};\r\n\r\nMap.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Map zoom\r\n   */\r\n  zoom: PropTypes.node,\r\n  /**\r\n   * Map center\r\n   */\r\n  center: PropTypes.array.isRequired,\r\n  /**\r\n   * data of the locations. Example: [{ location: { x: number, y: number } }]\r\n   */\r\n  pins: PropTypes.array,\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}