{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Home/components/Account/Account.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nconst useStyles = makeStyles(theme => ({\n  cardBase: {\n    height: 'auto',\n    '& .card-base__content': {\n      padding: 0,\n      height: 'auto'\n    }\n  },\n  linkContainer: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    borderTop: `1px solid ${theme.palette.background.level2}`\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst Account = (_ref) => {\n  let {\n    themeMode = 'light',\n    data,\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"themeMode\", \"data\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"Account Pages\",\n    subtitle: \"These pages are used for basic authentication management.\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: item.href,\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(CardBase, {\n    withShadow: true,\n    liftUp: true,\n    className: classes.cardBase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, __jsx(React.Fragment, null, __jsx(Image, {\n    src: themeMode === 'light' ? item.cover : item.coverDark,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: classes.linkContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, item.title), __jsx(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })))))))));\n};\n\nAccount.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n\n  /**\n   * Current theme mode\n   */\n  themeMode: PropTypes.string\n};\nexport default Account;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Home/components/Account/Account.js"],"names":["React","PropTypes","makeStyles","Grid","Typography","Image","SectionHeader","CardBase","ChevronRightIcon","useStyles","theme","cardBase","height","padding","linkContainer","width","display","justifyContent","alignItems","spacing","borderTop","palette","background","level2","title","fontWeight","Account","themeMode","data","className","rest","classes","map","item","index","href","cover","coverDark","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nconst useStyles = makeStyles(theme => ({\n  cardBase: {\n    height: 'auto',\n    '& .card-base__content': {\n      padding: 0,\n      height: 'auto',\n    },\n  },\n  linkContainer: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    borderTop: `1px solid ${theme.palette.background.level2}`,\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst Account = ({ themeMode = 'light', data, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Account Pages\"\n        subtitle=\"These pages are used for basic authentication management.\"\n        align=\"left\"\n      />\n      <Grid container spacing={4}>\n        {data.map((item, index) => (\n          <Grid item xs={12} sm={6} key={index} data-aos=\"fade-up\">\n            <a href={item.href} title={item.title}>\n              <CardBase withShadow liftUp className={classes.cardBase}>\n                <>\n                <Image\n                  src={themeMode === 'light' ? item.cover : item.coverDark}\n                  alt={item.title}\n                />\n                <div className={classes.linkContainer}>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.title}\n                  >\n                    {item.title}\n                  </Typography>\n                  <ChevronRightIcon />\n                </div>\n                </>\n              </CardBase>\n            </a>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nAccount.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n  /**\n   * Current theme mode\n   */\n  themeMode: PropTypes.string,\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}