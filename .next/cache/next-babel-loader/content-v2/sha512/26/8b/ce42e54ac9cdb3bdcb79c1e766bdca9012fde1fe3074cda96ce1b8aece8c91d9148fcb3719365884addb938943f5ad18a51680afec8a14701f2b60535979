{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/DesktopApp/components/Reviews/Reviews.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    background: 'transparent',\n    width: 60,\n    height: 60\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Reviews = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, __jsx(Avatar, {\n    src: item.logo,\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), __jsx(ListItemText, {\n    primary: item.title,\n    primaryTypographyProps: {\n      variant: 'h5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\\"\", item.feedback, \"\\\"\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(ListItemText, {\n    primary: item.city,\n    secondary: \"TheFront User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nReviews.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Reviews;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/DesktopApp/components/Reviews/Reviews.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","useStyles","theme","avatar","background","width","height","listItemAvatar","marginRight","spacing","Reviews","props","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","map","item","index","logo","title","variant","feedback","city","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n} from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    background: 'transparent',\n    width: 60,\n    height: 60,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Reviews = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        {data.map((item, index) => (\n          <Grid item xs={12} sm={6} key={index} data-aos=\"fade-up\">\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <ListItem disableGutters>\n                  <ListItemAvatar className={classes.listItemAvatar}>\n                    <Avatar src={item.logo} className={classes.avatar} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={item.title}\n                    primaryTypographyProps={{\n                      variant: 'h5',\n                    }}\n                  />\n                </ListItem>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" component=\"p\" color=\"textSecondary\">\n                  \"{item.feedback}\"\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItem disableGutters>\n                  <ListItemText primary={item.city} secondary=\"TheFront User\" />\n                </ListItem>\n              </Grid>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}