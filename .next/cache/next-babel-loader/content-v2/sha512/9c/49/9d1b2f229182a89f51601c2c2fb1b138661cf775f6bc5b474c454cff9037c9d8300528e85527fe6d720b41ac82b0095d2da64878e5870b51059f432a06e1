{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Divider, LinearProgress, MenuItem, FormControlLabel, Checkbox, FormGroup, IconButton, Avatar, Radio } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker, KeyboardDatePicker, DateTimePicker } from '@material-ui/pickers';\nimport Medical from './medical';\nimport FamilyMembers from '../Reusable/FamilyMembers';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%' // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  profileImage: {\n    display: 'flex !important',\n    justifyContent: 'center !important'\n  }\n})); // code for Tabs\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst General = props => {\n  _s();\n\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // code for tabs and\n\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  const {\n    0: imgPreview,\n    1: setImgPreview\n  } = useState('');\n  return (// <div className={className} {...rest}>\n    __jsx(\"div\", {\n      className: \"praveenk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, __jsx(AppBar, {\n      position: \"static\",\n      color: \"\",\n      className: classes.tabHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, __jsx(Tabs, {\n      value: value,\n      onChange: handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"scrollable auto tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, __jsx(Tab, _extends({\n      label: \"Profile\"\n    }, a11yProps(0), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), __jsx(Tab, _extends({\n      label: \"Medial\"\n    }, a11yProps(1), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    })), __jsx(Tab, _extends({\n      label: \"Family Members\"\n    }, a11yProps(2), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })), __jsx(Tab, _extends({\n      label: \"Family Doctor\"\n    }, a11yProps(3), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })))), __jsx(TabPanel, {\n      value: value,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, __jsx(Formik, {\n      initialValues: {\n        title: '',\n        first_name: '',\n        last_name: '',\n        dob: new Date(),\n        age: '',\n        height: '',\n        weight: '',\n        blood_group: '',\n        email: '',\n        state: '',\n        district: '',\n        city: '',\n        pinCode: '',\n        // mobile: editData.mobile,\n        address: '' // password: editData.password\n\n      },\n      validationSchema: Yup.object().shape({\n        title: Yup.string().max(255).required('Title is required'),\n        first_name: Yup.string().max(255).required('Fist Name is required')\n      }),\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        // POST request using fetch inside\n        // var newData = Object.assign(values, {\n        //   id: editData._id,\n        //   action: 'update'\n        // });\n        console.log(JSON.stringify(values, null, 2)); // const res = await getEmployeeAction(\n        //   JSON.stringify(newData, null, 2)\n        // );\n\n        if (res.success) {\n          // setSnackValue(res.message);\n          // setSnackStatus('success');\n          // handleClick();\n          setSubmitting(false); // setTimeout(() => {\n          //   navigate('/app/view-employee', { replace: true });\n          // }, 3000);\n        } else {\n          // console.log(res.message);\n          // setSnackValue(res.message);\n          // setSnackStatus('error');\n          // handleClick();\n          setSubmitting(false);\n        } // console.log(res);\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      touched,\n      values,\n      resetForm\n    }) => __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      className: \"mobileContainer\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: classes.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, __jsx(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"profile_image\",\n      type: \"file\",\n      onChange: event => {\n        setFieldValue('file', event.currentTarget.files[0]);\n        document.getElementById('output').src = window.URL.createObjectURL(event.currentTarget.files[0]);\n        setImgPreview(window.URL.createObjectURL(event.currentTarget.files[0]));\n      },\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"profile_image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, __jsx(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      className: classes.large,\n      id: \"output\",\n      src: imgPreview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 27\n      }\n    }))))), __jsx(Grid, {\n      item: true,\n      md: 2,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      id: \"select\",\n      error: Boolean(touched.title && errors.title),\n      fullWidth: true,\n      helperText: touched.title && errors.title,\n      label: \"Title *\",\n      name: \"title\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.title,\n      variant: \"outlined\",\n      select: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, __jsx(MenuItem, {\n      value: \"Dr.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    }, \"Dr.\"), __jsx(MenuItem, {\n      value: \"Mr.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"Mr.\"))), __jsx(Grid, {\n      item: true,\n      md: 5,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.first_name && errors.first_name),\n      fullWidth: true,\n      helperText: touched.first_name && errors.first_name,\n      label: \"First Name *\" // margin=\"normal\"\n      ,\n      name: \"first_name\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.first_name,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 5,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.last_name && errors.last_name),\n      fullWidth: true,\n      helperText: touched.last_name && errors.last_name,\n      label: \"Last Name *\",\n      name: \"last_name\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.last_name,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }, __jsx(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 34\n        }\n      }),\n      label: \"Male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 23\n      }\n    }), __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 34\n        }\n      }),\n      label: \"Female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 23\n      }\n    }), __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 34\n        }\n      }),\n      label: \"Others\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, __jsx(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, __jsx(KeyboardDatePicker, {\n      disableToolbar: true,\n      error: Boolean(touched.dob && errors.dob),\n      fullWidth: true,\n      helperText: touched.dob && errors.dob,\n      label: \"Date of Birth\",\n      name: \"dob\",\n      format: \"dd/MM/yyyy\",\n      onBlur: handleBlur,\n      onChange: value => setFieldValue('dob', value),\n      value: values.dob,\n      inputVariant: \"outlined\",\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.age && errors.age),\n      fullWidth: true,\n      helperText: touched.age && errors.age,\n      label: \"Age *\",\n      name: \"age\",\n      type: \"number\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.age,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      id: \"blood_group\",\n      error: Boolean(touched.blood_group && errors.blood_group),\n      fullWidth: true,\n      helperText: touched.blood_group && errors.blood_group,\n      label: \"Blood Group *\",\n      name: \"blood_group\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.blood_group,\n      variant: \"outlined\",\n      select: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, __jsx(MenuItem, {\n      value: \"O negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 23\n      }\n    }, \"O negative\"), __jsx(MenuItem, {\n      value: \"O positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 23\n      }\n    }, \"O positive\"), __jsx(MenuItem, {\n      value: \"B negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 23\n      }\n    }, \"B negative\"))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.height && errors.height),\n      fullWidth: true,\n      helperText: touched.height && errors.height,\n      label: \"Height(Ft) *\" // margin=\"normal\"\n      ,\n      name: \"height\",\n      type: \"number\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.height,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.weight && errors.weight),\n      fullWidth: true,\n      helperText: touched.weight && errors.weight,\n      label: \"Weight(Kg) *\" // margin=\"normal\"\n      ,\n      name: \"weight\",\n      type: \"number\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.weight,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 19\n      }\n    }, __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.address && errors.address),\n      fullWidth: true,\n      helperText: touched.address && errors.address,\n      label: \"Address\" // margin=\"normal\"\n      ,\n      name: \"address\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.address,\n      variant: \"outlined\",\n      multiline: true,\n      rows: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      id: \"state\",\n      error: Boolean(touched.state && errors.state),\n      fullWidth: true,\n      helperText: touched.state && errors.state,\n      label: \"State *\",\n      name: \"state\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.state,\n      variant: \"outlined\",\n      select: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, __jsx(MenuItem, {\n      value: \"O negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }, \"O negative\"), __jsx(MenuItem, {\n      value: \"O positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 23\n      }\n    }, \"O positive\"), __jsx(MenuItem, {\n      value: \"B negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, \"B negative\"))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      id: \"district\",\n      error: Boolean(touched.district && errors.district),\n      fullWidth: true,\n      helperText: touched.district && errors.district,\n      label: \"District *\",\n      name: \"district\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.district,\n      variant: \"outlined\",\n      select: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, __jsx(MenuItem, {\n      value: \"O negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 23\n      }\n    }, \"O negative\"), __jsx(MenuItem, {\n      value: \"O positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 23\n      }\n    }, \"O positive\"), __jsx(MenuItem, {\n      value: \"B negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 23\n      }\n    }, \"B negative\"))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      id: \"city\",\n      error: Boolean(touched.city && errors.city),\n      fullWidth: true,\n      helperText: touched.city && errors.city,\n      label: \"City *\",\n      name: \"city\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.city,\n      variant: \"outlined\",\n      select: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, __jsx(MenuItem, {\n      value: \"O negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 23\n      }\n    }, \"O negative\"), __jsx(MenuItem, {\n      value: \"O positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 23\n      }\n    }, \"O positive\"), __jsx(MenuItem, {\n      value: \"B negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 23\n      }\n    }, \"B negative\"))), __jsx(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 19\n      }\n    }, __jsx(TextField, {\n      error: Boolean(touched.pinCode && errors.pinCode),\n      fullWidth: true,\n      helperText: touched.pinCode && errors.pinCode,\n      label: \"pinCode(Kg) *\" // margin=\"normal\"\n      ,\n      name: \"pinCode\",\n      type: \"number\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.pinCode,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    })), __jsx(Box, {\n      my: 2,\n      ml: 1.4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      color: \"primary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 21\n      }\n    }, \"Save Profile\"), isSubmitting && __jsx(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 38\n      }\n    }))))))), __jsx(TabPanel, {\n      value: value,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 7\n      }\n    }, __jsx(Medical, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }\n    })), __jsx(TabPanel, {\n      value: value,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 7\n      }\n    }, __jsx(FamilyMembers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }\n    })), __jsx(TabPanel, {\n      value: value,\n      index: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 7\n      }\n    }, \"Item four\")) // </div>\n\n  );\n};\n\n_s(General, \"tQLlaQVKa5ZicsyOgMAG+a7jRn0=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c2 = General;\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default General;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"General\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js"],"names":["React","useState","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","Button","Divider","LinearProgress","MenuItem","FormControlLabel","Checkbox","FormGroup","IconButton","Avatar","Radio","PropTypes","AppBar","Tabs","Tab","Box","Yup","Formik","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDateTimePicker","KeyboardDatePicker","DateTimePicker","Medical","FamilyMembers","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","root","flexGrow","width","tabHeader","boxShadow","backgroundColor","palette","background","white","large","height","profileImage","display","justifyContent","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","General","className","rest","classes","isMd","breakpoints","up","defaultMatches","setValue","handleChange","event","newValue","imgPreview","setImgPreview","title","first_name","last_name","dob","Date","age","weight","blood_group","email","state","district","city","pinCode","address","object","shape","string","max","required","values","setSubmitting","console","log","JSON","stringify","res","success","errors","handleBlur","handleSubmit","isSubmitting","setFieldValue","touched","resetForm","input","currentTarget","files","document","getElementById","src","window","URL","createObjectURL","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n  LinearProgress,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n  IconButton,\n  Avatar,\n  Radio,\n} from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n  DateTimePicker,\n} from '@material-ui/pickers';\nimport Medical from './medical';\nimport FamilyMembers from '../Reusable/FamilyMembers';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white,\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  profileImage: {\n    display: 'flex !important',\n    justifyContent: 'center !important',\n  },\n}));\n\n// code for Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst General = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  // code for tabs and\n  const [value, setValue] = React.useState(0);\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  const [imgPreview, setImgPreview] = useState('');\n\n  return (\n    // <div className={className} {...rest}>\n    <div className=\"praveenk\">\n      <AppBar position=\"static\" color=\"\" className={classes.tabHeader}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Profile\" {...a11yProps(0)} />\n          <Tab label=\"Medial\" {...a11yProps(1)} />\n          <Tab label=\"Family Members\" {...a11yProps(2)} />\n          <Tab label=\"Family Doctor\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Grid container spacing={isMd ? 4 : 2}>\n          {/* <Grid item xs={12}>\n              <Typography variant=\"h6\" color=\"textPrimary\">\n                Basic Information for Profile\n              </Typography>\n            </Grid>\n            <br></br>\n            <br></br> */}\n          <Formik\n            initialValues={{\n              title: '',\n              first_name: '',\n              last_name: '',\n              dob: new Date(),\n              age: '',\n              height: '',\n              weight: '',\n              blood_group: '',\n              email: '',\n              state: '',\n              district: '',\n              city: '',\n              pinCode: '',\n              // mobile: editData.mobile,\n              address: '',\n              // password: editData.password\n            }}\n            validationSchema={Yup.object().shape({\n              title: Yup.string()\n                .max(255)\n                .required('Title is required'),\n              first_name: Yup.string()\n                .max(255)\n                .required('Fist Name is required'),\n            })}\n            onSubmit={async (values, { setSubmitting }) => {\n              // POST request using fetch inside\n              // var newData = Object.assign(values, {\n              //   id: editData._id,\n              //   action: 'update'\n              // });\n\n              console.log(JSON.stringify(values, null, 2));\n              // const res = await getEmployeeAction(\n              //   JSON.stringify(newData, null, 2)\n              // );\n              if (res.success) {\n                // setSnackValue(res.message);\n                // setSnackStatus('success');\n                // handleClick();\n                setSubmitting(false);\n                // setTimeout(() => {\n                //   navigate('/app/view-employee', { replace: true });\n                // }, 3000);\n              } else {\n                // console.log(res.message);\n                // setSnackValue(res.message);\n                // setSnackStatus('error');\n                // handleClick();\n                setSubmitting(false);\n              }\n              // console.log(res);\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              setFieldValue,\n              touched,\n              values,\n              resetForm,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                {/* our custom form */}\n                <Grid container className=\"mobileContainer\" spacing={3}>\n                  <Grid item md={12} xs={12}>\n                    <div className={classes.profileImage}>\n                      <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"profile_image\"\n                        type=\"file\"\n                        onChange={event => {\n                          setFieldValue('file', event.currentTarget.files[0]);\n                          document.getElementById(\n                            'output',\n                          ).src = window.URL.createObjectURL(\n                            event.currentTarget.files[0],\n                          );\n\n                          setImgPreview(\n                            window.URL.createObjectURL(\n                              event.currentTarget.files[0],\n                            ),\n                          );\n                        }}\n                        hidden\n                      />\n                      <label htmlFor=\"profile_image\">\n                        <IconButton\n                          color=\"primary\"\n                          aria-label=\"upload picture\"\n                          component=\"span\"\n                        >\n                          {/* <PhotoCamera /> */}\n                          <Avatar\n                            className={classes.large}\n                            id=\"output\"\n                            src={imgPreview}\n                          />\n                        </IconButton>\n                      </label>\n                    </div>\n                  </Grid>\n                  <Grid item md={2} xs={12}>\n                    <TextField\n                      id=\"select\"\n                      error={Boolean(touched.title && errors.title)}\n                      fullWidth\n                      helperText={touched.title && errors.title}\n                      label=\"Title *\"\n                      name=\"title\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.title}\n                      variant=\"outlined\"\n                      select\n                    >\n                      <MenuItem value=\"Dr.\">Dr.</MenuItem>\n                      <MenuItem value=\"Mr.\">Mr.</MenuItem>\n                    </TextField>\n                  </Grid>\n                  <Grid item md={5} xs={12}>\n                    <TextField\n                      error={Boolean(touched.first_name && errors.first_name)}\n                      fullWidth\n                      helperText={touched.first_name && errors.first_name}\n                      label=\"First Name *\"\n                      // margin=\"normal\"\n                      name=\"first_name\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.first_name}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={5} xs={12}>\n                    <TextField\n                      error={Boolean(touched.last_name && errors.last_name)}\n                      fullWidth\n                      helperText={touched.last_name && errors.last_name}\n                      label=\"Last Name *\"\n                      name=\"last_name\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.last_name}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                    <FormGroup row>\n                      <FormControlLabel\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Male\"\n                      />\n\n                      <FormControlLabel\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Female\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox color=\"primary\" />}\n                        label=\"Others\"\n                      />\n                    </FormGroup>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        error={Boolean(touched.dob && errors.dob)}\n                        fullWidth\n                        helperText={touched.dob && errors.dob}\n                        label=\"Date of Birth\"\n                        name=\"dob\"\n                        format=\"dd/MM/yyyy\"\n                        onBlur={handleBlur}\n                        onChange={value => setFieldValue('dob', value)}\n                        value={values.dob}\n                        inputVariant=\"outlined\"\n                        KeyboardButtonProps={{\n                          'aria-label': 'change date',\n                        }}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      error={Boolean(touched.age && errors.age)}\n                      fullWidth\n                      helperText={touched.age && errors.age}\n                      label=\"Age *\"\n                      name=\"age\"\n                      type=\"number\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.age}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      id=\"blood_group\"\n                      error={Boolean(touched.blood_group && errors.blood_group)}\n                      fullWidth\n                      helperText={touched.blood_group && errors.blood_group}\n                      label=\"Blood Group *\"\n                      name=\"blood_group\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.blood_group}\n                      variant=\"outlined\"\n                      select\n                    >\n                      <MenuItem value=\"O negative\">O negative</MenuItem>\n                      <MenuItem value=\"O positive\">O positive</MenuItem>\n                      <MenuItem value=\"B negative\">B negative</MenuItem>\n                    </TextField>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      error={Boolean(touched.height && errors.height)}\n                      fullWidth\n                      helperText={touched.height && errors.height}\n                      label=\"Height(Ft) *\"\n                      // margin=\"normal\"\n                      name=\"height\"\n                      type=\"number\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.height}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      error={Boolean(touched.weight && errors.weight)}\n                      fullWidth\n                      helperText={touched.weight && errors.weight}\n                      label=\"Weight(Kg) *\"\n                      // margin=\"normal\"\n                      name=\"weight\"\n                      type=\"number\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.weight}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n\n                  <Grid item md={12} xs={12}>\n                    <TextField\n                      error={Boolean(touched.address && errors.address)}\n                      fullWidth\n                      helperText={touched.address && errors.address}\n                      label=\"Address\"\n                      // margin=\"normal\"\n                      name=\"address\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.address}\n                      variant=\"outlined\"\n                      multiline\n                      rows={4}\n                    />\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      id=\"state\"\n                      error={Boolean(touched.state && errors.state)}\n                      fullWidth\n                      helperText={touched.state && errors.state}\n                      label=\"State *\"\n                      name=\"state\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.state}\n                      variant=\"outlined\"\n                      select\n                    >\n                      <MenuItem value=\"O negative\">O negative</MenuItem>\n                      <MenuItem value=\"O positive\">O positive</MenuItem>\n                      <MenuItem value=\"B negative\">B negative</MenuItem>\n                    </TextField>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      id=\"district\"\n                      error={Boolean(touched.district && errors.district)}\n                      fullWidth\n                      helperText={touched.district && errors.district}\n                      label=\"District *\"\n                      name=\"district\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.district}\n                      variant=\"outlined\"\n                      select\n                    >\n                      <MenuItem value=\"O negative\">O negative</MenuItem>\n                      <MenuItem value=\"O positive\">O positive</MenuItem>\n                      <MenuItem value=\"B negative\">B negative</MenuItem>\n                    </TextField>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      id=\"city\"\n                      error={Boolean(touched.city && errors.city)}\n                      fullWidth\n                      helperText={touched.city && errors.city}\n                      label=\"City *\"\n                      name=\"city\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.city}\n                      variant=\"outlined\"\n                      select\n                    >\n                      <MenuItem value=\"O negative\">O negative</MenuItem>\n                      <MenuItem value=\"O positive\">O positive</MenuItem>\n                      <MenuItem value=\"B negative\">B negative</MenuItem>\n                    </TextField>\n                  </Grid>\n\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      error={Boolean(touched.pinCode && errors.pinCode)}\n                      fullWidth\n                      helperText={touched.pinCode && errors.pinCode}\n                      label=\"pinCode(Kg) *\"\n                      // margin=\"normal\"\n                      name=\"pinCode\"\n                      type=\"number\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.pinCode}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n\n                  <Box my={2} ml={1.4}>\n                    <Button\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Save Profile\n                    </Button>\n                    {isSubmitting && <LinearProgress />}\n                  </Box>\n                </Grid>\n                {/* Custom form end */}\n              </form>\n            )}\n          </Formik>\n        </Grid>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Medical />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <FamilyMembers />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item four\n      </TabPanel>\n    </div>\n    // </div>\n  );\n};\n\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default General;\n"]},"metadata":{},"sourceType":"module"}