{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\atoms\\\\IconText\\\\IconText.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n    width: '100%'\n  },\n  title: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n/**\r\n * Component to display the icon text\r\n *\r\n * @param {Object} props\r\n */\n\nconst IconText = props => {\n  const {\n    title,\n    color,\n    fontIconClass,\n    className,\n    iconProps,\n    typographyProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"title\", \"color\", \"fontIconClass\", \"className\", \"iconProps\", \"typographyProps\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx('icon-text', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, _extends({\n    className: \"icon-text__icon\",\n    size: \"small\",\n    fontIconClass: fontIconClass,\n    fontIconColor: color\n  }, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })), __jsx(Typography, _extends({\n    noWrap: true,\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: clsx('icon-text__typography', classes.title)\n  }, typographyProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), title));\n};\n\nIconText.defaultProps = {\n  iconProps: {},\n  typographyProps: {}\n};\nIconText.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The classes of the font icon\r\n   */\n  fontIconClass: PropTypes.string.isRequired,\n\n  /**\r\n   * Source set for the responsive images\r\n   */\n  color: PropTypes.string,\n\n  /**\r\n   * Title of the icon-text\r\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\r\n   * Additional properties to pass to the Icon component\r\n   */\n  iconProps: PropTypes.object,\n\n  /**\r\n   * Additional properties to pass to the Typography component\r\n   */\n  typographyProps: PropTypes.object\n};\nexport default IconText;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/atoms/IconText/IconText.js"],"names":["React","clsx","PropTypes","makeStyles","Typography","Icon","useStyles","theme","root","display","flexWrap","alignItems","width","title","marginLeft","spacing","IconText","props","color","fontIconClass","className","iconProps","typographyProps","rest","classes","defaultProps","propTypes","string","isRequired","object"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,aADL;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,KAAK,EAAE;AAJH,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADP;AAP8B,CAAL,CAAN,CAA5B;AAYA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AACJJ,IAAAA,KADI;AAEJK,IAAAA,KAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MAQFL,KARJ;AAAA,QAOKM,IAPL,4BAQIN,KARJ;;AAUA,QAAMO,OAAO,GAAGlB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEL,IAAI,CAAC,WAAD,EAAcuB,OAAO,CAAChB,IAAtB,EAA4BY,SAA5B;AAApB,KAAgEG,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,aAAa,EAAEJ,aAHjB;AAIE,IAAA,aAAa,EAAED;AAJjB,KAKMG,SALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQE,MAAC,UAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,SAAS,EAAEpB,IAAI,CAAC,uBAAD,EAA0BuB,OAAO,CAACX,KAAlC;AAJjB,KAKMS,eALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGT,KAPH,CARF,CADF;AAoBD,CAjCD;;AAmCAG,QAAQ,CAACS,YAAT,GAAwB;AACtBJ,EAAAA,SAAS,EAAE,EADW;AAEtBC,EAAAA,eAAe,EAAE;AAFK,CAAxB;AAKAN,QAAQ,CAACU,SAAT,GAAqB;AACnB;AACF;AACA;AACEN,EAAAA,SAAS,EAAElB,SAAS,CAACyB,MAJF;;AAKnB;AACF;AACA;AACER,EAAAA,aAAa,EAAEjB,SAAS,CAACyB,MAAV,CAAiBC,UARb;;AASnB;AACF;AACA;AACEV,EAAAA,KAAK,EAAEhB,SAAS,CAACyB,MAZE;;AAanB;AACF;AACA;AACEd,EAAAA,KAAK,EAAEX,SAAS,CAACyB,MAAV,CAAiBC,UAhBL;;AAiBnB;AACF;AACA;AACEP,EAAAA,SAAS,EAAEnB,SAAS,CAAC2B,MApBF;;AAqBnB;AACF;AACA;AACEP,EAAAA,eAAe,EAAEpB,SAAS,CAAC2B;AAxBR,CAArB;AA2BA,eAAeb,QAAf","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Icon } from 'components/atoms';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    flexWrap: 'nowrap',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the icon text\r\n *\r\n * @param {Object} props\r\n */\r\nconst IconText = props => {\r\n  const {\r\n    title,\r\n    color,\r\n    fontIconClass,\r\n    className,\r\n    iconProps,\r\n    typographyProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx('icon-text', classes.root, className)} {...rest}>\r\n      <Icon\r\n        className=\"icon-text__icon\"\r\n        size=\"small\"\r\n        fontIconClass={fontIconClass}\r\n        fontIconColor={color}\r\n        {...iconProps}\r\n      />\r\n      <Typography\r\n        noWrap\r\n        variant=\"subtitle1\"\r\n        color=\"textPrimary\"\r\n        className={clsx('icon-text__typography', classes.title)}\r\n        {...typographyProps}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nIconText.defaultProps = {\r\n  iconProps: {},\r\n  typographyProps: {},\r\n};\r\n\r\nIconText.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The classes of the font icon\r\n   */\r\n  fontIconClass: PropTypes.string.isRequired,\r\n  /**\r\n   * Source set for the responsive images\r\n   */\r\n  color: PropTypes.string,\r\n  /**\r\n   * Title of the icon-text\r\n   */\r\n  title: PropTypes.string.isRequired,\r\n  /**\r\n   * Additional properties to pass to the Icon component\r\n   */\r\n  iconProps: PropTypes.object,\r\n  /**\r\n   * Additional properties to pass to the Typography component\r\n   */\r\n  typographyProps: PropTypes.object,\r\n};\r\n\r\nexport default IconText;\r\n"]},"metadata":{},"sourceType":"module"}