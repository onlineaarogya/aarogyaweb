{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/components/helper/AlertMessage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Alert } from '@material-ui/lab';\nimport PropTypes from 'prop-types';\nexport default function AlertMessage({\n  message,\n  status\n}) {\n  const [open, setOpen] = React.useState(true);\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, message)));\n}\nAlertMessage.propTypes = {\n  message: PropTypes.number.isRequired,\n  // snackbar status type or validation\n  status: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/components/helper/AlertMessage.js"],"names":["React","Snackbar","Alert","PropTypes","AlertMessage","message","status","open","setOpen","useState","handleClose","event","reason","vertical","horizontal","propTypes","number","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAtB,EAA2C;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAAxB;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,gBAAgB,EAAE,IAFpB;AAGE,IAAA,OAAO,EAAEG,WAHX;AAIE,IAAA,YAAY,EAAE;AAAEG,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,WAAhB;AAA6B,IAAA,QAAQ,EAAEJ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CANF,CADF,CADF;AAcD;AAEDD,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,OAAO,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADH;AAEvB;AACAX,EAAAA,MAAM,EAAEH,SAAS,CAACe,MAAV,CAAiBD;AAHF,CAAzB","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Alert } from '@material-ui/lab';\nimport PropTypes from 'prop-types';\n\nexport default function AlertMessage({ message, status }) {\n  const [open, setOpen] = React.useState(true);\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert onClose={handleClose} severity={status}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nAlertMessage.propTypes = {\n  message: PropTypes.number.isRequired,\n  // snackbar status type or validation\n  status: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}