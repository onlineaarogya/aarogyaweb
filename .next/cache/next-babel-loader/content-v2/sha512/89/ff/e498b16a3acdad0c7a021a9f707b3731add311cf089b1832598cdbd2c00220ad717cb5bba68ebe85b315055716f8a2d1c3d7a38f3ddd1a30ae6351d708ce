{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { colors, useMediaQuery, FormControl, OutlinedInput, InputAdornment, Button, Avatar, Typography, Grid, Divider } from '@material-ui/core';\nimport { Icon, Image } from 'components/atoms';\nimport { CardProduct, Section, SectionAlternate } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  pagePaddingTop: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(5),\n      paddingBottom: theme.spacing(5)\n    }\n  },\n  sectionAlternate: {\n    '& .section-alternate__content': {\n      padding: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      [theme.breakpoints.up('md')]: {\n        paddingTop: theme.spacing(5),\n        paddingBottom: theme.spacing(5)\n      }\n    }\n  },\n  searchInputContainer: {\n    background: theme.palette.alternate.main,\n    padding: theme.spacing(2),\n    boxShadow: '0 4px 14px 0 rgba(0, 0, 0, 0.11)',\n    borderRadius: theme.spacing(1),\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    '& .MuiOutlinedInput-notchedOutline': {\n      border: '0 !important'\n    },\n    '& .MuiInputAdornment-positionStart': {\n      marginRight: theme.spacing(2)\n    },\n    '& .MuiOutlinedInput-adornedStart': {\n      paddingLeft: 0\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: 0\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(1)\n    }\n  },\n  searchButton: {\n    maxHeight: 45,\n    minWidth: 135,\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 'auto'\n    }\n  },\n  cardProduct: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    borderRadius: theme.spacing(1),\n    '& .card-product__content': {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  image: {\n    objectFit: 'cover',\n    borderRadius: theme.spacing(0, 0, 20, 0)\n  },\n  blogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  list: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  avatarContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  button: {\n    minWidth: '100%',\n    maxWidth: '100%',\n    [theme.breakpoints.up('sm')]: {\n      minWidth: 420\n    }\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 300\n  }\n}));\n\nconst Result = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n\n  const BlogMediaContent = props => __jsx(Image, _extends({}, props, {\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    }\n  }));\n\n  const BlogContent = props => __jsx(\"div\", {\n    className: classes.blogContent\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    gutterBottom: true\n  }, props.title), __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\"\n  }, props.subtitle), __jsx(\"div\", {\n    style: {\n      flexGrow: 1\n    }\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(\"div\", {\n    className: classes.list\n  }, __jsx(\"div\", {\n    className: classes.avatarContainer\n  }, __jsx(Avatar, _extends({}, props.author.photo, {\n    className: classes.avatar\n  })), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\"\n  }, props.author.name)), __jsx(Typography, {\n    variant: \"overline\",\n    color: \"textSecondary\"\n  }, props.date)));\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Section, {\n    className: classes.pagePaddingTop\n  }, __jsx(\"div\", {\n    className: classes.searchInputContainer,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\"\n  }, __jsx(OutlinedInput, {\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\"\n    }, __jsx(Icon, {\n      fontIconClass: \"fas fa-search\",\n      fontIconColor: colors.blueGrey[900]\n    })),\n    placeholder: \"Search for the blog\"\n  })), __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"large\",\n    className: classes.searchButton\n  }, \"Search\"))), __jsx(SectionAlternate, {\n    className: classes.sectionAlternate\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    className: classes.answerCount\n  }, \"85 Result Found\")), data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    key: index,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(CardProduct, {\n    withShadow: true,\n    liftUp: true,\n    className: classes.cardProduct,\n    mediaContent: __jsx(BlogMediaContent, _extends({}, item.cover, {\n      alt: item.title\n    })),\n    cardContent: __jsx(BlogContent, {\n      title: item.title,\n      subtitle: item.subtitle,\n      author: item.author,\n      date: item.date\n    })\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button\n  }, \"Load more\")))));\n};\n\nexport default Result;","map":null,"metadata":{},"sourceType":"module"}