{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Ecommerce/components/LatestProducts/LatestProducts.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    borderRadius: theme.spacing(2)\n  },\n  cardMedia: {\n    height: 290,\n    padding: theme.spacing(3, 3, 0, 3),\n    position: 'relative'\n  },\n  cardContent: {\n    padding: theme.spacing(3)\n  },\n  image: {\n    objectFit: 'contain'\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  priceCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: theme.spacing(1, 0)\n  },\n  gridItem: {\n    '& .latest-products__card-media': {\n      background: theme.palette.secondary.main\n    },\n    '&:nth-child(2n)': {\n      '& .latest-products__card-media': {\n        background: theme.palette.primary.main\n      }\n    }\n  }\n}));\n\nconst LatestProducts = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"The latest products\",\n    subtitle: \"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\",\n    subtitleColor: \"textPrimary\",\n    subtitleVariant: \"body1\",\n    \"data-aos\": \"fade-up\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    className: clsx(classes.card, 'latest-products__card'),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    className: clsx(classes.cardMedia, 'latest-products__card-media'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(Image, _extends({}, item.image, {\n    alt: item.title,\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }))), __jsx(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    color: \"textPrimary\",\n    variant: \"subtitle1\",\n    className: classes.fontWeightBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, item.title), __jsx(\"div\", {\n    className: classes.priceCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    color: \"primary\",\n    variant: \"h6\",\n    className: classes.fontWeightBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, item.price)), __jsx(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Add to card\")))))));\n};\n\nLatestProducts.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default LatestProducts;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Ecommerce/components/LatestProducts/LatestProducts.js"],"names":["React","PropTypes","clsx","makeStyles","Grid","Button","Card","CardMedia","CardContent","Typography","Image","SectionHeader","useStyles","theme","card","borderRadius","spacing","cardMedia","height","padding","position","cardContent","image","objectFit","fontWeightBold","fontWeight","priceCta","display","justifyContent","alignItems","margin","gridItem","background","palette","secondary","main","primary","LatestProducts","props","data","className","rest","classes","map","item","index","title","width","price","flexGrow","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Button,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n} from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    borderRadius: theme.spacing(2),\n  },\n  cardMedia: {\n    height: 290,\n    padding: theme.spacing(3, 3, 0, 3),\n    position: 'relative',\n  },\n  cardContent: {\n    padding: theme.spacing(3),\n  },\n  image: {\n    objectFit: 'contain',\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  priceCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: theme.spacing(1, 0),\n  },\n  gridItem: {\n    '& .latest-products__card-media': {\n      background: theme.palette.secondary.main,\n    },\n    '&:nth-child(2n)': {\n      '& .latest-products__card-media': {\n        background: theme.palette.primary.main,\n      },\n    },\n  },\n}));\n\nconst LatestProducts = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"The latest products\"\n        subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n        subtitleColor=\"textPrimary\"\n        subtitleVariant=\"body1\"\n        data-aos=\"fade-up\"\n        align=\"left\"\n      />\n      <Grid container spacing={2}>\n        {data.map((item, index) => (\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            md={3}\n            key={index}\n            data-aos=\"fade-up\"\n            className={classes.gridItem}\n          >\n            <Card\n              className={clsx(classes.card, 'latest-products__card')}\n              variant=\"outlined\"\n            >\n              <CardMedia\n                className={clsx(\n                  classes.cardMedia,\n                  'latest-products__card-media',\n                )}\n              >\n                <Image\n                  {...item.image}\n                  alt={item.title}\n                  className={classes.image}\n                  lazyProps={{\n                    width: '100%',\n                    height: '100%',\n                  }}\n                />\n              </CardMedia>\n              <CardContent className={classes.cardContent}>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle1\"\n                  className={classes.fontWeightBold}\n                >\n                  {item.title}\n                </Typography>\n                <div className={classes.priceCta}>\n                  <Typography\n                    color=\"primary\"\n                    variant=\"h6\"\n                    className={classes.fontWeightBold}\n                  >\n                    {item.price}\n                  </Typography>\n                </div>\n                <div style={{ flexGrow: 1 }} />\n                <Button variant=\"contained\" color=\"primary\">\n                  Add to card\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nLatestProducts.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default LatestProducts;\n"]},"metadata":{},"sourceType":"module"}