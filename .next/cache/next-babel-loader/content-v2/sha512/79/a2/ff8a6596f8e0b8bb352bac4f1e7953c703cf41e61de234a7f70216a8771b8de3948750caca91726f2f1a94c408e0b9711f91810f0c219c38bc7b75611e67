{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/CareerListingMinimal/components/About/About.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Button } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(() => ({\n  image: {\n    maxWidth: 560\n  }\n}));\n\nconst About = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: isMd ? 4 : 2,\n    direction: isMd ? 'row' : 'column-reverse',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    justify: \"flex-start\",\n    xs: 12,\n    md: 6,\n    \"data-aos\": 'fade-up',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(SectionHeader, {\n    title: \"Careers with ACPL\",\n    subtitle: \"We believes in building Team with diversity through fundamentals of providing employment opportunities to qualified applicants irrespective of race, color, gender, marital status or affectional.\\nIf you have desire to learn, go-getter attitude and a passion for making a difference, come and be a part of our team. \\nOur recruitment process has been designed to be as unbiased and straightforward and to help you get the most out of it.\",\n    align: \"left\",\n    disableGutter: true,\n    subtitleProps: {\n      color: 'textPrimary',\n      variant: 'body1'\n    },\n    ctaGroup: [__jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, \"How should you apply?\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }), \"A few things to keep in mind before you apply: Ensure you meet all of the minimum qualifications for the desired position. For the selected position of interest, click on the \\\"Apply Online\\\" button. Complete the application process. Verify the details you have entered and click on submit button. What happens after you apply? You will receive an automated email confirming your submission; Applicants who are selected and have best met all of the requirements of a position may receive a pre-screening phone interview After your pre-screening phone call with a recruiter, you may be contacted for a follow-up, in-person or second phone interview or interview through online video call. In case you are selected for the position, an offer letter will be given to you indicating date of joining, position, compensation packages, benefits, employment terms and conditions etc.\") // <Button color=\"primary\" variant=\"contained\" size=\"large\">\n    //   View open positions\n    // </Button>,\n    ],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: isMd ? 'flex-end' : 'flex-start',\n    alignItems: \"center\",\n    xs: 12,\n    md: 6,\n    \"data-aos\": 'fade-up',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    src: process.env.NEXT_PUBLIC_BASE_URL + '/assets/join our team-01.png',\n    alt: \"Our story\",\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }))));\n};\n\nAbout.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default About;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/CareerListingMinimal/components/About/About.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Button","Image","SectionHeader","useStyles","image","maxWidth","About","props","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","color","variant","process","env","NEXT_PUBLIC_BASE_URL","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Button } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    maxWidth: 560,\n  },\n}));\n\nconst About = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid\n        container\n        justify=\"space-between\"\n        spacing={isMd ? 4 : 2}\n        direction={isMd ? 'row' : 'column-reverse'}\n      >\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          justify=\"flex-start\"\n          xs={12}\n          md={6}\n          data-aos={'fade-up'}\n        >\n          <div>\n            <SectionHeader\n              title=\"Careers with ACPL\"\n              subtitle=\"We believes in building Team with diversity through fundamentals of providing employment opportunities to qualified applicants irrespective of race, color, gender, marital status or affectional.\nIf you have desire to learn, go-getter attitude and a passion for making a difference, come and be a part of our team. \nOur recruitment process has been designed to be as unbiased and straightforward and to help you get the most out of it.\"\n              align=\"left\"\n              disableGutter\n              subtitleProps={{\n                color: 'textPrimary',\n                variant: 'body1',\n              }}\n              ctaGroup={[\n                <p>\n                  <strong>How should you apply?</strong>\n                  <br></br>A few things to keep in mind before you apply: Ensure\n                  you meet all of the minimum qualifications for the desired\n                  position. For the selected position of interest, click on the\n                  \"Apply Online\" button. Complete the application process.\n                  Verify the details you have entered and click on submit\n                  button. What happens after you apply? You will receive an\n                  automated email confirming your submission; Applicants who are\n                  selected and have best met all of the requirements of a\n                  position may receive a pre-screening phone interview After\n                  your pre-screening phone call with a recruiter, you may be\n                  contacted for a follow-up, in-person or second phone interview\n                  or interview through online video call. In case you are\n                  selected for the position, an offer letter will be given to\n                  you indicating date of joining, position, compensation\n                  packages, benefits, employment terms and conditions etc.\n                </p>,\n                // <Button color=\"primary\" variant=\"contained\" size=\"large\">\n                //   View open positions\n                // </Button>,\n              ]}\n            />\n          </div>\n        </Grid>\n        <Grid\n          item\n          container\n          justify={isMd ? 'flex-end' : 'flex-start'}\n          alignItems=\"center\"\n          xs={12}\n          md={6}\n          data-aos={'fade-up'}\n        >\n          <Image\n            src={\n              process.env.NEXT_PUBLIC_BASE_URL + '/assets/join our team-01.png'\n            }\n            alt=\"Our story\"\n            className={classes.image}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}