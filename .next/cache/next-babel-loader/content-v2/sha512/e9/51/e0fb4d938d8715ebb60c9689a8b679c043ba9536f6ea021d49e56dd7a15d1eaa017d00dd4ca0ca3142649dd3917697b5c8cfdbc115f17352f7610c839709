{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/components/helper/AlertMassage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nexport default function AlertMassage({\n  message\n}) {\n  const [open, setOpen] = React.useState(true);\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    variant: \"warning\",\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: message,\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n} // customSnackbar.propTypes = {\n//   snackValue: PropTypes.string.isRequired,\n//   // snackbar status type or validation\n//   snackStatus: PropTypes.string.isRequired,\n// };","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/components/helper/AlertMassage.js"],"names":["React","Snackbar","IconButton","CloseIcon","AlertMassage","message","open","setOpen","useState","handleClose","event","reason","vertical","horizontal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAxB;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZK,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAEP,IALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,WAPX;AAQE,IAAA,OAAO,EAAC,SARV;AASE,IAAA,YAAY,EAAE;AACZ,0BAAoB;AADR,KAThB;AAYE,IAAA,OAAO,EAAEJ,OAZX;AAaE,IAAA,MAAM,EAAE,CACN,MAAC,UAAD;AAAY,MAAA,GAAG,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAEI,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADM,CAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAuBD,C,CAED;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function AlertMassage({ message }) {\n  const [open, setOpen] = React.useState(true);\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={2000}\n        onClose={handleClose}\n        variant=\"warning\"\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={message}\n        action={[\n          <IconButton key=\"close\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n\n// customSnackbar.propTypes = {\n//   snackValue: PropTypes.string.isRequired,\n//   // snackbar status type or validation\n//   snackStatus: PropTypes.string.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}