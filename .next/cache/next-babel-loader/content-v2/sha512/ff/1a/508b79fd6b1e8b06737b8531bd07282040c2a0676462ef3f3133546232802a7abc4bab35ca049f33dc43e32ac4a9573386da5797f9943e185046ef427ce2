{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/views/CareerOpening/components/Application/Application.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Box, LinearProgress } from '@material-ui/core';\nimport { IconText } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport AlertMassage from '../../../../components/helper/AlertMessage';\nimport MetaTitle from 'components/helper/MetaTitle';\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: 'transparent',\n    borderRadius: 0\n  },\n  iconText: {\n    fontWeight: 700,\n    marginLeft: theme.spacing(2)\n  },\n  form: {\n    '& .MuiTextField-root': {\n      background: theme.palette.background.paper\n    },\n    '& .MuiOutlinedInput-input': {\n      background: theme.palette.background.paper\n    }\n  },\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  uploadButton: {\n    display: 'flex',\n    justifyContent: 'center',\n    border: '1px solid transparent',\n    background: theme.palette.alternate.dark,\n    textTransform: 'lowercase',\n    '& .icon-text': {\n      width: 'auto'\n    },\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'flex-start'\n    }\n  }\n}));\n\nconst Application = props => {\n  _s();\n\n  const {\n    api_data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"api_data\", \"className\"]); // console.log('api', api_data);\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const [status, setStatusBase] = React.useState('');\n  const [fileName, setFileName] = React.useState('');\n  console.log(status);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), __jsx(MetaTitle, {\n    title: `${api_data.title} | OnlineAarogya}`,\n    metaKeyWord: \"Jobs, OnlineAarogya\",\n    metaDescription: \"ACPL is a start-up in the field of medical healthcare including tele-medicine. The software platform will enable patients to search doctors for various specialties, check their profile, book appointment, and take consultation. The company is going to start the pilot launch by end of Aug 2021 and a full-scale launch of services by end of Oct 2021. The company\\u2019s mission is to create medical healthcare eco-system accessible, easier and better in terms of quality especially serving to the rural and non-metro geographies, which constitutes more than 75% of the population.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(SectionHeader, {\n    title: \"Apply fo this job\" // subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n    ,\n    subtitleProps: {\n      variant: 'body1',\n      color: 'textPrimary'\n    },\n    \"data-aos\": \"fade-up\",\n    align: isMd ? 'center' : 'left',\n    id: \"apply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, status ? __jsx(AlertMassage, {\n    key: status.key,\n    message: status.msg,\n    status: status.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }) : null, __jsx(Formik, {\n    initialValues: {\n      full_name: '',\n      resume: '',\n      email: '',\n      massage: '',\n      nid: api_data.nid,\n      jobName: api_data.field_job_position\n    },\n    validationSchema: Yup.object().shape({\n      full_name: Yup.string().max(255).required('full_name is required'),\n      resume: Yup.string().max(255).required('resume is required'),\n      email: Yup.string().max(255).required('email is required')\n    }),\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      let data = new FormData();\n      data.append('title', values.full_name);\n      data.append('field_resume_c', values.resume);\n      data.append('field_email', values.email);\n      data.append('body', values.massage);\n      data.append('field_applied_for_', values.nid); // console.log('dsds',values.resume);\n\n      return fetch(`${process.env.NEXT_PUBLIC_DB_HOST}/api/post-contact`, {\n        method: 'post',\n        // mode: 'no-cors',\n        // headers: new Headers({\n        //   Accept: 'application/json',\n        // }),\n        body: data\n      }).then(response => response.json()).then(result => {\n        // console.log('Success:', result);\n        // console.log(result);\n        setStatusBase({\n          key: 22,\n          status: 'success',\n          msg: 'Your application for the' + values.jobName + 'job has been successfully submitted.'\n        });\n        setSubmitting(false);\n        resetForm(values);\n      }).catch(error => {\n        setStatusBase({\n          key: 22,\n          status: 'error',\n          msg: error\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    touched,\n    values,\n    resetForm\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Full name\"), __jsx(TextField, {\n    error: Boolean(touched.full_name && errors.full_name),\n    fullWidth: true,\n    helperText: touched.full_name && errors.full_name,\n    label: \"Enter your full name\" // margin=\"normal\"\n    ,\n    name: \"full_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.full_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \"E-mail\"), __jsx(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Enter your email address\",\n    name: \"email\",\n    type: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    component: \"label\",\n    color: \"primary\",\n    fullWidth: true,\n    size: \"large\",\n    className: classes.uploadButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, __jsx(IconText, {\n    fontIconClass: \"fas fa-cloud-upload-alt\",\n    color: theme.palette.primary.main,\n    title: \"Upload CV\",\n    typographyProps: {\n      className: classes.iconText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: event => {\n      setFieldValue('resume', event.target.files[0]); // setFileName()\n\n      console.log('ff', event.target.files[0]);\n    },\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \"Message\"), __jsx(TextField, {\n    error: Boolean(touched.massage && errors.massage),\n    fullWidth: true,\n    helperText: touched.massage && errors.massage,\n    label: \"Massage...\",\n    name: \"massage\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.massage,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  })), __jsx(Box, {\n    my: 2,\n    ml: 1.4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\" // onClick={e => resetForm()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, \"Apply Now\"), isSubmitting && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 36\n    }\n  })))))));\n};\n\n_s(Application, \"WxmCHASWObFlkUIgr/0jk12AsWA=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Application;\nApplication.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/views/CareerOpening/components/Application/Application.js"],"names":["React","Component","Formik","Form","Yup","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","Button","Box","LinearProgress","IconText","SectionHeader","AlertMassage","MetaTitle","useStyles","theme","icon","background","borderRadius","iconText","fontWeight","marginLeft","spacing","form","palette","paper","inputTitle","marginBottom","uploadButton","display","justifyContent","border","alternate","dark","textTransform","width","breakpoints","down","Application","props","api_data","className","rest","classes","isMd","up","defaultMatches","status","setStatusBase","useState","fileName","setFileName","console","log","title","variant","color","key","msg","full_name","resume","email","massage","nid","jobName","field_job_position","object","shape","string","max","required","values","resetForm","setSubmitting","data","FormData","append","fetch","process","env","NEXT_PUBLIC_DB_HOST","method","body","then","response","json","result","catch","error","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Boolean","primary","main","event","target","files","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  LinearProgress,\n} from '@material-ui/core';\nimport { IconText } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport AlertMassage from '../../../../components/helper/AlertMessage';\nimport MetaTitle from 'components/helper/MetaTitle';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: 'transparent',\n    borderRadius: 0,\n  },\n  iconText: {\n    fontWeight: 700,\n    marginLeft: theme.spacing(2),\n  },\n  form: {\n    '& .MuiTextField-root': {\n      background: theme.palette.background.paper,\n    },\n    '& .MuiOutlinedInput-input': {\n      background: theme.palette.background.paper,\n    },\n  },\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  uploadButton: {\n    display: 'flex',\n    justifyContent: 'center',\n    border: '1px solid transparent',\n    background: theme.palette.alternate.dark,\n    textTransform: 'lowercase',\n    '& .icon-text': {\n      width: 'auto',\n    },\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'flex-start',\n    },\n  },\n}));\n\nconst Application = props => {\n  const { api_data, className, ...rest } = props;\n  // console.log('api', api_data);\n\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n  const [status, setStatusBase] = React.useState('');\n  const [fileName, setFileName] = React.useState('');\n\n  console.log(status);\n\n  return (\n    <div className={className} {...rest}>\n      <MetaTitle\n        title={`${api_data.title} | OnlineAarogya}`}\n        metaKeyWord=\"Jobs, OnlineAarogya\"\n        metaDescription=\"ACPL is a start-up in the field of medical healthcare including tele-medicine. The software platform will enable patients to search doctors for various specialties, check their profile, book appointment, and take consultation. The company is going to start the pilot launch by end of Aug 2021 and a full-scale launch of services by end of Oct 2021. The company’s mission is to create medical healthcare eco-system accessible, easier and better in terms of quality especially serving to the rural and non-metro geographies, which constitutes more than 75% of the population.\"\n      />\n      <SectionHeader\n        title=\"Apply fo this job\"\n        // subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n        subtitleProps={{\n          variant: 'body1',\n          color: 'textPrimary',\n        }}\n        data-aos=\"fade-up\"\n        align={isMd ? 'center' : 'left'}\n        id=\"apply\"\n      />\n      <div className={classes.form}>\n        {status ? (\n          <AlertMassage\n            key={status.key}\n            message={status.msg}\n            status={status.status}\n          />\n        ) : null}\n        <Formik\n          initialValues={{\n            full_name: '',\n            resume: '',\n            email: '',\n            massage: '',\n            nid: api_data.nid,\n            jobName: api_data.field_job_position,\n          }}\n          validationSchema={Yup.object().shape({\n            full_name: Yup.string()\n              .max(255)\n              .required('full_name is required'),\n            resume: Yup.string()\n              .max(255)\n              .required('resume is required'),\n            email: Yup.string()\n              .max(255)\n              .required('email is required'),\n          })}\n          onSubmit={async (values, { resetForm, setSubmitting }) => {\n            let data = new FormData();\n\n            data.append('title', values.full_name);\n            data.append('field_resume_c', values.resume);\n            data.append('field_email', values.email);\n            data.append('body', values.massage);\n            data.append('field_applied_for_', values.nid);\n            // console.log('dsds',values.resume);\n            return fetch(\n              `${process.env.NEXT_PUBLIC_DB_HOST}/api/post-contact`,\n              {\n                method: 'post',\n                // mode: 'no-cors',\n                // headers: new Headers({\n                //   Accept: 'application/json',\n                // }),\n                body: data,\n              },\n            )\n              .then(response => response.json())\n              .then(result => {\n                // console.log('Success:', result);\n                // console.log(result);\n\n                setStatusBase({\n                  key: 22,\n                  status: 'success',\n                  msg:\n                    'Your application for the' +\n                    values.jobName +\n                    'job has been successfully submitted.',\n                });\n                setSubmitting(false);\n                resetForm(values);\n              })\n              .catch(error => {\n                setStatusBase({\n                  key: 22,\n                  status: 'error',\n                  msg: error,\n                });\n              });\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            touched,\n            values,\n            resetForm,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={isMd ? 4 : 2}>\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.inputTitle}\n                  >\n                    Full name\n                  </Typography>\n                  <TextField\n                    error={Boolean(touched.full_name && errors.full_name)}\n                    fullWidth\n                    helperText={touched.full_name && errors.full_name}\n                    label=\"Enter your full name\"\n                    // margin=\"normal\"\n                    name=\"full_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.full_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.inputTitle}\n                  >\n                    E-mail\n                  </Typography>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Enter your email address\"\n                    name=\"email\"\n                    type=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={12} data-aos=\"fade-up\">\n                  <Button\n                    variant=\"outlined\"\n                    component=\"label\"\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    className={classes.uploadButton}\n                  >\n                    <IconText\n                      fontIconClass=\"fas fa-cloud-upload-alt\"\n                      color={theme.palette.primary.main}\n                      title=\"Upload CV\"\n                      typographyProps={{\n                        className: classes.iconText,\n                      }}\n                    />\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      onChange={event => {\n                        setFieldValue('resume', event.target.files[0]);\n                        // setFileName()\n                        console.log('ff', event.target.files[0]);\n                      }}\n                      style={{ display: 'none' }}\n                    />\n                  </Button>\n                </Grid>\n\n                <Grid item xs={12} data-aos=\"fade-up\">\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.inputTitle}\n                  >\n                    Message\n                  </Typography>\n                  <TextField\n                    error={Boolean(touched.massage && errors.massage)}\n                    fullWidth\n                    helperText={touched.massage && errors.massage}\n                    label=\"Massage...\"\n                    name=\"massage\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.massage}\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                  />\n                </Grid>\n\n                <Box my={2} ml={1.4}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    // onClick={e => resetForm()}\n                  >\n                    Apply Now\n                  </Button>\n                  {isSubmitting && <LinearProgress />}\n                </Box>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nApplication.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Application;\n"]},"metadata":{},"sourceType":"module"}