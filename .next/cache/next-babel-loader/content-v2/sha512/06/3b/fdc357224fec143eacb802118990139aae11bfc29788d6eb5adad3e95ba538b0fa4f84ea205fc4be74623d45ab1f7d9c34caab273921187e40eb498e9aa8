{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Divider, LinearProgress, MenuItem, FormControlLabel, Checkbox, FormGroup } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker, KeyboardDatePicker, DateTimePicker } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%' // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white\n  }\n})); // code for Tabs\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst General = props => {\n  _s();\n\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // code for tabs and\n\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"\",\n    className: classes.tabHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(Tab, _extends({\n    label: \"Profile\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Medial\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Family Members\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), __jsx(Tab, _extends({\n    label: \"Family Doctor\"\n  }, a11yProps(3), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))), __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      first_name: '',\n      last_name: '',\n      dob: '',\n      email: '',\n      // mobile: editData.mobile,\n      address: '' // password: editData.password\n\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required('Name is required'),\n      designation: Yup.string().max(255).required('Designation is required'),\n      department: Yup.string().max(255) //   .required('Department is required'),\n      // mobile: Yup.string()\n      //   .max(10)\n      .required('Mobile Number is required'),\n      address: Yup.string().max(255),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required') // password: Yup.string()\n      //   .max(255)\n      //   .required('Password is required')\n\n    }),\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      // POST request using fetch inside\n      // var newData = Object.assign(values, {\n      //   id: editData._id,\n      //   action: 'update'\n      // });\n      console.log(JSON.stringify(values, null, 2)); // const res = await getEmployeeAction(\n      //   JSON.stringify(newData, null, 2)\n      // );\n\n      if (res.success) {// setSnackValue(res.message);\n        // setSnackStatus('success');\n        // handleClick();\n        // setSubmitting(false);\n        // setTimeout(() => {\n        //   navigate('/app/view-employee', { replace: true });\n        // }, 3000);\n      } else {// console.log(res.message);\n          // setSnackValue(res.message);\n          // setSnackStatus('error');\n          // handleClick();\n          // setSubmitting(false);\n        } // console.log(res);\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }), __jsx(Grid, {\n    container: true,\n    className: \"mobileContainer\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 2,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    id: \"select\",\n    error: Boolean(touched.selectedPlan && errors.selectedPlan),\n    fullWidth: true,\n    helperText: touched.selectedPlan && errors.selectedPlan,\n    label: \"Title *\",\n    name: \"selectedPlan\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.selectedPlan,\n    variant: \"outlined\",\n    select: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }, __jsx(MenuItem, {\n    value: \"Dr.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Dr.\"), __jsx(MenuItem, {\n    value: \"Mr.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Mr.\"))), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.first_name && errors.first_name),\n    fullWidth: true,\n    helperText: touched.first_name && errors.first_name,\n    label: \"First Name *\" // margin=\"normal\"\n    ,\n    name: \"first_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.first_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.last_name && errors.last_name),\n    fullWidth: true,\n    helperText: touched.last_name && errors.last_name,\n    label: \"Last Name *\",\n    name: \"last_name\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.last_name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, __jsx(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }),\n    label: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }),\n    label: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }),\n    label: \"Others\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    error: Boolean(touched.dob && errors.dob),\n    fullWidth: true,\n    helperText: touched.dob && errors.dob,\n    label: \"Date of Birth * *\",\n    name: \"dob\",\n    format: \"dd/MM/yyyy hh:mm a\",\n    onBlur: handleBlur,\n    onChange: value => setFieldValue('dob', value),\n    value: values.dob,\n    inputVariant: \"outlined\",\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email *\" // margin=\"normal\"\n    ,\n    name: \"email\",\n    type: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 23\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    error: Boolean(touched.address && errors.address),\n    fullWidth: true,\n    helperText: touched.address && errors.address,\n    label: \"Address\" // margin=\"normal\"\n    ,\n    name: \"address\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.address,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 23\n    }\n  })), __jsx(Box, {\n    my: 2,\n    ml: 1.4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 23\n    }\n  }, \"UPDATE EMPLOYEE\"), isSubmitting && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 40\n    }\n  }))))))), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }, \"Item Two\"), __jsx(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, \"Item Three\"), __jsx(TabPanel, {\n    value: value,\n    index: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }, \"Item four\")));\n};\n\n_s(General, \"UxVnRtFJXNwFEgEDW1axBs76NIU=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c2 = General;\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default General;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"General\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/General/General.js"],"names":["React","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","Button","Divider","LinearProgress","MenuItem","FormControlLabel","Checkbox","FormGroup","PropTypes","AppBar","Tabs","Tab","Box","Yup","Formik","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDateTimePicker","KeyboardDatePicker","DateTimePicker","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","root","flexGrow","width","tabHeader","boxShadow","backgroundColor","palette","background","white","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","General","className","rest","classes","isMd","breakpoints","up","defaultMatches","setValue","useState","handleChange","event","newValue","first_name","last_name","dob","email","address","object","shape","name","string","max","required","designation","department","values","setSubmitting","console","log","JSON","stringify","res","success","errors","handleBlur","handleSubmit","isSubmitting","touched","Boolean","selectedPlan","setFieldValue"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SACEC,aADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,cAPF,EAQEC,QARF,EASEC,gBATF,EAUEC,QAVF,EAWEC,SAXF,QAYO,mBAZP;AAcA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,sBAFF,EAGEC,kBAHF,EAIEC,cAJF,QAKO,sBALP;AAOA,MAAMC,SAAS,GAAGzB,UAAU,CAAC0B,KAAK,KAAK;AACrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE,GADF;AAEVC,IAAAA,YAAY,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFJ,GADyB;AAKrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,KAAK,EAAE,MAFH,CAGJ;AACA;AACA;;AALI,GAL+B;AAYrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mCADF;AAETC,IAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcC,UAAd,CAAyBC;AAFjC;AAZ0B,CAAL,CAAN,CAA5B,C,CAkBA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAuCH,KAA7C;AAAA,QAAmCI,KAAnC,4BAA6CJ,KAA7C;;AAEA,SACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAHpB;AAIE,IAAA,EAAE,EAAG,4BAA2BA,KAAM,EAJxC;AAKE,uBAAkB,uBAAsBA,KAAM;AALhD,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,QAAZ,CARF,CADF;AAYD;;KAfQF,Q;AAiBTA,QAAQ,CAACM,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAE7B,SAAS,CAACkC,IADD;AAEnBH,EAAAA,KAAK,EAAE/B,SAAS,CAACmC,GAAV,CAAcC,UAFF;AAGnBN,EAAAA,KAAK,EAAE9B,SAAS,CAACmC,GAAV,CAAcC;AAHF,CAArB;;AAMA,SAASC,SAAT,CAAmBN,KAAnB,EAA0B;AACxB,SAAO;AACLO,IAAAA,EAAE,EAAG,uBAAsBP,KAAM,EAD5B;AAEL,qBAAkB,4BAA2BA,KAAM;AAF9C,GAAP;AAID;;AAED,MAAMQ,OAAO,GAAGX,KAAK,IAAI;AAAA;;AACvB,QAAM;AAAEY,IAAAA;AAAF,MAAyBZ,KAA/B;AAAA,QAAsBa,IAAtB,4BAA+Bb,KAA/B;;AACA,QAAMc,OAAO,GAAG9B,SAAS,EAAzB;AAEA,QAAMC,KAAK,GAAGzB,QAAQ,EAAtB;AACA,QAAMuD,IAAI,GAAGtD,aAAa,CAACwB,KAAK,CAAC+B,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDC,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B,CALuB,CASvB;;AACA,QAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoB7D,KAAK,CAAC8D,QAAN,CAAe,CAAf,CAA1B;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACrCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEX;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACxB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAmC,IAAA,SAAS,EAAEwB,OAAO,CAACrB,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAES,KADT;AAEE,IAAA,QAAQ,EAAEmB,YAFZ;AAGE,IAAA,cAAc,EAAC,SAHjB;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,OAAO,EAAC,YALV;AAME,IAAA,aAAa,EAAC,MANhB;AAOE,kBAAW,8BAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,KAAyBZ,SAAS,CAAC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF,EAUE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,KAAwBA,SAAS,CAAC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,EAWE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,KAAgCA,SAAS,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,EAYE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,KAA+BA,SAAS,CAAC,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZF,CADF,CADF,EAiBE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEa,IAAI,GAAG,CAAH,GAAO,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbS,MAAAA,UAAU,EAAE,EADC;AAEbC,MAAAA,SAAS,EAAE,EAFE;AAGbC,MAAAA,GAAG,EAAE,EAHQ;AAIbC,MAAAA,KAAK,EAAE,EAJM;AAKb;AACAC,MAAAA,OAAO,EAAE,EANI,CAOb;;AAPa,KADjB;AAUE,IAAA,gBAAgB,EAAEnD,GAAG,CAACoD,MAAJ,GAAaC,KAAb,CAAmB;AACnCC,MAAAA,IAAI,EAAEtD,GAAG,CAACuD,MAAJ,GACHC,GADG,CACC,GADD,EAEHC,QAFG,CAEM,kBAFN,CAD6B;AAInCC,MAAAA,WAAW,EAAE1D,GAAG,CAACuD,MAAJ,GACVC,GADU,CACN,GADM,EAEVC,QAFU,CAED,yBAFC,CAJsB;AAOnCE,MAAAA,UAAU,EAAE3D,GAAG,CAACuD,MAAJ,GACTC,GADS,CACL,GADK,EAEV;AACA;AACA;AAJU,OAKTC,QALS,CAKA,2BALA,CAPuB;AAanCN,MAAAA,OAAO,EAAEnD,GAAG,CAACuD,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,CAb0B;AAenCN,MAAAA,KAAK,EAAElD,GAAG,CAACuD,MAAJ,GACJL,KADI,CACE,uBADF,EAEJM,GAFI,CAEA,GAFA,EAGJC,QAHI,CAGK,mBAHL,CAf4B,CAmBnC;AACA;AACA;;AArBmC,KAAnB,CAVpB;AAiCE,IAAA,QAAQ,EAAE,OAAOG,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAqC;AAC7C;AACA;AACA;AACA;AACA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ,EAP6C,CAQ7C;AACA;AACA;;AACA,UAAIM,GAAG,CAACC,OAAR,EAAiB,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OARD,MAQO,CACL;AACA;AACA;AACA;AACA;AACD,SAzB4C,CA0B7C;;AACD,KA5DH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA8DG,CAAC;AACAC,IAAAA,MADA;AAEAC,IAAAA,UAFA;AAGAzB,IAAAA,YAHA;AAIA0B,IAAAA,YAJA;AAKAC,IAAAA,YALA;AAMAC,IAAAA,OANA;AAOAZ,IAAAA;AAPA,GAAD,KASC;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAA4C,IAAA,OAAO,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,KAAK,EAAEG,OAAO,CACZD,OAAO,CAACE,YAAR,IAAwBN,MAAM,CAACM,YADnB,CAFhB;AAKE,IAAA,SAAS,MALX;AAME,IAAA,UAAU,EAAEF,OAAO,CAACE,YAAR,IAAwBN,MAAM,CAACM,YAN7C;AAOE,IAAA,KAAK,EAAC,SAPR;AAQE,IAAA,IAAI,EAAC,cARP;AASE,IAAA,MAAM,EAAEL,UATV;AAUE,IAAA,QAAQ,EAAEzB,YAVZ;AAWE,IAAA,KAAK,EAAEgB,MAAM,CAACc,YAXhB;AAYE,IAAA,OAAO,EAAC,UAZV;AAaE,IAAA,MAAM,MAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,EAgBE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAhBF,CADF,CADF,EAqBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAED,OAAO,CAACD,OAAO,CAACzB,UAAR,IAAsBqB,MAAM,CAACrB,UAA9B,CADhB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAEyB,OAAO,CAACzB,UAAR,IAAsBqB,MAAM,CAACrB,UAH3C;AAIE,IAAA,KAAK,EAAC,cAJR,CAKE;AALF;AAME,IAAA,IAAI,EAAC,YANP;AAOE,IAAA,MAAM,EAAEsB,UAPV;AAQE,IAAA,QAAQ,EAAEzB,YARZ;AASE,IAAA,KAAK,EAAEgB,MAAM,CAACb,UAThB;AAUE,IAAA,OAAO,EAAC,UAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,EAmCE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE0B,OAAO,CAACD,OAAO,CAACxB,SAAR,IAAqBoB,MAAM,CAACpB,SAA7B,CADhB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAEwB,OAAO,CAACxB,SAAR,IAAqBoB,MAAM,CAACpB,SAH1C;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,IAAA,IAAI,EAAC,WALP;AAME,IAAA,MAAM,EAAEqB,UANV;AAOE,IAAA,QAAQ,EAAEzB,YAPZ;AAQE,IAAA,KAAK,EAAEgB,MAAM,CAACZ,SARhB;AASE,IAAA,OAAO,EAAC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnCF,EAgDE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,QAAD;AAAU,MAAA,cAAc,EAAE,IAA1B;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,QAAD;AAAU,MAAA,cAAc,EAAE,IAA1B;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,QAAD;AAAU,MAAA,cAAc,EAAE,IAA1B;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,CAhDF,EAwEE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE9C,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBE,MAAC,kBAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,KAAK,EAAEuE,OAAO,CAACD,OAAO,CAACvB,GAAR,IAAemB,MAAM,CAACnB,GAAvB,CAFhB;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,UAAU,EAAEuB,OAAO,CAACvB,GAAR,IAAemB,MAAM,CAACnB,GAJpC;AAKE,IAAA,KAAK,EAAC,mBALR;AAME,IAAA,IAAI,EAAC,KANP;AAOE,IAAA,MAAM,EAAC,oBAPT;AAQE,IAAA,MAAM,EAAEoB,UARV;AASE,IAAA,QAAQ,EAAE5C,KAAK,IAAIkD,aAAa,CAAC,KAAD,EAAQlD,KAAR,CATlC;AAUE,IAAA,KAAK,EAAEmC,MAAM,CAACX,GAVhB;AAWE,IAAA,YAAY,EAAC,UAXf;AAYE,IAAA,mBAAmB,EAAE;AACnB,oBAAc;AADK,KAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CAxEF,EA0HE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEwB,OAAO,CAACD,OAAO,CAACtB,KAAR,IAAiBkB,MAAM,CAAClB,KAAzB,CADhB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAEsB,OAAO,CAACtB,KAAR,IAAiBkB,MAAM,CAAClB,KAHtC;AAIE,IAAA,KAAK,EAAC,SAJR,CAKE;AALF;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,MAAM,EAAEmB,UARV;AASE,IAAA,QAAQ,EAAEzB,YATZ;AAUE,IAAA,KAAK,EAAEgB,MAAM,CAACV,KAVhB;AAWE,IAAA,OAAO,EAAC,UAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1HF,EA0IE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEuB,OAAO,CAACD,OAAO,CAACrB,OAAR,IAAmBiB,MAAM,CAACjB,OAA3B,CADhB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAEqB,OAAO,CAACrB,OAAR,IAAmBiB,MAAM,CAACjB,OAHxC;AAIE,IAAA,KAAK,EAAC,SAJR,CAKE;AALF;AAME,IAAA,IAAI,EAAC,SANP;AAOE,IAAA,MAAM,EAAEkB,UAPV;AAQE,IAAA,QAAQ,EAAEzB,YARZ;AASE,IAAA,KAAK,EAAEgB,MAAM,CAACT,OAThB;AAUE,IAAA,OAAO,EAAC,UAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1IF,EAyJE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,QAAQ,EAAEoB,YAFZ;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAWGA,YAAY,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXnB,CAzJF,CAHF,CAvEJ,CADF,CADF,CAjBF,EA0QE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE9C,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1QF,EA6QE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7QF,EAgRE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhRF,CADF,CADF;AAwRD,CAvSD;;GAAMS,O;UAEY3B,S,EAEFxB,Q,EACDC,a;;;MALTkD,O;AAySNA,OAAO,CAACN,SAAR,GAAoB;AAClB;AACF;AACA;AACEO,EAAAA,SAAS,EAAExC,SAAS,CAAC4D;AAJH,CAApB;AAOA,eAAerB,OAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n  LinearProgress,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n} from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n  DateTimePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    // backgroundColor: theme.palette.background.paper,\n    // position: 'relative',\n    // left: '100px',\n  },\n  tabHeader: {\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n    backgroundColor: theme.palette.background.white,\n  },\n}));\n\n// code for Tabs\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst General = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  // code for tabs and\n  const [value, setValue] = React.useState(0);\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={className} {...rest}>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"\" className={classes.tabHeader}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n          >\n            <Tab label=\"Profile\" {...a11yProps(0)} />\n            <Tab label=\"Medial\" {...a11yProps(1)} />\n            <Tab label=\"Family Members\" {...a11yProps(2)} />\n            <Tab label=\"Family Doctor\" {...a11yProps(3)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Grid container spacing={isMd ? 4 : 2}>\n            <Formik\n              initialValues={{\n                first_name: '',\n                last_name: '',\n                dob: '',\n                email: '',\n                // mobile: editData.mobile,\n                address: '',\n                // password: editData.password\n              }}\n              validationSchema={Yup.object().shape({\n                name: Yup.string()\n                  .max(255)\n                  .required('Name is required'),\n                designation: Yup.string()\n                  .max(255)\n                  .required('Designation is required'),\n                department: Yup.string()\n                  .max(255)\n                  //   .required('Department is required'),\n                  // mobile: Yup.string()\n                  //   .max(10)\n                  .required('Mobile Number is required'),\n                address: Yup.string().max(255),\n\n                email: Yup.string()\n                  .email('Must be a valid email')\n                  .max(255)\n                  .required('Email is required'),\n                // password: Yup.string()\n                //   .max(255)\n                //   .required('Password is required')\n              })}\n              onSubmit={async (values, { setSubmitting }) => {\n                // POST request using fetch inside\n                // var newData = Object.assign(values, {\n                //   id: editData._id,\n                //   action: 'update'\n                // });\n\n                console.log(JSON.stringify(values, null, 2));\n                // const res = await getEmployeeAction(\n                //   JSON.stringify(newData, null, 2)\n                // );\n                if (res.success) {\n                  // setSnackValue(res.message);\n                  // setSnackStatus('success');\n                  // handleClick();\n                  // setSubmitting(false);\n                  // setTimeout(() => {\n                  //   navigate('/app/view-employee', { replace: true });\n                  // }, 3000);\n                } else {\n                  // console.log(res.message);\n                  // setSnackValue(res.message);\n                  // setSnackStatus('error');\n                  // handleClick();\n                  // setSubmitting(false);\n                }\n                // console.log(res);\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  {/* our custom form */}\n                  <br></br>\n                  <Grid container className=\"mobileContainer\" spacing={3}>\n                    <Grid item md={2} xs={12}>\n                      <TextField\n                        id=\"select\"\n                        error={Boolean(\n                          touched.selectedPlan && errors.selectedPlan,\n                        )}\n                        fullWidth\n                        helperText={touched.selectedPlan && errors.selectedPlan}\n                        label=\"Title *\"\n                        name=\"selectedPlan\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.selectedPlan}\n                        variant=\"outlined\"\n                        select\n                      >\n                        <MenuItem value=\"Dr.\">Dr.</MenuItem>\n                        <MenuItem value=\"Mr.\">Mr.</MenuItem>\n                      </TextField>\n                    </Grid>\n                    <Grid item md={5} xs={12}>\n                      <TextField\n                        error={Boolean(touched.first_name && errors.first_name)}\n                        fullWidth\n                        helperText={touched.first_name && errors.first_name}\n                        label=\"First Name *\"\n                        // margin=\"normal\"\n                        name=\"first_name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.first_name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item md={5} xs={12}>\n                      <TextField\n                        error={Boolean(touched.last_name && errors.last_name)}\n                        fullWidth\n                        helperText={touched.last_name && errors.last_name}\n                        label=\"Last Name *\"\n                        name=\"last_name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.last_name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup row>\n                        <FormControlLabel\n                          control={\n                            <Checkbox defaultChecked={true} color=\"primary\" />\n                          }\n                          label=\"Male\"\n                        />\n\n                        <FormControlLabel\n                          control={\n                            <Checkbox defaultChecked={true} color=\"primary\" />\n                          }\n                          label=\"Female\"\n                        />\n                        <FormControlLabel\n                          control={\n                            <Checkbox defaultChecked={true} color=\"primary\" />\n                          }\n                          label=\"Others\"\n                        />\n                      </FormGroup>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        {/* <KeyboardDatePicker\n                          error={Boolean(touched.dob && errors.dob)}\n                          fullWidth\n                          helperText={touched.dob && errors.dob}\n                          label=\"Date of Birth * *\"\n                          name=\"dob\"\n                          format=\"dd/MM/yyyy hh:mm a\"\n                          onBlur={handleBlur}\n                          onChange={value => setFieldValue('dob', value)}\n                          value={values.dob}\n                          inputVariant=\"outlined\"\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                        /> */}\n                        <KeyboardDatePicker\n                          disableToolbar\n                          error={Boolean(touched.dob && errors.dob)}\n                          fullWidth\n                          helperText={touched.dob && errors.dob}\n                          label=\"Date of Birth * *\"\n                          name=\"dob\"\n                          format=\"dd/MM/yyyy hh:mm a\"\n                          onBlur={handleBlur}\n                          onChange={value => setFieldValue('dob', value)}\n                          value={values.dob}\n                          inputVariant=\"outlined\"\n                          KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                          }}\n                        />\n                      </MuiPickersUtilsProvider>\n                    </Grid>\n                    {/* <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.dob && errors.dob)}\n                        fullWidth\n                        helperText={touched.dob && errors.dob}\n                        label=\"Date of Birth *\"\n                        // margin=\"normal\"\n                        name=\"dob\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.dob}\n                        variant=\"outlined\"\n                      />\n                    </Grid> */}\n\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email *\"\n                        // margin=\"normal\"\n                        name=\"email\"\n                        type=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Grid item md={12} xs={12}>\n                      <TextField\n                        error={Boolean(touched.address && errors.address)}\n                        fullWidth\n                        helperText={touched.address && errors.address}\n                        label=\"Address\"\n                        // margin=\"normal\"\n                        name=\"address\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.address}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n\n                    <Box my={2} ml={1.4}>\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        UPDATE EMPLOYEE\n                      </Button>\n                      {isSubmitting && <LinearProgress />}\n                    </Box>\n                  </Grid>\n                  {/* Custom form end */}\n                </form>\n              )}\n            </Formik>\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          Item Two\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          Item Three\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          Item four\n        </TabPanel>\n      </div>\n    </div>\n  );\n};\n\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default General;\n"]},"metadata":{},"sourceType":"module"}