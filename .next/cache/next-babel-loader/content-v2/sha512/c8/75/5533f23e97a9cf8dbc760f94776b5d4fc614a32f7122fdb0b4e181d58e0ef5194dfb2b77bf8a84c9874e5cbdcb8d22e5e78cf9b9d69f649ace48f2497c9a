{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/ViewFamilyDoctor/ViewFamilyDoctor.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, FormControlLabel, Switch, Button, Divider } from '@material-ui/core';\nimport MetaTitle from 'components/helper/MetaTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n\nconst ViewFamilyDoctor = props => {\n  _s();\n\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState('');\n\n  const fetchData = async () => {\n    const req = await fetch('https://randomuser.me/api/?gender=male&results=100');\n    const newData = await req.json();\n    return setData(newData.results);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [0]);\n\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), __jsx(MetaTitle, {\n    title: \"View Family Doctor\",\n    metaKeyWord: \"\",\n    metaDescription: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.titleCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Family Doctor\"), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), \" Add Family Doctor\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Dessert (100g serving)\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Calories\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Fat\\xA0(g)\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Carbs\\xA0(g)\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Protein\\xA0(g)\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, rows.map(row => __jsx(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, row.name), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, row.calories), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, row.fat), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, row.carbs), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, row.protein))))))));\n};\n\n_s(ViewFamilyDoctor, \"NbO5i7XgujdyP0JnUGyOWLKL8MA=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = ViewFamilyDoctor;\nViewFamilyDoctor.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default ViewFamilyDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewFamilyDoctor\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/ViewFamilyDoctor/ViewFamilyDoctor.js"],"names":["React","useEffect","useState","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","FormControlLabel","Switch","Button","Divider","MetaTitle","AddIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","switchTitle","titleCta","display","justifyContent","alignItems","ViewFamilyDoctor","props","className","rest","classes","isMd","breakpoints","up","defaultMatches","data","setData","fetchData","req","fetch","newData","json","results","createData","name","calories","fat","carbs","protein","rows","table","map","row","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Button,\n  Divider,\n} from '@material-ui/core';\nimport MetaTitle from 'components/helper/MetaTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  switchTitle: {\n    fontWeight: 700,\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst ViewFamilyDoctor = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n  const [data, setData] = useState('');\n  const fetchData = async () => {\n    const req = await fetch(\n      'https://randomuser.me/api/?gender=male&results=100',\n    );\n    const newData = await req.json();\n\n    return setData(newData.results);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [0]);\n\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n\n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\n\n  return (\n    <div className={className} {...rest}>\n      <MetaTitle title=\"View Family Doctor\" metaKeyWord=\"\" metaDescription=\"\" />\n\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <div className={classes.titleCta}>\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Family Doctor\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\">\n              <AddIcon /> Add Family Doctor\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        {/* {data\n          ? data.map(user => {\n              return (\n                <div>\n                  {user.email}\n                  <img src={user.picture.medium} alt=\"\" />\n                </div>\n              );\n            })\n          : null} */}\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Dessert (100g serving)</TableCell>\n                <TableCell align=\"right\">Calories</TableCell>\n                <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <TableRow key={row.name}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell align=\"right\">{row.calories}</TableCell>\n                  <TableCell align=\"right\">{row.fat}</TableCell>\n                  <TableCell align=\"right\">{row.carbs}</TableCell>\n                  <TableCell align=\"right\">{row.protein}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </div>\n  );\n};\n\nViewFamilyDoctor.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default ViewFamilyDoctor;\n"]},"metadata":{},"sourceType":"module"}