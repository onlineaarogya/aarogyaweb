{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Faq/Faq.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { DescriptionListIcon, CardJobMinimal } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  descriptionListIcon: {\n    marginBottom: theme.spacing(2)\n  },\n  marginTop: {\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\n\nconst Faq = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(IconAlternate, {\n      fontIconClass: data.account.icon,\n      size: \"medium\",\n      color: data.account.color,\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }),\n    title: data.account.title,\n    subtitle: data.account.subtitle,\n    align: \"left\",\n    className: classes.descriptionListIcon,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, data.account.items.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, __jsx(CardJobMinimal, {\n    title: item.title,\n    subtitle: `Last updated ${item.updated}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })))))));\n};\n\n_s(Faq, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Faq;\nFaq.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Faq;\n\nvar _c;\n\n$RefreshReg$(_c, \"Faq\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Faq/Faq.js"],"names":["React","PropTypes","makeStyles","Grid","IconAlternate","DescriptionListIcon","CardJobMinimal","useStyles","theme","descriptionListIcon","marginBottom","spacing","marginTop","breakpoints","up","Faq","props","data","className","rest","classes","account","icon","color","title","subtitle","items","map","item","index","updated","propTypes","string","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,sBAApD;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADK,GADgB;AAIrCC,EAAAA,SAAS,EAAE;AACT,KAACJ,KAAK,CAACK,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,SAAS,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AADiB;AADrB;AAJ0B,CAAL,CAAN,CAA5B;;AAWA,MAAMI,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAGb,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEW;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AACE,IAAA,IAAI,EACF,MAAC,aAAD;AACE,MAAA,aAAa,EAAEF,IAAI,CAACI,OAAL,CAAaC,IAD9B;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEL,IAAI,CAACI,OAAL,CAAaE,KAHtB;AAIE,MAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAEN,IAAI,CAACI,OAAL,CAAaG,KATtB;AAUE,IAAA,QAAQ,EAAEP,IAAI,CAACI,OAAL,CAAaI,QAVzB;AAWE,IAAA,KAAK,EAAC,MAXR;AAYE,IAAA,SAAS,EAAEL,OAAO,CAACX,mBAZrB;AAaE,gBAAS,SAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACI,OAAL,CAAaK,KAAb,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KACtB,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,GAAG,EAAEA,KAAxB;AAA+B,gBAAS,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAED,IAAI,CAACJ,KADd;AAEE,IAAA,QAAQ,EAAG,gBAAeI,IAAI,CAACE,OAAQ,EAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAhBF,CADF,CADF,CADF;AAkHD,CAtHD;;GAAMf,G;UAEYR,S;;;KAFZQ,G;AAwHNA,GAAG,CAACgB,SAAJ,GAAgB;AACd;AACF;AACA;AACEb,EAAAA,SAAS,EAAEjB,SAAS,CAAC+B,MAJP;;AAKd;AACF;AACA;AACEf,EAAAA,IAAI,EAAEhB,SAAS,CAACgC,MAAV,CAAiBC;AART,CAAhB;AAWA,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { DescriptionListIcon, CardJobMinimal } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  descriptionListIcon: {\n    marginBottom: theme.spacing(2),\n  },\n  marginTop: {\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(5),\n    },\n  },\n}));\n\nconst Faq = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.account.icon}\n                size=\"medium\"\n                color={data.account.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.account.title}\n            subtitle={data.account.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.account.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        {/* <Grid item xs={12} md={6}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.billing.icon}\n                size=\"medium\"\n                color={data.billing.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.billing.title}\n            subtitle={data.billing.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.billing.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.marginTop}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.organizations.icon}\n                size=\"medium\"\n                color={data.organizations.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.organizations.title}\n            subtitle={data.organizations.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.organizations.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.marginTop}>\n          <DescriptionListIcon\n            icon={\n              <IconAlternate\n                fontIconClass={data.customizing.icon}\n                size=\"medium\"\n                color={data.customizing.color}\n                shape=\"circle\"\n              />\n            }\n            title={data.customizing.title}\n            subtitle={data.customizing.subtitle}\n            align=\"left\"\n            className={classes.descriptionListIcon}\n            data-aos=\"fade-up\"\n          />\n          <Grid container spacing={2}>\n            {data.customizing.items.map((item, index) => (\n              <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                <CardJobMinimal\n                  title={item.title}\n                  subtitle={`Last updated ${item.updated}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n};\n\nFaq.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Faq;\n"]},"metadata":{},"sourceType":"module"}