{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Rental/components/Places/Places.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(theme => ({\n  image: {\n    objectFit: 'cover',\n    borderRadius: theme.spacing(1)\n  },\n  textWhite: {\n    color: 'white'\n  },\n  gridListTile: {\n    position: 'relative'\n  },\n  gridListSection: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2)\n  }\n}));\n\nconst Places = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"Find more places\",\n    subtitle: \"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\",\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(GridList, {\n    cellHeight: isMd ? 360 : 260,\n    cols: 4,\n    spacing: isMd ? 24 : 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(GridListTile, {\n    key: index,\n    cols: isMd ? item.cols : 4 || 1,\n    className: classes.gridListTile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(Image, _extends({}, item.image, {\n    alt: item.location,\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), __jsx(SectionHeader, {\n    title: __jsx(\"span\", {\n      className: classes.textWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }, item.location),\n    subtitle: __jsx(\"span\", {\n      className: classes.textWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, item.properties, \" Properties\"),\n    disableGutter: true,\n    className: classes.gridListSection,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Places, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Places;\nPlaces.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Rental/components/Places/Places.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","GridList","GridListTile","Image","SectionHeader","useStyles","theme","image","objectFit","borderRadius","spacing","textWhite","color","gridListTile","position","gridListSection","bottom","left","Places","props","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","map","item","index","cols","location","width","height","properties","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    objectFit: 'cover',\n    borderRadius: theme.spacing(1),\n  },\n  textWhite: {\n    color: 'white',\n  },\n  gridListTile: {\n    position: 'relative',\n  },\n  gridListSection: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n}));\n\nconst Places = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Find more places\"\n        subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n        data-aos=\"fade-up\"\n      />\n      <GridList cellHeight={isMd ? 360 : 260} cols={4} spacing={isMd ? 24 : 8}>\n        {data.map((item, index) => (\n          <GridListTile\n            key={index}\n            cols={isMd ? item.cols : 4 || 1}\n            className={classes.gridListTile}\n          >\n            <Image\n              {...item.image}\n              alt={item.location}\n              className={classes.image}\n              lazyProps={{\n                width: '100%',\n                height: '100%',\n              }}\n            />\n            <SectionHeader\n              title={<span className={classes.textWhite}>{item.location}</span>}\n              subtitle={\n                <span className={classes.textWhite}>\n                  {item.properties} Properties\n                </span>\n              }\n              disableGutter\n              className={classes.gridListSection}\n              align=\"left\"\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nPlaces.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Places;\n"]},"metadata":{},"sourceType":"module"}