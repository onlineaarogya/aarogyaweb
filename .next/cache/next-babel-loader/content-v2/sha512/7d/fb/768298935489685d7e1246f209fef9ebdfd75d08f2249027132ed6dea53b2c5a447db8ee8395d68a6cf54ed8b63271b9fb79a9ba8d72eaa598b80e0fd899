{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/IndexView/components/Categories/Categories.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  image: {\n    width: 60,\n    height: 60,\n    objectFit: 'contain',\n    marginBottom: theme.spacing(5)\n  },\n  descriptionListIcon: {\n    '& .description-list-icon__title': {\n      fontWeight: 400,\n      fontSize: 16\n    }\n  },\n  cardBase: {\n    borderRadius: theme.spacing(2),\n    background: theme.palette.alternate.main\n  }\n}));\n\nconst Categories = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"What about working?\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 6,\n    md: 2,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(CardBase, {\n    noBorder: true,\n    noShadow: true,\n    liftUp: true,\n    className: classes.cardBase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(DescriptionListIcon, {\n    className: classes.descriptionListIcon,\n    icon: __jsx(Image, _extends({}, item.icon, {\n      alt: item.title,\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    })),\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/IndexView/components/Categories/Categories.js"],"names":["React","PropTypes","makeStyles","Grid","Image","SectionHeader","DescriptionListIcon","CardBase","useStyles","theme","image","width","height","objectFit","marginBottom","spacing","descriptionListIcon","fontWeight","fontSize","cardBase","borderRadius","background","palette","alternate","main","Categories","props","data","className","rest","classes","map","item","index","icon","title","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    width: 60,\n    height: 60,\n    objectFit: 'contain',\n    marginBottom: theme.spacing(5),\n  },\n  descriptionListIcon: {\n    '& .description-list-icon__title': {\n      fontWeight: 400,\n      fontSize: 16,\n    },\n  },\n  cardBase: {\n    borderRadius: theme.spacing(2),\n    background: theme.palette.alternate.main,\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader title=\"What about working?\" align=\"left\" />\n      <Grid container spacing={2}>\n        {data.map((item, index) => (\n          <Grid item xs={6} md={2} key={index} data-aos=\"fade-up\">\n            <CardBase noBorder noShadow liftUp className={classes.cardBase}>\n              <DescriptionListIcon\n                className={classes.descriptionListIcon}\n                icon={\n                  <Image\n                    {...item.icon}\n                    alt={item.title}\n                    className={classes.image}\n                  />\n                }\n                title={item.title}\n              />\n            </CardBase>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}