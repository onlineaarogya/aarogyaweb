{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/components/atoms/IconText/IconText.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n    width: '100%'\n  },\n  title: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n/**\n * Component to display the icon text\n *\n * @param {Object} props\n */\n\nconst IconText = props => {\n  _s();\n\n  const {\n    title,\n    color,\n    fontIconClass,\n    className,\n    iconProps,\n    typographyProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"title\", \"color\", \"fontIconClass\", \"className\", \"iconProps\", \"typographyProps\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx('icon-text', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, _extends({\n    className: \"icon-text__icon\",\n    size: \"small\",\n    fontIconClass: fontIconClass,\n    fontIconColor: color\n  }, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })), __jsx(Typography, _extends({\n    noWrap: true,\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: clsx('icon-text__typography', classes.title)\n  }, typographyProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), title));\n};\n\n_s(IconText, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = IconText;\nIconText.defaultProps = {\n  iconProps: {},\n  typographyProps: {}\n};\nIconText.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * The classes of the font icon\n   */\n  fontIconClass: PropTypes.string.isRequired,\n\n  /**\n   * Source set for the responsive images\n   */\n  color: PropTypes.string,\n\n  /**\n   * Title of the icon-text\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Additional properties to pass to the Icon component\n   */\n  iconProps: PropTypes.object,\n\n  /**\n   * Additional properties to pass to the Typography component\n   */\n  typographyProps: PropTypes.object\n};\nexport default IconText;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconText\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/components/atoms/IconText/IconText.js"],"names":["React","clsx","PropTypes","makeStyles","Typography","Icon","useStyles","theme","root","display","flexWrap","alignItems","width","title","marginLeft","spacing","IconText","props","color","fontIconClass","className","iconProps","typographyProps","rest","classes","defaultProps","propTypes","string","isRequired","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,aADL;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,KAAK,EAAE;AAJH,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADP;AAP8B,CAAL,CAAN,CAA5B;AAYA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM;AACJJ,IAAAA,KADI;AAEJK,IAAAA,KAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MAQFL,KARJ;AAAA,QAOKM,IAPL,4BAQIN,KARJ;;AAUA,QAAMO,OAAO,GAAGlB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEL,IAAI,CAAC,WAAD,EAAcuB,OAAO,CAAChB,IAAtB,EAA4BY,SAA5B;AAApB,KAAgEG,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,aAAa,EAAEJ,aAHjB;AAIE,IAAA,aAAa,EAAED;AAJjB,KAKMG,SALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQE,MAAC,UAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,SAAS,EAAEpB,IAAI,CAAC,uBAAD,EAA0BuB,OAAO,CAACX,KAAlC;AAJjB,KAKMS,eALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGT,KAPH,CARF,CADF;AAoBD,CAjCD;;GAAMG,Q;UAWYV,S;;;KAXZU,Q;AAmCNA,QAAQ,CAACS,YAAT,GAAwB;AACtBJ,EAAAA,SAAS,EAAE,EADW;AAEtBC,EAAAA,eAAe,EAAE;AAFK,CAAxB;AAKAN,QAAQ,CAACU,SAAT,GAAqB;AACnB;AACF;AACA;AACEN,EAAAA,SAAS,EAAElB,SAAS,CAACyB,MAJF;;AAKnB;AACF;AACA;AACER,EAAAA,aAAa,EAAEjB,SAAS,CAACyB,MAAV,CAAiBC,UARb;;AASnB;AACF;AACA;AACEV,EAAAA,KAAK,EAAEhB,SAAS,CAACyB,MAZE;;AAanB;AACF;AACA;AACEd,EAAAA,KAAK,EAAEX,SAAS,CAACyB,MAAV,CAAiBC,UAhBL;;AAiBnB;AACF;AACA;AACEP,EAAAA,SAAS,EAAEnB,SAAS,CAAC2B,MApBF;;AAqBnB;AACF;AACA;AACEP,EAAAA,eAAe,EAAEpB,SAAS,CAAC2B;AAxBR,CAArB;AA2BA,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n    width: '100%',\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n/**\n * Component to display the icon text\n *\n * @param {Object} props\n */\nconst IconText = props => {\n  const {\n    title,\n    color,\n    fontIconClass,\n    className,\n    iconProps,\n    typographyProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={clsx('icon-text', classes.root, className)} {...rest}>\n      <Icon\n        className=\"icon-text__icon\"\n        size=\"small\"\n        fontIconClass={fontIconClass}\n        fontIconColor={color}\n        {...iconProps}\n      />\n      <Typography\n        noWrap\n        variant=\"subtitle1\"\n        color=\"textPrimary\"\n        className={clsx('icon-text__typography', classes.title)}\n        {...typographyProps}\n      >\n        {title}\n      </Typography>\n    </div>\n  );\n};\n\nIconText.defaultProps = {\n  iconProps: {},\n  typographyProps: {},\n};\n\nIconText.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The classes of the font icon\n   */\n  fontIconClass: PropTypes.string.isRequired,\n  /**\n   * Source set for the responsive images\n   */\n  color: PropTypes.string,\n  /**\n   * Title of the icon-text\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Additional properties to pass to the Icon component\n   */\n  iconProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the Typography component\n   */\n  typographyProps: PropTypes.object,\n};\n\nexport default IconText;\n"]},"metadata":{},"sourceType":"module"}