{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, Divider, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  divider: {\n    margin: theme.spacing(3, 0),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(5, 0)\n    }\n  },\n  versionTitle: {\n    fontWeight: 700\n  },\n  date: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    fontWeight: 700\n  },\n  list: {\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  listItem: {\n    margin: theme.spacing(1 / 2, 0)\n  }\n}));\n\nconst Changelog = (_ref) => {\n  let {\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  const classes = useStyles();\n\n  const BlockItem = ({\n    versionTitle,\n    date,\n    list\n  }) => __jsx(\"div\", null, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    className: classes.versionTitle\n  }, versionTitle), __jsx(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    color: \"textSecondary\",\n    className: classes.date\n  }, date), __jsx(\"ul\", {\n    className: classes.list\n  }, list.map((item, i) => __jsx(\"li\", {\n    key: i,\n    className: classes.listItem\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    component: \"p\"\n  }, item)))));\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(BlockItem, {\n    versionTitle: \"v3.2.2\",\n    date: \"Feb 18, 2021\",\n    list: [\"Bug fix: Server side rendering\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v3.2.1\",\n    date: \"Jan 16, 2021\",\n    list: [\"Added new atomic component DarkModeToggler\", \"Replacing the Material-UI form toggler with the custom created DarkModeToggler component\", \"Handling theme mode changes with React state instead of reloading the website\", `The \"./src/utils.js\" file is removed`, `Added \"WithLayout\" HOC in \"./src\" folder to handle the layout changes`, `The \"RouteWithLayout\" component is deleted`, `The \"ContactForm\" component is moved from \"common\" folder into the \"organisms\"`, `\"common\" folder is deleted from \"./src\" folder`, `NextJS's \"_app.js\" file is cleaned-up`, `GatsbyJS's \"TopLayout.js\" file in \"./plugins\" folder is cleaned-up`, \"Added a new page in documentation to keep the changelog internally in the website\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v3.1.1\",\n    date: \"Jan 6, 2021\",\n    list: [\"Replace react-styleguidist with custom documentation that can be extended by developers\", \"Improve the selling product pages, redesign the overview page, fix dark mode screenshots, host images in a dedicated server\", \"Code clean-up\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v3.0.1\",\n    date: \"Dec 16, 2020\",\n    list: [\"Layout fixes in mobile and tablet screen sizes\", \"Code cleanup\", \"Removing unnecessary code dependencies\", \"npm scripts naming changes\", `Initial support for TypeScript under the \"Standard Plus\" and \"Extended\" license`]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v3.0.0\",\n    date: \"Nov 23, 2020\",\n    list: [\"Add GatsbyJS support\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v2.1.0\",\n    date: \"Nov 17, 2020\",\n    list: [\"Add dark mode support\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v2.0.0\",\n    date: \"Nov 8, 2020\",\n    list: [\"Consolidate the support of CRA & Next.js under the same version\", \"Upgrade dependencies to the latest version, e.g. Next.js\", \"Bug Fixes\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v1.0.3\",\n    date: \"July 29, 2020\",\n    list: [\"Adapt Accordion component with Material-UI new naming convention changes\", \"Fix img display block issues\", \"Fix npm installed packages vulnerability issues\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v1.0.2\",\n    date: \"July 24, 2020\",\n    list: [\"View components cleanup\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v1.0.1\",\n    date: \"July 22, 2020\",\n    list: [\"Fix cross-platform support for npm scripts and commands\"]\n  }), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(BlockItem, {\n    versionTitle: \"v1.0.0\",\n    date: \"July 18, 2020\",\n    list: [\"Initial release\"]\n  }));\n};\n\nexport default Changelog;","map":null,"metadata":{},"sourceType":"module"}