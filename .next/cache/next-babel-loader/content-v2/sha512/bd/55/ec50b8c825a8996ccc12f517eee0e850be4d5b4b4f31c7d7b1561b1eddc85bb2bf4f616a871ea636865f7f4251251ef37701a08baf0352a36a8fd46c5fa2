{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Questions/Questions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { Grid, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold'\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)'\n    }\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  fontWeight300: {\n    fontWeight: 300\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700\n  }\n}));\n\nconst Questions = ({\n  name,\n  stargazers_count,\n  props\n}) => {\n  // const { data, className, ...rest } = props;\n  const classes = useStyles([]);\n  const {\n    url\n  } = props.api_data;\n  const items = []; // var len = oFullResponse.results.length;\n\n  props.api_data.data.forEach(function (arrayItem) {\n    // console.log(props.api_data.data.[0]);\n    items.push({\n      id: arrayItem.nid,\n      title: arrayItem.title,\n      subtitle: arrayItem.field_subtitle.substring(0, 100),\n      text: arrayItem.body.replace(/<[^>]*>?/gm, '') // link: 'Check it out',\n\n    });\n  });\n  const {\n    0: getData,\n    1: setData\n  } = useState([]);\n\n  const fetchData = async () => {\n    const req = await fetch('https://randomuser.me/api/?gender=male&results=100');\n    const newData = await req.json();\n    return setData(newData.info);\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    fetchData();\n    console.log('fetch', getData.results);\n    alert('hhh');\n  };\n\n  console.log('praveen', props);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"FETCH DATA\"), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(IconAlternate, {\n    fontIconClass: data.icon,\n    size: \"medium\",\n    color: colors.red,\n    shape: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: url,\n    secondary: `Letâ€™s try to fix your ${url} issues.`,\n    primaryTypographyProps: {\n      variant: 'h6'\n    },\n    secondaryTypographyProps: {\n      variant: 'h6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    className: classes.listItemText,\n    primary: \"Updated Answers\",\n    secondary: `${props.api_data.data.length} answers`,\n    primaryTypographyProps: {\n      variant: 'subtitle1',\n      color: 'textSecondary'\n    },\n    secondaryTypographyProps: {\n      variant: 'body1',\n      className: classes.answerCount\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.accordionGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Accordion, {\n    items: items,\n    titleProps: {\n      variant: 'subtitle1',\n      className: classes.fontWeightBold\n    },\n    subtitleProps: {\n      className: classes.fontWeight300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))));\n};\n\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Questions;\n\nQuestions.getInitialProps = async () => {\n  const req = await fetch('https://randomuser.me/api/?gender=female&results=10');\n  const data = await req.json();\n  return {\n    star: data.results\n  };\n};","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenterArticle/components/Questions/Questions.js"],"names":["useState","PropTypes","makeStyles","colors","Grid","List","ListItem","ListItemAvatar","ListItemText","IconAlternate","Accordion","useStyles","theme","title","fontWeight","accordionGrid","boxShadow","fontWeightBold","fontWeight300","listItemAvatar","marginRight","spacing","listItemText","display","justifyContent","alignItems","flexWrap","answerCount","padding","borderRadius","background","palette","error","main","color","Questions","name","stargazers_count","props","classes","url","api_data","items","data","forEach","arrayItem","push","id","nid","subtitle","field_subtitle","substring","text","body","replace","getData","setData","fetchData","req","fetch","newData","json","info","handleClick","event","preventDefault","console","log","results","alert","className","rest","icon","red","variant","length","propTypes","string","object","isRequired","getInitialProps","star"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)',\n    },\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  fontWeight300: {\n    fontWeight: 300,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700,\n  },\n}));\n\nconst Questions = ({ name, stargazers_count, props }) => {\n  // const { data, className, ...rest } = props;\n  const classes = useStyles([]);\n  const { url } = props.api_data;\n  const items = [];\n  // var len = oFullResponse.results.length;\n  props.api_data.data.forEach(function(arrayItem) {\n    // console.log(props.api_data.data.[0]);\n    items.push({\n      id: arrayItem.nid,\n      title: arrayItem.title,\n      subtitle: arrayItem.field_subtitle.substring(0, 100),\n      text: arrayItem.body.replace(/<[^>]*>?/gm, ''),\n      // link: 'Check it out',\n    });\n  });\n\n  const [getData, setData] = useState([]);\n\n  const fetchData = async () => {\n    const req = await fetch(\n      'https://randomuser.me/api/?gender=male&results=100',\n    );\n    const newData = await req.json();\n\n    return setData(newData.info);\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    fetchData();\n    console.log('fetch', getData.results);\n    alert('hhh');\n  };\n\n  console.log('praveen', props);\n\n  return (\n    <div className={className} {...rest}>\n      <button onClick={handleClick}>FETCH DATA</button>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List>\n            <ListItem disableGutters>\n              <ListItemAvatar className={classes.listItemAvatar}>\n                <IconAlternate\n                  fontIconClass={data.icon}\n                  size=\"medium\"\n                  color={colors.red}\n                  shape=\"circle\"\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={url}\n                secondary={`Letâ€™s try to fix your ${url} issues.`}\n                primaryTypographyProps={{\n                  variant: 'h6',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'h6',\n                }}\n              />\n            </ListItem>\n            <ListItem disableGutters>\n              <ListItemText\n                className={classes.listItemText}\n                primary=\"Updated Answers\"\n                secondary={`${props.api_data.data.length} answers`}\n                primaryTypographyProps={{\n                  variant: 'subtitle1',\n                  color: 'textSecondary',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'body1',\n                  className: classes.answerCount,\n                }}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} className={classes.accordionGrid}>\n          <Accordion\n            items={items}\n            titleProps={{\n              variant: 'subtitle1',\n              className: classes.fontWeightBold,\n            }}\n            subtitleProps={{\n              className: classes.fontWeight300,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Questions;\n\nQuestions.getInitialProps = async () => {\n  const req = await fetch(\n    'https://randomuser.me/api/?gender=female&results=10',\n  );\n  const data = await req.json();\n  return { star: data.results };\n};\n"]},"metadata":{},"sourceType":"module"}