{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/Parallax/Parallax.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative'\n  },\n  image: {\n    position: 'absolute',\n    objectFit: 'cover',\n\n    /* support for plugin https://github.com/bfred-it/object-fit-images */\n    fontFamily: 'object-fit: cover;',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  }\n}));\n/**\n * Component to display the Parallax backgrounds\n *\n * @param {Object} props\n */\n\nconst Parallax = props => {\n  const {\n    backgroundImage,\n    children,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"backgroundImage\", \"children\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    const jarallaxElems = document.querySelectorAll('.jarallax');\n\n    if (!jarallaxElems || jarallaxElems && jarallaxElems.length === 0) {\n      return;\n    }\n\n    const jarallax = require('jarallax').jarallax;\n\n    jarallax(jarallaxElems, {\n      speed: 0.2\n    });\n  });\n  return __jsx(\"div\", _extends({\n    className: clsx('jarallax', 'parallax', classes.root, className),\n    \"data-jarallax\": true,\n    \"data-speed\": \"0.2\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: clsx('jarallax-img', 'parallax__image', classes.image),\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    alt: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), children);\n};\n\nParallax.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * The content\n   */\n  children: PropTypes.node,\n\n  /**\n   * The parallax background image\n   */\n  backgroundImage: PropTypes.string.isRequired\n};\nexport default Parallax;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/components/organisms/Parallax/Parallax.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","theme","root","position","image","objectFit","fontFamily","top","left","width","height","zIndex","backgroundRepeat","backgroundSize","backgroundPosition","Parallax","props","backgroundImage","children","className","rest","classes","useEffect","jarallaxElems","document","querySelectorAll","length","jarallax","require","speed","propTypes","string","node","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QAAQ,EAAE,UADL;AAELE,IAAAA,SAAS,EAAE,OAFN;;AAGL;AACAC,IAAAA,UAAU,EAAE,oBAJP;AAKLC,IAAAA,GAAG,EAAE,CALA;AAMLC,IAAAA,IAAI,EAAE,CAND;AAOLC,IAAAA,KAAK,EAAE,MAPF;AAQLC,IAAAA,MAAM,EAAE,MARH;AASLC,IAAAA,MAAM,EAAE,CAAC,CATJ;AAULC,IAAAA,gBAAgB,EAAE,WAVb;AAWLC,IAAAA,cAAc,EAAE,OAXX;AAYLC,IAAAA,kBAAkB,EAAE;AAZf;AAJ8B,CAAL,CAAN,CAA5B;AAoBA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAAoDH,KAA1D;AAAA,QAAiDI,IAAjD,4BAA0DJ,KAA1D;;AAEA,QAAMK,OAAO,GAAGrB,SAAS,EAAzB;AAEAJ,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AACpB,UAAMC,aAAa,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAtB;;AACA,QAAI,CAACF,aAAD,IAAmBA,aAAa,IAAIA,aAAa,CAACG,MAAd,KAAyB,CAAjE,EAAqE;AACnE;AACD;;AAED,UAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,QAArC;;AACAA,IAAAA,QAAQ,CAACJ,aAAD,EAAgB;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAhB,CAAR;AACD,GARD;AAUA,SACE;AACE,IAAA,SAAS,EAAEhC,IAAI,CAAC,UAAD,EAAa,UAAb,EAAyBwB,OAAO,CAACnB,IAAjC,EAAuCiB,SAAvC,CADjB;AAEE,yBAFF;AAGE,kBAAW;AAHb,KAIMC,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME;AACE,IAAA,SAAS,EAAEvB,IAAI,CAAC,cAAD,EAAiB,iBAAjB,EAAoCwB,OAAO,CAACjB,KAA5C,CADjB;AAEE,IAAA,KAAK,EAAE;AAAEa,MAAAA,eAAe,EAAG,OAAMA,eAAgB;AAA1C,KAFT;AAGE,IAAA,GAAG,EAAC,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWGC,QAXH,CADF;AAeD,CA9BD;;AAgCAH,QAAQ,CAACe,SAAT,GAAqB;AACnB;AACF;AACA;AACEX,EAAAA,SAAS,EAAErB,SAAS,CAACiC,MAJF;;AAKnB;AACF;AACA;AACEb,EAAAA,QAAQ,EAAEpB,SAAS,CAACkC,IARD;;AASnB;AACF;AACA;AACEf,EAAAA,eAAe,EAAEnB,SAAS,CAACiC,MAAV,CAAiBE;AAZf,CAArB;AAeA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n  },\n  image: {\n    position: 'absolute',\n    objectFit: 'cover',\n    /* support for plugin https://github.com/bfred-it/object-fit-images */\n    fontFamily: 'object-fit: cover;',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n  },\n}));\n\n/**\n * Component to display the Parallax backgrounds\n *\n * @param {Object} props\n */\nconst Parallax = props => {\n  const { backgroundImage, children, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const jarallaxElems = document.querySelectorAll('.jarallax');\n    if (!jarallaxElems || (jarallaxElems && jarallaxElems.length === 0)) {\n      return;\n    }\n\n    const jarallax = require('jarallax').jarallax;\n    jarallax(jarallaxElems, { speed: 0.2 });\n  });\n\n  return (\n    <div\n      className={clsx('jarallax', 'parallax', classes.root, className)}\n      data-jarallax\n      data-speed=\"0.2\"\n      {...rest}\n    >\n      <div\n        className={clsx('jarallax-img', 'parallax__image', classes.image)}\n        style={{ backgroundImage: `url(${backgroundImage})` }}\n        alt=\"...\"\n      />\n      {children}\n    </div>\n  );\n};\n\nParallax.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The content\n   */\n  children: PropTypes.node,\n  /**\n   * The parallax background image\n   */\n  backgroundImage: PropTypes.string.isRequired,\n};\n\nexport default Parallax;\n"]},"metadata":{},"sourceType":"module"}