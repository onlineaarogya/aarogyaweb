{"ast":null,"code":"import _extends from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport { Typography } from '@material-ui/core';\n/**\r\n * Component to display the Count Up Numbers\r\n *\r\n * @param {Object} props\r\n */\n\nvar CountUpNumber = function CountUpNumber(props) {\n  var start = props.start,\n      end = props.end,\n      suffix = props.suffix,\n      prefix = props.prefix,\n      label = props.label,\n      textColor = props.textColor,\n      labelColor = props.labelColor,\n      className = props.className,\n      visibilitySensorProps = props.visibilitySensorProps,\n      wrapperProps = props.wrapperProps,\n      countWrapperProps = props.countWrapperProps,\n      countNumberProps = props.countNumberProps,\n      labelProps = props.labelProps,\n      rest = _objectWithoutProperties(props, [\"start\", \"end\", \"suffix\", \"prefix\", \"label\", \"textColor\", \"labelColor\", \"className\", \"visibilitySensorProps\", \"wrapperProps\", \"countWrapperProps\", \"countNumberProps\", \"labelProps\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      viewPortEntered = _React$useState2[0],\n      setViewPortEntered = _React$useState2[1];\n\n  var setViewPortVisibility = function setViewPortVisibility(isVisible) {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: clsx('countup-number', className)\n  }, rest), __jsx(VisibilitySensor, _extends({\n    onChange: function onChange(isVisible) {\n      return setViewPortVisibility(isVisible);\n    },\n    delayedCall: true\n  }, visibilitySensorProps), __jsx(\"div\", _extends({\n    className: \"countup-number__wrapper\"\n  }, wrapperProps), __jsx(Typography, _extends({\n    variant: \"h4\",\n    gutterBottom: true,\n    align: \"center\",\n    color: textColor || 'textPrimary',\n    className: \"countup-number__count-wrapper\"\n  }, countWrapperProps), __jsx(CountUp, _extends({\n    delay: 1,\n    redraw: false,\n    end: viewPortEntered ? end : start,\n    start: start,\n    suffix: suffix || '',\n    prefix: prefix || '',\n    className: \"countup-number__count\"\n  }, countNumberProps))), __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: labelColor || 'textSecondary',\n    align: \"center\",\n    className: \"countup-number__label\"\n  }, labelProps), label))));\n};\n\nCountUpNumber.defaultProps = {\n  start: 0,\n  visibilitySensorProps: {},\n  wrapperProps: {},\n  countWrapperProps: {},\n  countNumberProps: {},\n  labelProps: {}\n};\nexport default CountUpNumber;","map":null,"metadata":{},"sourceType":"module"}