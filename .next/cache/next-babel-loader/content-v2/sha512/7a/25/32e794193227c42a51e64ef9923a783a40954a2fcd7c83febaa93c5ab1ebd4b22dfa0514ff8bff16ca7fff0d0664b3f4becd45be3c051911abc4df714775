{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/CareerListing/components/Categories/Categories.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Grid, useMediaQuery } from '@material-ui/core';\nimport { SectionHeader, IconAlternate, TypedText } from 'components/molecules';\nimport { CardCategory } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  typed: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst Categories = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: __jsx(React.Fragment, null, \"Explore by category \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }), \" and find the best jobs\", ' ', isMd ? null : __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }\n    }), \" for\\xA0\", __jsx(TypedText, {\n      component: \"span\",\n      variant: \"h4\",\n      color: \"secondary\",\n      className: classes.typed,\n      typedProps: {\n        strings: ['Web Developers.', 'UI/UX Designers.', 'Business Analists.', 'Scrum Masters.', 'Finance & Sales'],\n        typeSpeed: 50,\n        loop: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })),\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    key: index,\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    xs: 6,\n    sm: 6,\n    md: 3,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(CardCategory, {\n    variant: \"outlined\",\n    liftUp: true,\n    align: \"left\",\n    title: item.title,\n    icon: __jsx(IconAlternate, {\n      fontIconClass: item.icon,\n      size: \"medium\",\n      color: item.iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))));\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/CareerListing/components/Categories/Categories.js"],"names":["React","PropTypes","makeStyles","useTheme","Grid","useMediaQuery","SectionHeader","IconAlternate","TypedText","CardCategory","useStyles","theme","typed","fontWeight","Categories","props","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","strings","typeSpeed","loop","map","item","index","title","icon","iconColor","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Grid, useMediaQuery } from '@material-ui/core';\n\nimport { SectionHeader, IconAlternate, TypedText } from 'components/molecules';\nimport { CardCategory } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  typed: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title={\n          <>\n            Explore by category <br /> and find the best jobs{' '}\n            {isMd ? null : <br />} for&nbsp;\n            <TypedText\n              component=\"span\"\n              variant=\"h4\"\n              color=\"secondary\"\n              className={classes.typed}\n              typedProps={{\n                strings: [\n                  'Web Developers.',\n                  'UI/UX Designers.',\n                  'Business Analists.',\n                  'Scrum Masters.',\n                  'Finance & Sales',\n                ],\n                typeSpeed: 50,\n                loop: true,\n              }}\n            />\n          </>\n        }\n        align=\"left\"\n      />\n      <Grid container spacing={isMd ? 4 : 1}>\n        {data.map((item, index) => (\n          <Grid\n            key={index}\n            item\n            container\n            alignItems=\"center\"\n            direction=\"column\"\n            xs={6}\n            sm={6}\n            md={3}\n            data-aos=\"fade-up\"\n          >\n            <CardCategory\n              variant=\"outlined\"\n              liftUp\n              align=\"left\"\n              title={item.title}\n              icon={\n                <IconAlternate\n                  fontIconClass={item.icon}\n                  size=\"medium\"\n                  color={item.iconColor}\n                />\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}