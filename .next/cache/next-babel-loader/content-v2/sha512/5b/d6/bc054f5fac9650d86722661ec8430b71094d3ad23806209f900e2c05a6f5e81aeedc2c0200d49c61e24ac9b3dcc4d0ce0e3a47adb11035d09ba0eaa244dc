{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, Button, Box, LinearProgress } from '@material-ui/core';\nimport { IconText } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    icon: {\n      background: 'transparent',\n      borderRadius: 0\n    },\n    iconText: {\n      fontWeight: 700,\n      marginLeft: theme.spacing(2)\n    },\n    form: {\n      '& .MuiTextField-root': {\n        background: theme.palette.background.paper\n      },\n      '& .MuiOutlinedInput-input': {\n        background: theme.palette.background.paper\n      }\n    },\n    inputTitle: {\n      fontWeight: 700,\n      marginBottom: theme.spacing(1)\n    },\n    uploadButton: _defineProperty({\n      display: 'flex',\n      justifyContent: 'center',\n      border: '1px solid transparent',\n      background: theme.palette.alternate.dark,\n      textTransform: 'lowercase',\n      '& .icon-text': {\n        width: 'auto'\n      }\n    }, theme.breakpoints.down('xs'), {\n      justifyContent: 'flex-start'\n    })\n  };\n});\n\nvar Application = function Application(props) {\n  var className = props.className,\n      rest = _objectWithoutProperties(props, [\"className\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n\n  var handleSubmit = function handleSubmit(values) {\n    var data = new FormData();\n    data.append('field_resume_c', values.photo1);\n    return fetch('http://localhost:8888/oaarogya/web/api/post-contact', {\n      method: 'post',\n      // headers: new Headers({\n      //   Accept: 'application/json',\n      // }),\n      body: data\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(SectionHeader, {\n    title: \"Apply fo this job\" // subtitle=\"After 3 days all of your offers will arrive and you will have another 7 days to select your new company.\"\n    ,\n    subtitleProps: {\n      variant: 'body1',\n      color: 'textPrimary'\n    },\n    \"data-aos\": \"fade-up\",\n    align: isMd ? 'center' : 'left',\n    id: \"apply\"\n  }), __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(Formik, {\n    initialValues: {\n      full_name: '',\n      resume: '',\n      email: '',\n      massage: ''\n    },\n    validationSchema: Yup.object().shape({\n      full_name: Yup.string().max(255).required('full_name is required'),\n      resume: Yup.string().max(255).required('resume is required'),\n      email: Yup.string().max(255).required('email is required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setSubmitting, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting;\n                data = new FormData();\n                data.append('title', values.full_name);\n                data.append('field_resume_c', values.resume);\n                data.append('field_email', values.email);\n                data.append('body', values.massage);\n                return _context.abrupt(\"return\", fetch('http://localhost:8888/oaarogya/web/api/post-contact', {\n                  method: 'post',\n                  // headers: new Headers({\n                  //   Accept: 'application/json',\n                  // }),\n                  body: data\n                }).then(function (response) {\n                  return response.json();\n                }).catch(function (error) {\n                  return console.log(error);\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  }, function (_ref3) {\n    var errors = _ref3.errors,\n        handleBlur = _ref3.handleBlur,\n        handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting,\n        setFieldValue = _ref3.setFieldValue,\n        touched = _ref3.touched,\n        values = _ref3.values,\n        resetForm = _ref3.resetForm;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(TextField, {\n      error: Boolean(touched.full_name && errors.full_name),\n      fullWidth: true,\n      helperText: touched.full_name && errors.full_name,\n      label: \"Full Name\" // margin=\"normal\"\n      ,\n      name: \"full_name\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.full_name,\n      variant: \"outlined\"\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.email && errors.email,\n      label: \"Email\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.email,\n      variant: \"outlined\"\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(Button, {\n      variant: \"outlined\",\n      component: \"label\",\n      color: \"primary\",\n      fullWidth: true,\n      size: \"large\",\n      className: classes.uploadButton\n    }, __jsx(IconText, {\n      fontIconClass: \"fas fa-cloud-upload-alt\",\n      color: theme.palette.primary.main,\n      title: \"Upload CV\",\n      typographyProps: {\n        className: classes.iconText\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: function onChange(event) {\n        setFieldValue('resume', event.target.files[0]);\n      },\n      style: {\n        display: 'none'\n      }\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(TextField, {\n      error: Boolean(touched.massage && errors.massage),\n      fullWidth: true,\n      helperText: touched.massage && errors.massage,\n      label: \"Massage\",\n      name: \"massage\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.massage,\n      variant: \"outlined\",\n      multiline: true,\n      rows: 4\n    })), __jsx(Box, {\n      my: 2,\n      ml: 1.4\n    }, __jsx(Button, {\n      color: \"primary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\"\n    }, \"Apply Now\"), isSubmitting && __jsx(LinearProgress, null))));\n  })));\n};\n\nexport default Application;","map":null,"metadata":{},"sourceType":"module"}