{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, Button } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nconst useStyles = makeStyles(() => ({\n  fontWeightBold: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst Headline = (_ref) => {\n  let {\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(SectionHeader, {\n    title: \"Introduction\",\n    subtitle: \"Material-UI & ReactJS based Landing Pages Kit made with Material UI's components, React. It supports create-react-app build-tools (react-scripts), NextJS, GatsbyJS and Typescript to boost your app development process! A professional React Kit that comes with plenty of ready-to-use Material-UI components that will help you to build faster & beautiful fontend pages. Each component is fully customizable, responsive and easy to integrate.\",\n    align: \"left\",\n    titleProps: {\n      className: classes.fontWeightBold,\n      color: 'textPrimary'\n    },\n    subtitleProps: {\n      color: 'textPrimary',\n      variant: 'body1'\n    },\n    ctaGroup: [__jsx(Button, {\n      variant: \"outlined\",\n      component: \"a\",\n      href: \"/\"\n    }, \"Launch a live demo\")],\n    disableGutter: true\n  }));\n};\n\nexport default Headline;","map":null,"metadata":{},"sourceType":"module"}