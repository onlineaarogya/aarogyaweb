{"ast":null,"code":"import _defineProperty from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\organisms\\\\ContactForm\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\nimport validate from 'validate.js';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst schema = {\n  fullname: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 128\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  },\n  message: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    }\n  }\n};\n\nconst ContactForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    name: \"contact-form\",\n    method: \"post\",\n    action: \"/submition.html?contact-form-submit-success=true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Contact Us\")), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"We carefully read and answer to all our emails.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Full Name\",\n    label: \"Full Name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"fullname\",\n    fullWidth: true,\n    helperText: hasError('fullname') ? formState.errors.fullname[0] : null,\n    error: hasError('fullname'),\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.fullname || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"E-mail\",\n    label: \"E-mail *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    error: hasError('email'),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Message\",\n    label: \"Message *\",\n    variant: \"outlined\",\n    name: \"message\",\n    fullWidth: true,\n    helperText: hasError('message') ? formState.errors.message[0] : null,\n    error: hasError('message'),\n    onChange: handleChange,\n    multiline: true,\n    rows: 4,\n    value: formState.values.message || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Fields that are marked with * sign are required.\"), __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n};\n\n_s(ContactForm, \"AmvbDldzF0mW2t/oAZsHnrjMxGc=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/organisms/ContactForm/ContactForm.js"],"names":["React","makeStyles","Typography","Grid","Button","TextField","validate","useStyles","theme","root","width","schema","fullname","presence","allowEmpty","message","length","maximum","email","ContactForm","classes","formState","setFormState","useState","isValid","values","touched","errors","useEffect","handleChange","event","persist","target","name","type","checked","value","hasError","field"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\r\nimport validate from 'validate.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst schema = {\r\n  fullname: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128,\r\n    },\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 300,\r\n    },\r\n  },\r\n  message: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n  },\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        name=\"contact-form\"\r\n        method=\"post\"\r\n        action=\"/submition.html?contact-form-submit-success=true\"\r\n      >\r\n        <input type=\"hidden\" name=\"form-name\" value=\"contact-form\" />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              <strong>Contact Us</strong>\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\r\n              We carefully read and answer to all our emails.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              placeholder=\"Full Name\"\r\n              label=\"Full Name *\"\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              name=\"fullname\"\r\n              fullWidth\r\n              helperText={\r\n                hasError('fullname') ? formState.errors.fullname[0] : null\r\n              }\r\n              error={hasError('fullname')}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              value={formState.values.fullname || ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              placeholder=\"E-mail\"\r\n              label=\"E-mail *\"\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              name=\"email\"\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              error={hasError('email')}\r\n              onChange={handleChange}\r\n              type=\"email\"\r\n              value={formState.values.email || ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              placeholder=\"Message\"\r\n              label=\"Message *\"\r\n              variant=\"outlined\"\r\n              name=\"message\"\r\n              fullWidth\r\n              helperText={\r\n                hasError('message') ? formState.errors.message[0] : null\r\n              }\r\n              error={hasError('message')}\r\n              onChange={handleChange}\r\n              multiline\r\n              rows={4}\r\n              value={formState.values.message || ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n              Fields that are marked with * sign are required.\r\n            </Typography>\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              disabled={!formState.isValid}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}