{"ast":null,"code":"// import React,{Suspense,lazy,useState,useEffect} from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import {\n//   Typography,\n//   Paper,\n//   Box,\n//   Link,\n//   Fab,\n//   Grid,\n//   Button,\n//   CssBaseline,\n//   RadioGroup,\n//   FormLabel,\n//   MenuItem,\n//   FormGroup,\n//   FormControl,\n//   FormControlLabel,\n// } from '@material-ui/core';\n// // Picker\n// import DateFnsUtils from '@date-io/date-fns';\n// import {\n//   MuiPickersUtilsProvider,\n//   TimePicker,\n//   DatePicker,\n// } from '@material-ui/pickers';\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import PublishIcon from '@material-ui/icons/Publish';\n// import MaterialTable, { MTableBodyRow } from \"material-table\";\n// import { forwardRef } from 'react';\n// import AddBox from '@material-ui/icons/AddBox';\n// import ArrowDownward from '@material-ui/icons/ArrowDownward';\n// import Check from '@material-ui/icons/Check';\n// import ChevronLeft from '@material-ui/icons/ChevronLeft';\n// import ChevronRight from '@material-ui/icons/ChevronRight';\n// import Clear from '@material-ui/icons/Clear';\n// import DeleteOutline from '@material-ui/icons/DeleteOutline';\n// import Edit from '@material-ui/icons/Edit';\n// import FilterList from '@material-ui/icons/FilterList';\n// import FirstPage from '@material-ui/icons/FirstPage';\n// import LastPage from '@material-ui/icons/LastPage';\n// import Remove from '@material-ui/icons/Remove';\n// import SaveAlt from '@material-ui/icons/SaveAlt';\n// import Search from '@material-ui/icons/Search';\n// import ViewColumn from '@material-ui/icons/ViewColumn';\n// import axios from 'axios'\n// import Alert from '@material-ui/lab/Alert';\n// import Menu from '@material-ui/core/Menu';\n// import Select from '@material-ui/core/Select';\n// import WhatsAppIcon from '@material-ui/icons/WhatsApp';\n// import VisibilityIcon from '@material-ui/icons/Visibility';\n// import ShareIcon from '@material-ui/icons/Share';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import UploadFile from './components/UploadFile';\n// function MemberDetails() {\n//   const tableIcons = {\n//     Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n//     Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//     // Delete: forwardRef((props, ref) => <VisibilityIcon onClick={clickMe} style={{color:\"#2d91a7\"}} {...props} ref={ref} />),\n//     // View: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n//     DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n//     Edit: forwardRef((props, ref) => <ShareIcon style={{color:\"green\"}} {...props} ref={ref} />),\n//     Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n//     Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n//     FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n//     LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n//     NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n//     PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n//     ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n//     Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n//     SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n//     ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n//     ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n//   };\n//   const api = axios.create({\n//   baseURL: `http://localhost:8000/api`\n// })\n//   function validateEmail(email){\n//     const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n//     return re.test(String(email).toLowerCase());\n//   }\n//   const useStyles = makeStyles((theme) => ({\n//     root: {\n//       '& > *': {\n//         margin: theme.spacing(0),\n//         overflow:\"hidden\",\n//         width:\"960px\",\n//       },\n//     },\n//     tableButton: {\n//         backgroundColor:\"#e0e0e0\",\n//         fontWeight:600,\n//         padding: theme.spacing(1),\n//         \"&:hover\": {\n//           backgroundColor: \"#FF0010\",\n//           color:\"white\"\n//         },\n//         height:\"27px\",\n//         fontSize: '13px'\n//       },\n//       icon:{\n//         fontSize: '13px'\n//       },\n//     headerWidth:\n//     {\n//         width:\"170px\"\n//     }  \n//   }));\n//     const classes = useStyles();\n//     var columns = [\n//       {title: \"id\", field: \"id\", hidden: true},\n//       {title: <h4 class = {classes.headerWidth}>File Name</h4>, field: \"name\",render:(row)=><Box>{row.name}</Box>},\n//       {title: <h4 class = {classes.headerWidth}>File Size</h4>, field: \"fileSize\"},\n//       {title: <h4 class = {classes.headerWidth}>Upload Date</h4>, field: \"uploadDate\"},\n//       {title: <h4 class = {classes.headerWidth}>Uploaded By</h4>, field: \"uploadedBy\"},\n//       {title: <h4 class = {classes.headerWidth}>Verification Status</h4>, field: \"verification\"},\n//     ]\n//     const datas = [\n//       { id: 1, name: 'Shelter', fileSize: '10 MB', uploadDate: '22/03/2021',  uploadedBy: 'Arjun',   verification: 'Pending'},\n//       { id: 1, name: 'Johny', fileSize: '20 MB',  uploadDate: '12/11/2020', uploadedBy: 'Rulap',  verification: 'Processing'},\n//       { id: 1, name: 'Ajay', fileSize: '32 MB', uploadDate: '22/02/1990', uploadedBy: 'Arjun',  verification: 'Completed'},\n//       { id: 1, name: 'Arjun', fileSize: '222 KB', uploadDate: '22/21/2021',  uploadedBy: 'Hemant',  verification: 'Pending'},\n//       { id: 1, name: 'Sethia', fileSize: '120 KB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Pending'},\n//       { id: 1, name: 'Depad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Processing'},\n//       { id: 1, name: 'Shrpad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Pankaj',  verification: 'Processing'},\n//       { id: 1, name: 'Hampesh', fileSize: '10 MB', uploadDate: '22/21/2011', uploadedBy: 'Deband',  verification: 'Pending'},\n//     ];\n//     const [data, setData] = useState([]); //table data\n//     //for error handling\n//     const [iserror, setIserror] = useState(false)\n//     const [errorMessages, setErrorMessages] = useState([])\n//     // For Dropdown\n//     const [values, setValues] = React.useState([\n//       \"Dropdown\",\n//       \"Bam\",\n//       \"Kate\",\n//       \"Nicole\",\n//       \"Aaron\"\n//     ]);\n//     const [selected, setSelected] = useState(\"Dropdown\");\n//     // function handleChange(event) {\n//     //   setSelected(event.target.value);\n//     // }\n//     const [value, setValue] = React.useState(2);\n//     // const handleChanges = (event, newValue) => {\n//     //   setValue(newValue);\n//     // };\n//     // For Dropdwon Button \n//   //   const [anchorEl, setAnchorEl] = React.useState(null);\n//   // const handleClick = (event) => {\n//   //   setAnchorEl(event.currentTarget);\n//   // };\n//   // const handleClose = () => {\n//   //   setAnchorEl(null);\n//   // };\n//   // Record Filter on Select Member\n//   const[filterdata,setFilterdata] = useState(datas);\n//   const[filter,setFilter] = useState(false);\n//   const [name, setName] = React.useState('showall');\n//   const handleChange = (event) => {\n//     setFilter(!filter);\n//   };\n//   useEffect(() => {\n//     setFilterdata(name===\"showall\"?datas:datas.filter(dt=>dt.name===name))\n//   }, [name])\n//   // Code for share menu dropdown\n//    const [anchorEl, setAnchorEl] = React.useState(null);\n//   const handleClick = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n//   const clickMe = () => {\n//     setAnchorEl(<div style={{fontSize:\"12px\"}}>   \n//    <Menu\n//       id=\"simple-menu\"\n//       anchorEl={anchorEl}\n//       keepMounted\n//       open={Boolean(anchorEl)}\n//       onClose={handleClose}\n//       style={{width:\"200px\"}}\n//     >\n//        <List>\n//         <ListItem style={{height:\"40px\"}}>\n//         <WhatsAppIcon className={classes.icon}  style={{color:\"green\"}}/> \n//          <Button\n//          /* Use classes property to inject custom styles */\n//          variant=\"raised\"\n//          color=\"primary\"\n//          > \n//          WhatsApp </Button>\n//        </ListItem>\n//        <ListItem style={{height:\"40px\"}}>\n//        <GetAppIcon className={classes.icon} style={{color:\"#4b4bb2\"}} /> <Button\n//          /* Use classes property to inject custom styles */\n//          classes={{ root: classes.button, label: classes.label }}\n//          variant=\"raised\"\n//          size=\"small\"\n//          color=\"primary\"\n//          > \n//          Download </Button>\n//        </ListItem>\n//        <ListItem  style={{height:\"40px\"}}>\n//        <EmailIcon className={classes.icon} style={{color:\"#957982\"}} /> <Button\n//          /* Use classes property to inject custom styles */\n//          classes={{ root: classes.button, label: classes.label }}\n//          variant=\"raised\"\n//          color=\"primary\"\n//          > \n//         Email </Button>\n//        </ListItem>\n//      </List>\n//     </Menu> \n//     </div>\n//     )\n//   }\n//   // Code for view Row data in details\n//   const[modeldata,setModeldata] = useState(datas);\n//   const showRecord=()=>\n//   {\n//      alert(filterdata.name)\n//   }\n//   // Model box const [open, setOpen] = React.useState(false);\n//   const [modelName,setModelName] = useState({\n//     fname:\"\"\n//   });\n//   const [showData,setShowData] = useState(datas);\n//   // const [getData,setGetData] = useState(datas);\n//   const [opens, setOpens] = React.useState(false);\n//   const handleClickOpens = () => {\n//     setOpens(true);\n//     setShowData(<table id=\"viewTable\" style={{ border:\"1px solid black\",width:\"800px\"}}>\n//     <thead>\n//       <tr>\n//        <th>File Name</th>\n//        <th>File Size</th>\n//        <th>Upload Date</th>\n//        <th>Uploaded By</th>\n//        <th>Verification Status</th>\n//       </tr>\n//      </thead> \n//       <tbody>\n//         {/* {showData.map((na)=><p>{na.name}</p>)} */}\n//         {/* <tr> \n//           <td>{datas}</td>\n//           <td>dddddddddd</td>\n//           <td>{showData.fname}</td>\n//           <td>{showData.fname}</td>\n//           <td>{showData.fname}</td>\n//         </tr>  */}\n//       </tbody>   \n//    </table>)\n//     alert(filterdata)\n//     //alert('s')\n//   };\n//   const handleCloses = () => {\n//     setOpens(false);\n//   };\n//   // Load Image from\n//   const [loadimage, setLoadImage] = useState([]);\n//   useEffect(() => {\n//     loadList();\n//   }, []);\n//   const loadList = async () => {\n//     const result = await axios.get(\"http://localhost:8000/api/list\");\n//     setLoadImage(result.data.reverse());\n//   };\n//   return (\n//     <div style={{ padding:26, }}>\n//       <Grid container>\n//         <Grid item xs={12}>\n//           <div className={classes.root}>\n//           <Paper elevation={4} style={{marginBottom:\"20px\"}}>   \n//             <Box  color=\"black\" fontWeight=\"fontWeightBold\" p={2}><Typography variant=\"h6\" color=\"primary\">Home / Medical Records</Typography></Box>\n//             {loadimage.map((e)=><p><img src={e.img_path} style={{height:\"200px\"}} /></p>)}\n//           </Paper>  \n//            <Paper elevation={0} >\n//              <Grid container  > \n//                <Grid item xs={12} >\n//                   <Box mt={2} mb={4}  display=\"flex\"> \n//                     <UploadFile/>\n//                       <Select\n//                         labelId=\"demo-simple-select-label\"\n//                         id=\"demo-simple-select\"\n//                         value={name}\n//                         onChange={(e)=>setName(e.target.value)}\n//                         style={{marginLeft:\"30px\"}}\n//                       > \n//                        <MenuItem value=\"showall\">Select Member</MenuItem>\n//                         <MenuItem value=\"Johny\">Johny</MenuItem>\n//                         <MenuItem value=\"Deba\">Deba</MenuItem>\n//                         <MenuItem value=\"Ranju\">Ranju</MenuItem>\n//                         <MenuItem value=\"Arjun\">Arjun</MenuItem>\n//                       </Select>\n//                    </Box>\n//                   {/* <MaterialTable mt={0}\n//                     title=\"Member Details\"\n//                     columns={columns}\n//                     data={filterdata}\n//                     icons={tableIcons}\n//                     components={{\n//                       Actions: props => (\n//                         <ShareIcon onClick={clickMe} style={{color:\"green\"}} >\n//                            Cliked\n//                         </ShareIcon>\n//                       )\n//                     }}\n//                     options={{\n//                       headerStyle:{size:'80px'},\n//                       search: false\n//                       }}\n//                     editable={{\n//                       onRowUpdate: (newData, oldData) =>\n//                         new Promise((resolve) => {\n//                             handleRowUpdate(newData, oldData, resolve);\n//                         }),\n//                       onRowDelete: (oldData) =>\n//                         new Promise((resolve) => {\n//                           handleRowDelete(oldData, resolve)\n//                         }),\n//                     }}\n//                   /> */}\n//                   <MaterialTable\n//                     icons={tableIcons}\n//                     title=\"Member Details\"\n//                     options={{\n//                       search:false\n//                     }}\n//                     columns={columns}\n//                     data={filterdata}\n//                     onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\n//                     actions={[\n//                       {\n//                         icon: 'savess',\n//                         tooltip: 'Save Users',\n//                         // onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n//                         onClick: {handleClickOpens}\n//                       }\n//                     ]}\n//                     components={{\n//                       Action: props => (\n//                         <Button\n//                           onClick={handleClickOpens}\n//                           style={{textTransform: 'none'}}\n//                           size=\"small\"\n//                         >\n//                           <VisibilityIcon style={{color: 'green'}}/>\n//                         </Button>\n//                       )\n//                     }}\n//                   />\n//                   {/* <MaterialTable\n//                         title=\"Multiple Actions Preview\"\n//                         columns={columns}\n//                         icons={tableIcons}\n//                         data={filterdata}\n//                         // onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\n//                         actions={[\n//                           {\n//                             icon: 'visibilityIcon',\n//                             tooltip: 'Save User',\n//                             iconProps: { style: { fontSize: \"18px\", color: \"green\" } },\n//                             onClick:(handleClickOpens)\n//                           },\n//                           {\n//                             icon: 'share',\n//                             tooltip: 'Share',\n//                             iconProps: { style: { fontSize: \"18px\", color: \"#1a9f6e\" } },\n//                             onClick: (clickMe) \n//                           }\n//                         ]}\n//                       /> */}\n//                    { anchorEl }\n//                </Grid>  \n//               </Grid> \n//            </Paper>\n//           </div>  \n//         </Grid>   \n//      </Grid> \n//       {/* <Dialog\n//         open={opens}\n//         onClose={handleCloses}\n//         aria-labelledby=\"alert-dialog-title\"\n//         aria-describedby=\"alert-dialog-description\"\n//         maxWidth={'lg'} // 'sm' || 'md' || 'lg' || 'xl'\n//       >\n//         <DialogTitle id=\"alert-dialog-title\">{\"View User Data\"}</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText id=\"alert-dialog-description\">\n//               {showData}\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleCloses} color=\"primary\" autoFocus>\n//             Close\n//           </Button>\n//         </DialogActions>\n//       </Dialog> */}\n//     </div>\n//   );\n// }\n// export default MemberDetails;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/views/AfterLogin/MemberDetails/MemberDetails.js"],"names":[],"mappingssourcesContent":["\r\n// import React,{Suspense,lazy,useState,useEffect} from 'react';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import {\r\n//   Typography,\r\n//   Paper,\r\n//   Box,\r\n//   Link,\r\n//   Fab,\r\n//   Grid,\r\n//   Button,\r\n//   CssBaseline,\r\n//   RadioGroup,\r\n//   FormLabel,\r\n//   MenuItem,\r\n//   FormGroup,\r\n//   FormControl,\r\n//   FormControlLabel,\r\n// } from '@material-ui/core';\r\n// // Picker\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   TimePicker,\r\n//   DatePicker,\r\n// } from '@material-ui/pickers';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\n\r\n// import PublishIcon from '@material-ui/icons/Publish';\r\n// import MaterialTable, { MTableBodyRow } from \"material-table\";\r\n// import { forwardRef } from 'react';\r\n\r\n\r\n// import AddBox from '@material-ui/icons/AddBox';\r\n// import ArrowDownward from '@material-ui/icons/ArrowDownward';\r\n// import Check from '@material-ui/icons/Check';\r\n// import ChevronLeft from '@material-ui/icons/ChevronLeft';\r\n// import ChevronRight from '@material-ui/icons/ChevronRight';\r\n// import Clear from '@material-ui/icons/Clear';\r\n// import DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n// import Edit from '@material-ui/icons/Edit';\r\n// import FilterList from '@material-ui/icons/FilterList';\r\n// import FirstPage from '@material-ui/icons/FirstPage';\r\n// import LastPage from '@material-ui/icons/LastPage';\r\n// import Remove from '@material-ui/icons/Remove';\r\n// import SaveAlt from '@material-ui/icons/SaveAlt';\r\n// import Search from '@material-ui/icons/Search';\r\n// import ViewColumn from '@material-ui/icons/ViewColumn';\r\n// import axios from 'axios'\r\n// import Alert from '@material-ui/lab/Alert';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import Select from '@material-ui/core/Select';\r\n// import WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\n// import VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n// import UploadFile from './components/UploadFile';\r\n\r\n\r\n// function MemberDetails() {\r\n//   const tableIcons = {\r\n\r\n//     Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n//     Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//     // Delete: forwardRef((props, ref) => <VisibilityIcon onClick={clickMe} style={{color:\"#2d91a7\"}} {...props} ref={ref} />),\r\n//     // View: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n//     DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n//     Edit: forwardRef((props, ref) => <ShareIcon style={{color:\"green\"}} {...props} ref={ref} />),\r\n//     Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n//     Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n//     FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n//     LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n//     NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n//     PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n//     ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n//     Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n//     SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n//     ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n//     ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    \r\n//   };\r\n  \r\n//   const api = axios.create({\r\n//   baseURL: `http://localhost:8000/api`\r\n// })\r\n  \r\n//   function validateEmail(email){\r\n//     const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n//     return re.test(String(email).toLowerCase());\r\n//   }\r\n  \r\n  \r\n//   const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       '& > *': {\r\n//         margin: theme.spacing(0),\r\n//         overflow:\"hidden\",\r\n//         width:\"960px\",\r\n        \r\n//       },\r\n\r\n//     },\r\n//     tableButton: {\r\n//         backgroundColor:\"#e0e0e0\",\r\n//         fontWeight:600,\r\n//         padding: theme.spacing(1),\r\n//         \"&:hover\": {\r\n//           backgroundColor: \"#FF0010\",\r\n//           color:\"white\"\r\n//         },\r\n//         height:\"27px\",\r\n//         fontSize: '13px'\r\n        \r\n//       },\r\n//       icon:{\r\n//         fontSize: '13px'\r\n//       },\r\n//     headerWidth:\r\n//     {\r\n//         width:\"170px\"\r\n//     }  \r\n//   }));\r\n  \r\n  \r\n//     const classes = useStyles();\r\n//     var columns = [\r\n//       {title: \"id\", field: \"id\", hidden: true},\r\n//       {title: <h4 class = {classes.headerWidth}>File Name</h4>, field: \"name\",render:(row)=><Box>{row.name}</Box>},\r\n//       {title: <h4 class = {classes.headerWidth}>File Size</h4>, field: \"fileSize\"},\r\n//       {title: <h4 class = {classes.headerWidth}>Upload Date</h4>, field: \"uploadDate\"},\r\n//       {title: <h4 class = {classes.headerWidth}>Uploaded By</h4>, field: \"uploadedBy\"},\r\n  \r\n//       {title: <h4 class = {classes.headerWidth}>Verification Status</h4>, field: \"verification\"},\r\n\r\n\r\n  \r\n//     ]\r\n\r\n    \r\n//     const datas = [\r\n//       { id: 1, name: 'Shelter', fileSize: '10 MB', uploadDate: '22/03/2021',  uploadedBy: 'Arjun',   verification: 'Pending'},\r\n//       { id: 1, name: 'Johny', fileSize: '20 MB',  uploadDate: '12/11/2020', uploadedBy: 'Rulap',  verification: 'Processing'},\r\n//       { id: 1, name: 'Ajay', fileSize: '32 MB', uploadDate: '22/02/1990', uploadedBy: 'Arjun',  verification: 'Completed'},\r\n//       { id: 1, name: 'Arjun', fileSize: '222 KB', uploadDate: '22/21/2021',  uploadedBy: 'Hemant',  verification: 'Pending'},\r\n//       { id: 1, name: 'Sethia', fileSize: '120 KB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Pending'},\r\n//       { id: 1, name: 'Depad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Arjun',  verification: 'Processing'},\r\n//       { id: 1, name: 'Shrpad', fileSize: '10 MB', uploadDate: '22/21/2021', uploadedBy: 'Pankaj',  verification: 'Processing'},\r\n//       { id: 1, name: 'Hampesh', fileSize: '10 MB', uploadDate: '22/21/2011', uploadedBy: 'Deband',  verification: 'Pending'},\r\n   \r\n//     ];\r\n    \r\n\r\n//     const [data, setData] = useState([]); //table data\r\n  \r\n//     //for error handling\r\n//     const [iserror, setIserror] = useState(false)\r\n//     const [errorMessages, setErrorMessages] = useState([])\r\n    \r\n//     // For Dropdown\r\n//     const [values, setValues] = React.useState([\r\n//       \"Dropdown\",\r\n//       \"Bam\",\r\n//       \"Kate\",\r\n//       \"Nicole\",\r\n//       \"Aaron\"\r\n//     ]);\r\n//     const [selected, setSelected] = useState(\"Dropdown\");\r\n  \r\n//     // function handleChange(event) {\r\n//     //   setSelected(event.target.value);\r\n//     // }\r\n  \r\n//     const [value, setValue] = React.useState(2);\r\n  \r\n//     // const handleChanges = (event, newValue) => {\r\n//     //   setValue(newValue);\r\n//     // };\r\n  \r\n\r\n//     // For Dropdwon Button \r\n//   //   const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n//   // const handleClick = (event) => {\r\n//   //   setAnchorEl(event.currentTarget);\r\n//   // };\r\n\r\n//   // const handleClose = () => {\r\n//   //   setAnchorEl(null);\r\n//   // };\r\n\r\n//   // Record Filter on Select Member\r\n//   const[filterdata,setFilterdata] = useState(datas);\r\n//   const[filter,setFilter] = useState(false);\r\n//   const [name, setName] = React.useState('showall');\r\n\r\n//   const handleChange = (event) => {\r\n//     setFilter(!filter);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setFilterdata(name===\"showall\"?datas:datas.filter(dt=>dt.name===name))\r\n//   }, [name])\r\n\r\n//   // Code for share menu dropdown\r\n\r\n//    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n//   const handleClick = (event) => {\r\n//     setAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const clickMe = () => {\r\n   \r\n//     setAnchorEl(<div style={{fontSize:\"12px\"}}>   \r\n//    <Menu\r\n//       id=\"simple-menu\"\r\n//       anchorEl={anchorEl}\r\n//       keepMounted\r\n//       open={Boolean(anchorEl)}\r\n//       onClose={handleClose}\r\n//       style={{width:\"200px\"}}\r\n//     >\r\n//        <List>\r\n//         <ListItem style={{height:\"40px\"}}>\r\n//         <WhatsAppIcon className={classes.icon}  style={{color:\"green\"}}/> \r\n//          <Button\r\n//          /* Use classes property to inject custom styles */\r\n        \r\n//          variant=\"raised\"\r\n//          color=\"primary\"\r\n//          > \r\n//          WhatsApp </Button>\r\n//        </ListItem>\r\n\r\n//        <ListItem style={{height:\"40px\"}}>\r\n//        <GetAppIcon className={classes.icon} style={{color:\"#4b4bb2\"}} /> <Button\r\n//          /* Use classes property to inject custom styles */\r\n//          classes={{ root: classes.button, label: classes.label }}\r\n//          variant=\"raised\"\r\n//          size=\"small\"\r\n//          color=\"primary\"\r\n//          > \r\n//          Download </Button>\r\n//        </ListItem>\r\n\r\n//        <ListItem  style={{height:\"40px\"}}>\r\n//        <EmailIcon className={classes.icon} style={{color:\"#957982\"}} /> <Button\r\n//          /* Use classes property to inject custom styles */\r\n//          classes={{ root: classes.button, label: classes.label }}\r\n//          variant=\"raised\"\r\n//          color=\"primary\"\r\n        \r\n//          > \r\n//         Email </Button>\r\n//        </ListItem>\r\n//      </List>\r\n//     </Menu> \r\n//     </div>\r\n//     )\r\n//   }\r\n\r\n\r\n//   // Code for view Row data in details\r\n\r\n//   const[modeldata,setModeldata] = useState(datas);\r\n\r\n//   const showRecord=()=>\r\n//   {\r\n    \r\n//      alert(filterdata.name)\r\n    \r\n//   }\r\n\r\n//   // Model box const [open, setOpen] = React.useState(false);\r\n//   const [modelName,setModelName] = useState({\r\n//     fname:\"\"\r\n//   });\r\n//   const [showData,setShowData] = useState(datas);\r\n//   // const [getData,setGetData] = useState(datas);\r\n//   const [opens, setOpens] = React.useState(false);\r\n\r\n//   const handleClickOpens = () => {\r\n//     setOpens(true);\r\n//     setShowData(<table id=\"viewTable\" style={{ border:\"1px solid black\",width:\"800px\"}}>\r\n//     <thead>\r\n//       <tr>\r\n//        <th>File Name</th>\r\n//        <th>File Size</th>\r\n//        <th>Upload Date</th>\r\n//        <th>Uploaded By</th>\r\n//        <th>Verification Status</th>\r\n//       </tr>\r\n//      </thead> \r\n//       <tbody>\r\n//         {/* {showData.map((na)=><p>{na.name}</p>)} */}\r\n//         {/* <tr> \r\n//           <td>{datas}</td>\r\n//           <td>dddddddddd</td>\r\n//           <td>{showData.fname}</td>\r\n//           <td>{showData.fname}</td>\r\n//           <td>{showData.fname}</td>\r\n//         </tr>  */}\r\n//       </tbody>   \r\n//    </table>)\r\n//     alert(filterdata)\r\n\r\n//     //alert('s')\r\n//   };\r\n\r\n//   const handleCloses = () => {\r\n//     setOpens(false);\r\n//   };\r\n \r\n\r\n//   // Load Image from\r\n//   const [loadimage, setLoadImage] = useState([]);\r\n//   useEffect(() => {\r\n//     loadList();\r\n//   }, []);\r\n\r\n//   const loadList = async () => {\r\n//     const result = await axios.get(\"http://localhost:8000/api/list\");\r\n//     setLoadImage(result.data.reverse());\r\n//   };\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div style={{ padding:26, }}>\r\n//       <Grid container>\r\n//         <Grid item xs={12}>\r\n//           <div className={classes.root}>\r\n//           <Paper elevation={4} style={{marginBottom:\"20px\"}}>   \r\n//             <Box  color=\"black\" fontWeight=\"fontWeightBold\" p={2}><Typography variant=\"h6\" color=\"primary\">Home / Medical Records</Typography></Box>\r\n//             {loadimage.map((e)=><p><img src={e.img_path} style={{height:\"200px\"}} /></p>)}\r\n//           </Paper>  \r\n          \r\n//            <Paper elevation={0} >\r\n//              <Grid container  > \r\n//                <Grid item xs={12} >\r\n//                   <Box mt={2} mb={4}  display=\"flex\"> \r\n//                     <UploadFile/>\r\n                    \r\n//                       <Select\r\n//                         labelId=\"demo-simple-select-label\"\r\n//                         id=\"demo-simple-select\"\r\n//                         value={name}\r\n//                         onChange={(e)=>setName(e.target.value)}\r\n//                         style={{marginLeft:\"30px\"}}\r\n//                       > \r\n//                        <MenuItem value=\"showall\">Select Member</MenuItem>\r\n//                         <MenuItem value=\"Johny\">Johny</MenuItem>\r\n//                         <MenuItem value=\"Deba\">Deba</MenuItem>\r\n//                         <MenuItem value=\"Ranju\">Ranju</MenuItem>\r\n//                         <MenuItem value=\"Arjun\">Arjun</MenuItem>\r\n                     \r\n//                       </Select>\r\n//                    </Box>\r\n//                   {/* <MaterialTable mt={0}\r\n                     \r\n//                     title=\"Member Details\"\r\n//                     columns={columns}\r\n//                     data={filterdata}\r\n//                     icons={tableIcons}\r\n//                     components={{\r\n//                       Actions: props => (\r\n//                         <ShareIcon onClick={clickMe} style={{color:\"green\"}} >\r\n//                            Cliked\r\n//                         </ShareIcon>\r\n                      \r\n//                       )\r\n//                     }}\r\n//                     options={{\r\n//                       headerStyle:{size:'80px'},\r\n//                       search: false\r\n//                       }}\r\n//                     editable={{\r\n//                       onRowUpdate: (newData, oldData) =>\r\n//                         new Promise((resolve) => {\r\n//                             handleRowUpdate(newData, oldData, resolve);\r\n                            \r\n//                         }),\r\n                    \r\n//                       onRowDelete: (oldData) =>\r\n//                         new Promise((resolve) => {\r\n//                           handleRowDelete(oldData, resolve)\r\n//                         }),\r\n//                     }}\r\n//                   /> */}\r\n\r\n//                   <MaterialTable\r\n//                     icons={tableIcons}\r\n                  \r\n//                     title=\"Member Details\"\r\n//                     options={{\r\n                    \r\n//                       search:false\r\n//                     }}\r\n//                     columns={columns}\r\n//                     data={filterdata}\r\n//                     onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\r\n//                     actions={[\r\n//                       {\r\n//                         icon: 'savess',\r\n//                         tooltip: 'Save Users',\r\n//                         // onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\r\n//                         onClick: {handleClickOpens}\r\n                        \r\n//                       }\r\n                      \r\n//                     ]}\r\n                   \r\n//                     components={{\r\n//                       Action: props => (\r\n//                         <Button\r\n//                           onClick={handleClickOpens}\r\n                        \r\n//                           style={{textTransform: 'none'}}\r\n//                           size=\"small\"\r\n//                         >\r\n//                           <VisibilityIcon style={{color: 'green'}}/>\r\n//                         </Button>\r\n//                       )\r\n//                     }}\r\n//                   />\r\n//                   {/* <MaterialTable\r\n//                         title=\"Multiple Actions Preview\"\r\n//                         columns={columns}\r\n//                         icons={tableIcons}\r\n//                         data={filterdata}\r\n//                         // onRowClick={(handleClickOpens, selectedRow) => setShowData({fname:selectedRow.name,date:selectedRow.uploadDate,upload:selectedRow.uploadedBy,file:selectedRow.fileSize,status:selectedRow.verification})}\r\n//                         actions={[\r\n//                           {\r\n//                             icon: 'visibilityIcon',\r\n//                             tooltip: 'Save User',\r\n//                             iconProps: { style: { fontSize: \"18px\", color: \"green\" } },\r\n                           \r\n//                             onClick:(handleClickOpens)\r\n//                           },\r\n//                           {\r\n//                             icon: 'share',\r\n//                             tooltip: 'Share',\r\n//                             iconProps: { style: { fontSize: \"18px\", color: \"#1a9f6e\" } },\r\n//                             onClick: (clickMe) \r\n//                           }\r\n//                         ]}\r\n//                       /> */}\r\n//                    { anchorEl }\r\n//                </Grid>  \r\n//               </Grid> \r\n//            </Paper>\r\n//           </div>  \r\n//         </Grid>   \r\n//      </Grid> \r\n    \r\n//       {/* <Dialog\r\n//         open={opens}\r\n//         onClose={handleCloses}\r\n//         aria-labelledby=\"alert-dialog-title\"\r\n//         aria-describedby=\"alert-dialog-description\"\r\n//         maxWidth={'lg'} // 'sm' || 'md' || 'lg' || 'xl'\r\n//       >\r\n//         <DialogTitle id=\"alert-dialog-title\">{\"View User Data\"}</DialogTitle>\r\n//         <DialogContent>\r\n//           <DialogContentText id=\"alert-dialog-description\">\r\n            \r\n//               {showData}\r\n//           </DialogContentText>\r\n//         </DialogContent>\r\n//         <DialogActions>\r\n          \r\n//           <Button onClick={handleCloses} color=\"primary\" autoFocus>\r\n//             Close\r\n//           </Button>\r\n//         </DialogActions>\r\n//       </Dialog> */}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default MemberDetails;"]},"metadata":{},"sourceType":"script"}