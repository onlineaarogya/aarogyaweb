{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swiper from 'swiper';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 'auto'\n  },\n  swiperSlide: {\n    width: 'auto'\n  },\n  swiperNav: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    position: 'absolute',\n    width: 88,\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 4,\n    '& .swiper-button-prev, & .swiper-button-next': {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      padding: theme.spacing(2),\n      background: theme.palette.primary.main,\n      borderRadius: '100%',\n      position: 'relative',\n      boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\n      border: `2px solid ${theme.palette.background.paper}`,\n      '&:after': {\n        fontSize: 'initial',\n        color: theme.palette.background.paper\n      }\n    },\n    '& .swiper-button-prev': {\n      left: 0\n    },\n    '& .swiper-button-next': {\n      right: 0\n    }\n  },\n  image: {\n    objectFit: 'cover'\n  }\n}));\n/**\r\n * Component to display the image swiper\r\n *\r\n * @param {Object} props\r\n */\n\nconst SwiperImage = props => {\n  const {\n    items,\n    navigationButtonStyle,\n    imageClassName,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"items\", \"navigationButtonStyle\", \"imageClassName\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    new Swiper('.swiper-container', {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: '.swiper-container .swiper-button-next',\n        prevEl: '.swiper-container .swiper-button-prev'\n      }\n    });\n  });\n  return __jsx(\"div\", _extends({\n    className: clsx('swiper-container', 'swiper-image', classes.root, className)\n  }, rest), __jsx(\"div\", {\n    className: \"swiper-image__wrapper, swiper-wrapper\"\n  }, items.map((item, index) => __jsx(\"div\", {\n    className: clsx('swiper-image__slide', 'swiper-slide', classes.swiperSlide),\n    key: index\n  }, __jsx(Image, {\n    src: item.src,\n    alt: item.alt,\n    srcSet: item.srcSet,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    className: clsx('swiper-image__item', classes.image, imageClassName ? imageClassName : {})\n  })))), __jsx(\"div\", {\n    className: clsx('swiper-image__navigation', classes.swiperNav)\n  }, __jsx(\"div\", {\n    className: clsx('swiper-image__navigation-button', 'swiper-image__navigation-button--prev', 'swiper-button-prev', navigationButtonStyle || {})\n  }), __jsx(\"div\", {\n    className: clsx('swiper-image__navigation-button', 'swiper-image__navigation-button--next', 'swiper-button-next', navigationButtonStyle || {})\n  })));\n};\n\nexport default SwiperImage;","map":null,"metadata":{},"sourceType":"module"}