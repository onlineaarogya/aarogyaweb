{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaAppPro/src/views/DoctorSearch/components/Main/Main.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Divider, Button, List, ListItem, ListItemAvatar, Avatar, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { SectionHeader, DescriptionCta } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nimport SearchBox from '../../../IndexView/components/Hero';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .description-cta__button-group': {\n      flexWrap: 'nowrap'\n    }\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  divider: {\n    margin: theme.spacing(3, 0),\n    [theme.breakpoints.up('md')]: {// margin: theme.spacing(5, 0),\n    }\n  },\n  dividerBottom: {\n    position: 'relative',\n    left: '82px',\n    width: '89%',\n    top: '-17px'\n  },\n  textWhite: {\n    color: 'white'\n  },\n  cardHighlighted: {\n    background: theme.palette.primary.dark\n  },\n  checkBox: {\n    background: 'transparent',\n    borderRadius: 0\n  },\n  list: {\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(4)\n    }\n  },\n  webinarAvatar: {\n    width: 200,\n    height: 200,\n    border: `${theme.spacing(1)}px solid ${theme.palette.background.paper}`,\n    boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(2)\n  },\n  listGrid: {\n    overflow: 'hidden',\n    marginBottom: theme.spacing(3),\n    '&:last-child': {\n      marginBottom: theme.spacing(0)\n    }\n  },\n  filterBox: {\n    border: `${theme.spacing(1)}px solid ${theme.palette.background.paper}`,\n    boxShadow: `0 0px 4px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(1),\n    padding: '15px 15px'\n  }\n}));\n\nconst Main = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // Checkbox Group\n\n  const [flavors, setFlavors] = React.useState({\n    chocolate: true,\n    vanilla: false,\n    strawberry: false\n  });\n  const {\n    chocolate,\n    vanilla,\n    strawberry\n  } = flavors;\n\n  const handleFlavorChange = event => {\n    setFlavors(_objectSpread(_objectSpread({}, flavors), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  }; // code for get current location for landing patient\n  // const a = navigator.geolocation.getCurrentPosition(\n  //   success => {\n  //     console.log(success); // `have the lat and long`\n  //   },\n  //   failure => {\n  //     //`enter code here if failed`\n  //   },\n  // );\n\n\n  useEffect(() => {\n    // if (navigator.geolocation) {\n    //   alert('GeoLocation is Available!');\n    // } else {\n    //   alert('Sorry Not available!');\n    // }\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log('Latitude is :', position.coords.latitude);\n      console.log('Longitude is :', position.coords.longitude);\n    });\n  }, []);\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), __jsx(SearchBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.filterBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Filter Search Results\"), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: chocolate,\n      onChange: handleFlavorChange,\n      name: \"chocolate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }),\n    label: \"Chocolate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: vanilla,\n      onChange: handleFlavorChange,\n      name: \"vanilla\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }),\n    label: \"Vanilla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: strawberry,\n      onChange: handleFlavorChange,\n      name: \"strawberry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }),\n    label: \"Strawberry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, data.map((item, index) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    key: index,\n    item: true,\n    container: true,\n    \"data-aos\": 'fade-up',\n    justify: \"space-between\",\n    spacing: isMd ? 4 : 2,\n    className: classes.listGrid,\n    direction: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, __jsx(SectionHeader // label={item.authorName}\n  , {\n    titleVariant: \"h5\",\n    title: item.authorName,\n    subtitle: \"1st floor , princess park , white house lane , bechar road , valsad, Valsad\",\n    ctaGroup: [__jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: isMd ? 'large' : 'medium',\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, \"Book now\"), __jsx(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: isMd ? 'large' : 'medium',\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, \"Learn More\")],\n    align: isMd ? 'left' : 'center',\n    disableGutter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    sm: 12,\n    md: 4,\n    justify: isMd ? 'flex-end' : 'center',\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, __jsx(Avatar, _extends({}, item.authorPhoto, {\n    alt: item.authorName,\n    className: classes.webinarAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  })))), __jsx(Divider, {\n    className: (classes.divider, classes.dividerBottom),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nMain.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Main;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaAppPro/src/views/DoctorSearch/components/Main/Main.js"],"names":["React","useEffect","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","Divider","Button","List","ListItem","ListItemAvatar","Avatar","FormGroup","FormControlLabel","Checkbox","SectionHeader","DescriptionCta","CardBase","SearchBox","useStyles","theme","root","flexWrap","title","fontWeight","divider","margin","spacing","breakpoints","up","dividerBottom","position","left","width","top","textWhite","color","cardHighlighted","background","palette","primary","dark","checkBox","borderRadius","list","marginBottom","webinarAvatar","height","border","paper","boxShadow","cardShadow","listGrid","overflow","filterBox","padding","Main","props","data","className","rest","classes","isMd","defaultMatches","flavors","setFlavors","useState","chocolate","vanilla","strawberry","handleFlavorChange","event","target","name","checked","navigator","geolocation","getCurrentPosition","console","log","coords","latitude","longitude","map","item","index","authorName","authorPhoto","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  Divider,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { SectionHeader, DescriptionCta } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nimport SearchBox from '../../../IndexView/components/Hero';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .description-cta__button-group': {\n      flexWrap: 'nowrap',\n    },\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n  divider: {\n    margin: theme.spacing(3, 0),\n    [theme.breakpoints.up('md')]: {\n      // margin: theme.spacing(5, 0),\n    },\n  },\n  dividerBottom: {\n    position: 'relative',\n    left: '82px',\n    width: '89%',\n    top: '-17px',\n  },\n  textWhite: {\n    color: 'white',\n  },\n  cardHighlighted: {\n    background: theme.palette.primary.dark,\n  },\n  checkBox: {\n    background: 'transparent',\n    borderRadius: 0,\n  },\n  list: {\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(4),\n    },\n  },\n  webinarAvatar: {\n    width: 200,\n    height: 200,\n    border: `${theme.spacing(1)}px solid ${theme.palette.background.paper}`,\n    boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(2),\n  },\n  listGrid: {\n    overflow: 'hidden',\n    marginBottom: theme.spacing(3),\n    '&:last-child': {\n      marginBottom: theme.spacing(0),\n    },\n  },\n  filterBox: {\n    border: `${theme.spacing(1)}px solid ${theme.palette.background.paper}`,\n    boxShadow: `0 0px 4px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(1),\n    padding: '15px 15px',\n  },\n}));\n\nconst Main = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  // Checkbox Group\n  const [flavors, setFlavors] = React.useState({\n    chocolate: true,\n    vanilla: false,\n    strawberry: false,\n  });\n\n  const { chocolate, vanilla, strawberry } = flavors;\n\n  const handleFlavorChange = event => {\n    setFlavors({ ...flavors, [event.target.name]: event.target.checked });\n  };\n\n  // code for get current location for landing patient\n  // const a = navigator.geolocation.getCurrentPosition(\n  //   success => {\n  //     console.log(success); // `have the lat and long`\n  //   },\n  //   failure => {\n  //     //`enter code here if failed`\n  //   },\n  // );\n\n  useEffect(() => {\n    // if (navigator.geolocation) {\n    //   alert('GeoLocation is Available!');\n    // } else {\n    //   alert('Sorry Not available!');\n    // }\n    navigator.geolocation.getCurrentPosition(function(position) {\n      console.log('Latitude is :', position.coords.latitude);\n      console.log('Longitude is :', position.coords.longitude);\n    });\n  }, []);\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {/* <DescriptionCta\n        title=\"UX /UI Designer\"\n        subtitle=\"San Francisco, CA · Full time\"\n        primaryCta={\n          <Button variant=\"outlined\" color=\"primary\" size=\"large\">\n            Refer a friend\n          </Button>\n        }\n        secondaryCta={\n          <Button variant=\"contained\" color=\"primary\" size=\"large\">\n            Apply now\n          </Button>\n        }\n        align={'left'}\n        titleProps={{\n          variant: 'h3',\n          className: classes.title,\n          color: 'textPrimary',\n        }}\n        subtitleProps={{\n          color: 'textPrimary',\n        }}\n      /> */}\n\n      <SearchBox />\n      {/* <Divider className={classes.divider} /> */}\n      <br></br>\n      <Grid container>\n        <Grid item xs={12} md={3}>\n          <Grid container direction=\"column\">\n            <Grid item xs={12} data-aos=\"fade-up\">\n              {/* <CardBase withShadow>\n          \n                <SectionHeader\n                  title=\"Don't see a job for you?\"\n                  titleVariant=\"h6\"\n                  subtitle=\"Get free online programing tips and resources delivered directly to your inbox.\"\n                  ctaGroup={[\n                    <Button variant=\"contained\" color=\"primary\">\n                      See other vacances\n                    </Button>,\n                  ]}\n                  disableGutter\n                  align=\"left\"\n                  subtitleProps={{\n                    variant: 'body1',\n                  }}\n                />\n              </CardBase> */}\n              {/* checkbox filter */}\n              <div className={classes.filterBox}>\n                <Typography variant=\"h5\" gutterBottom>\n                  Filter Search Results\n                </Typography>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={chocolate}\n                        onChange={handleFlavorChange}\n                        name=\"chocolate\"\n                      />\n                    }\n                    label=\"Chocolate\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={vanilla}\n                        onChange={handleFlavorChange}\n                        name=\"vanilla\"\n                      />\n                    }\n                    label=\"Vanilla\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <Divider className={classes.divider} />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <Divider className={classes.divider} />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={strawberry}\n                        onChange={handleFlavorChange}\n                        name=\"strawberry\"\n                      />\n                    }\n                    label=\"Strawberry\"\n                  />\n                </FormGroup>\n              </div>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <Grid container justify=\"center\">\n            {data.map((item, index) => (\n              <div>\n                <Grid\n                  key={index}\n                  item\n                  container\n                  data-aos={'fade-up'}\n                  justify=\"space-between\"\n                  spacing={isMd ? 4 : 2}\n                  className={classes.listGrid}\n                  direction=\"row-reverse\"\n                >\n                  <Grid item xs={12} sm={12} md={8}>\n                    <SectionHeader\n                      // label={item.authorName}\n                      titleVariant=\"h5\"\n                      title={item.authorName}\n                      subtitle=\"1st floor , princess park , white house lane , bechar road , valsad, Valsad\"\n                      ctaGroup={[\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          size={isMd ? 'large' : 'medium'}\n                          fullWidth\n                        >\n                          Book now\n                        </Button>,\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          size={isMd ? 'large' : 'medium'}\n                          fullWidth\n                        >\n                          Learn More\n                        </Button>,\n                      ]}\n                      align={isMd ? 'left' : 'center'}\n                      disableGutter\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    container\n                    xs={12}\n                    sm={12}\n                    md={4}\n                    justify={isMd ? 'flex-end' : 'center'}\n                    alignItems=\"center\"\n                  >\n                    <Avatar\n                      {...item.authorPhoto}\n                      alt={item.authorName}\n                      className={classes.webinarAvatar}\n                    />\n                  </Grid>\n                </Grid>\n                <Divider className={(classes.divider, classes.dividerBottom)} />\n              </div>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}