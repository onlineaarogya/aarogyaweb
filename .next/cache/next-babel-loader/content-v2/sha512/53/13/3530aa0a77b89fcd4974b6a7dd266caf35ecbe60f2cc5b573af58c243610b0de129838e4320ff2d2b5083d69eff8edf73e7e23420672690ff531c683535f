{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Documentation/examples/DarkModeTogglerExample/DarkModeTogglerExample.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Headline, CodeHighlighter, PropsHighlighter, SectionBox } from '../../components';\nimport { DarkModeToggler } from 'components/atoms';\nconst importCodeString = `\nimport { DarkModeToggler } from 'components/atoms';\n// or\nimport DarkModeToggler from 'components/atoms/DarkModeToggler';\n`;\nconst dataProperties = [{\n  name: 'themeMode',\n  type: 'string',\n  default: '',\n  description: 'The theme mode'\n}, {\n  name: 'className',\n  type: 'string',\n  default: '',\n  description: 'External classes'\n}, {\n  name: 'onClick',\n  type: 'Function',\n  default: '',\n  description: 'Function to handle the click of teh toggler'\n}];\nconst exampleCode = `\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { DarkModeToggler } from 'components/atoms';\n\nexport default function DarkModeTogglerExample() {\n  const [themeMode, setThemeMode] = useState('light');\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" padding={2} border=\"1px solid #ccc\" borderRadius=\"4px\">\n      <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\n    </Box>\n  );\n}\n`;\n\nconst DarkModeTogglerExample = (_ref) => {\n  let rest = Object.assign({}, _ref);\n  const {\n    0: themeMode,\n    1: setThemeMode\n  } = useState('light');\n\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n\n  return __jsx(\"div\", _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), __jsx(SectionBox, {\n    title: \"Description\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Headline, {\n    title: \"DarkModeToggler\",\n    path: \"src/components/atoms/DarkModeToggler/DarkModeToggler.js\",\n    description: \"Component to display the dark mode toggler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(SectionBox, {\n    title: \"Import\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(CodeHighlighter, {\n    code: importCodeString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), __jsx(SectionBox, {\n    title: \"Props & Methods\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(PropsHighlighter, {\n    dataProperties: dataProperties,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(SectionBox, {\n    title: \"Example\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, __jsx(Box, {\n    marginBottom: 2,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 2,\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(DarkModeToggler, {\n    themeMode: themeMode,\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), __jsx(CodeHighlighter, {\n    code: exampleCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DarkModeTogglerExample;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Documentation/examples/DarkModeTogglerExample/DarkModeTogglerExample.js"],"names":["React","useState","Box","Headline","CodeHighlighter","PropsHighlighter","SectionBox","DarkModeToggler","importCodeString","dataProperties","name","type","default","description","exampleCode","DarkModeTogglerExample","rest","themeMode","setThemeMode","handleClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Headline, CodeHighlighter, PropsHighlighter, SectionBox } from '../../components';\nimport { DarkModeToggler } from 'components/atoms';\n\nconst importCodeString = `\nimport { DarkModeToggler } from 'components/atoms';\n// or\nimport DarkModeToggler from 'components/atoms/DarkModeToggler';\n`;\n\nconst dataProperties = [{\n  name: 'themeMode',\n  type: 'string',\n  default: '',\n  description: 'The theme mode',\n}, {\n  name: 'className',\n  type: 'string',\n  default: '',\n  description: 'External classes',\n}, {\n  name: 'onClick',\n  type: 'Function',\n  default: '',\n  description: 'Function to handle the click of teh toggler',\n}];\n\nconst exampleCode = `\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { DarkModeToggler } from 'components/atoms';\n\nexport default function DarkModeTogglerExample() {\n  const [themeMode, setThemeMode] = useState('light');\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" padding={2} border=\"1px solid #ccc\" borderRadius=\"4px\">\n      <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\n    </Box>\n  );\n}\n`;\n\nconst DarkModeTogglerExample = ({ ...rest }) => {\n  const [themeMode, setThemeMode] = useState('light');\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n\n  return (\n    <div {...rest}>\n      <SectionBox title=\"Description\" gutterBottom>\n        <Headline\n          title=\"DarkModeToggler\"\n          path=\"src/components/atoms/DarkModeToggler/DarkModeToggler.js\"\n          description=\"Component to display the dark mode toggler\"\n        />\n      </SectionBox>\n      <SectionBox title=\"Import\" gutterBottom>\n        <CodeHighlighter code={importCodeString} />\n      </SectionBox>\n      <SectionBox title=\"Props & Methods\" gutterBottom>\n        <PropsHighlighter dataProperties={dataProperties} />\n      </SectionBox>\n      <SectionBox title=\"Example\" gutterBottom>\n        <>\n          <Box marginBottom={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" padding={2} border=\"1px solid #ccc\" borderRadius=\"4px\">\n            <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\n          </Box>\n          <CodeHighlighter code={exampleCode} />\n        </>\n      </SectionBox>\n    </div>\n  )\n};\n\nexport default DarkModeTogglerExample;\n"]},"metadata":{},"sourceType":"module"}