{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DescriptionCta, SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n      background: '#2d3748',\n      '& section': {\n        padding: '46px 68px'\n      }\n    },\n    textWhite: {\n      color: 'white'\n    },\n    title: {\n      fontWeight: 'bold'\n    },\n    progress: {\n      color: 'white',\n      width: '80px',\n      height: '80px'\n    },\n    percentage: {\n      width: '100px',\n      height: '100px',\n      lineHeight: '100px',\n      textAlign: 'center',\n      position: 'relative',\n      zIndex: 10,\n      left: '92px',\n      top: '-9px',\n      color: '#fff',\n      fontSize: 'large',\n      fontWeight: 'bold'\n    }\n  };\n});\n\nvar Hero = function Hero(props) {\n  var className = props.className,\n      rest = _objectWithoutProperties(props, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      completed = _React$useState2[0],\n      setCompleted = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timer = setInterval(function () {\n      if (completed < 100) {\n        setCompleted(completed + 90);\n      }\n    }, 1000);\n  }, []);\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(Section, null, __jsx(DescriptionCta, _defineProperty({\n    title: \"Account Settings\",\n    subtitle: \"Change account information and setting\",\n    primaryCta: __jsx(Box, {\n      position: \"relative\",\n      display: \"inline-flex\"\n    }, __jsx(\"div\", {\n      className: classes.percentage\n    }, completed ? completed + '%' : null), __jsx(CircularProgress, {\n      className: classes.progress,\n      variant: \"static\",\n      value: completed,\n      size: 80,\n      thickness: 5\n    })),\n    align: 'left',\n    titleProps: {\n      className: classes.fontWeightBold,\n      color: 'textPrimary'\n    },\n    subtitleProps: {\n      // color: 'textSecondary',\n      className: classes.textWhite\n    }\n  }, \"titleProps\", {\n    className: clsx(classes.title, classes.textWhite),\n    variant: 'h3'\n  }))));\n};\n\nexport default Hero; // export default function CircularStatic() {\n//   const [progress, setProgress] = React.useState(60);\n//   React.useEffect(() => {\n//     if (progress !== 60) {\n//       const timer = setInterval(() => {\n//         setProgress(prevProgress =>\n//           prevProgress >= progress ? 0 : prevProgress + 10,\n//         );\n//       }, 400);\n//     }\n//   }, []);\n//   return <Hero value={progress} />;\n// }","map":null,"metadata":{},"sourceType":"module"}