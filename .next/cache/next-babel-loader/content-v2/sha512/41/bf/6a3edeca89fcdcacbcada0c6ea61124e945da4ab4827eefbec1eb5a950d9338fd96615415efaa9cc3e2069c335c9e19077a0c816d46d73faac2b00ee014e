{"ast":null,"code":"import _slicedToArray from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Box } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paused from './paused';\nimport Completed from './Completed';\nimport Upcoming from './Upcoming';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    tabHeader: {\n      boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%)',\n      backgroundColor: theme.palette.background.white\n    }\n  };\n});\n\nvar Consultations = function Consultations(props) {\n  var className = props.className,\n      rest = _objectWithoutProperties(props, [\"className\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  }); // code for Tabs =======================================\n\n  function TabPanel(props) {\n    var children = props.children,\n        value = props.value,\n        index = props.index,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n    return __jsx(Typography, _extends({\n      component: \"div\",\n      role: \"tabpanel\",\n      hidden: value !== index,\n      id: \"scrollable-auto-tabpanel-\".concat(index),\n      \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index)\n    }, other), __jsx(Box, null, children));\n  }\n\n  function a11yProps(index) {\n    return {\n      id: \"scrollable-auto-tab-\".concat(index),\n      'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n    };\n  } // code for tabs and\n\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  } // End tab ======================================================\n\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"\",\n    className: classes.tabHeader\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"Upcoming \"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"Paused \"\n  }, a11yProps(1))), __jsx(Tab, _extends({\n    label: \"Completed \"\n  }, a11yProps(2))))), __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(Upcoming, null)), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(Paused, null)), __jsx(TabPanel, {\n    value: value,\n    index: 2\n  }, __jsx(Completed, null))));\n};\n\nexport default Consultations;","map":null,"metadata":{},"sourceType":"module"}