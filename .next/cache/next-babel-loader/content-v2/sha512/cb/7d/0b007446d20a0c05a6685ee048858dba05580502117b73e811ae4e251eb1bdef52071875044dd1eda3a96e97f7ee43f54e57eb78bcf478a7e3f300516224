{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Categories/Categories.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Categories = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  console.log('cat1', props.api_data);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"FAQs and Customer Support\",\n    subtitle: \"If you didn\\u2019t find what you needed, these could help!\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, props.api_data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 4,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(CardBase, {\n    liftUp: true,\n    variant: \"outlined\" // style={{ borderTop: `5px solid ${item.field_color[500]}` }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(IconAlternate, {\n      fontIconClass: item.field_icon,\n      color: \"#fff\",\n      shape: \"circle\",\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }),\n    title: item.name,\n    subtitle: item.field_subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), __jsx(Typography, {\n    variant: \"body1\",\n    className: classes.answerCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"8 answers\"))))));\n};\n\n_s(Categories, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Categories;\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Categories/Categories.js"],"names":["React","PropTypes","makeStyles","Grid","Typography","IconAlternate","SectionHeader","DescriptionListIcon","CardBase","useStyles","theme","answerCount","padding","spacing","borderRadius","background","palette","secondary","light","color","fontWeight","marginTop","Categories","props","data","className","rest","classes","console","log","api_data","map","item","index","field_icon","name","field_subtitle","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  console.log('cat1', props.api_data);\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"FAQs and Customer Support\"\n        subtitle=\"If you didnâ€™t find what you needed, these could help!\"\n        align=\"left\"\n      />\n      <Grid container spacing={2}>\n        {props.api_data.map((item, index) => (\n          <Grid item xs={12} sm={12} md={4} key={index}>\n            <CardBase\n              liftUp\n              variant=\"outlined\"\n              // style={{ borderTop: `5px solid ${item.field_color[500]}` }}\n            >\n              <DescriptionListIcon\n                icon={\n                  <IconAlternate\n                    fontIconClass={item.field_icon}\n                    color=\"#fff\"\n                    shape=\"circle\"\n                    size=\"medium\"\n                  />\n                }\n                title={item.name}\n                subtitle={item.field_subtitle}\n              />\n              <Typography variant=\"body1\" className={classes.answerCount}>\n                8 answers\n              </Typography>\n            </CardBase>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}