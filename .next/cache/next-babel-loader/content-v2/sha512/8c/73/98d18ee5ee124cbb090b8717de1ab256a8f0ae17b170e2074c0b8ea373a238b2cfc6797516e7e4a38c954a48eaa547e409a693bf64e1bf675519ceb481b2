{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative'\n  },\n  image: {\n    position: 'absolute',\n    objectFit: 'cover',\n\n    /* support for plugin https://github.com/bfred-it/object-fit-images */\n    fontFamily: 'object-fit: cover;',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: -1,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  }\n}));\n/**\n * Component to display the Parallax backgrounds\n *\n * @param {Object} props\n */\n\nconst Parallax = props => {\n  const {\n    backgroundImage,\n    children,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"backgroundImage\", \"children\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    const jarallaxElems = document.querySelectorAll('.jarallax');\n\n    if (!jarallaxElems || jarallaxElems && jarallaxElems.length === 0) {\n      return;\n    }\n\n    const jarallax = require('jarallax').jarallax;\n\n    jarallax(jarallaxElems, {\n      speed: 0.2\n    });\n  });\n  return __jsx(\"div\", _extends({\n    className: clsx('jarallax', 'parallax', classes.root, className),\n    \"data-jarallax\": true,\n    \"data-speed\": \"0.2\"\n  }, rest), __jsx(\"div\", {\n    className: clsx('jarallax-img', 'parallax__image', classes.image),\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    alt: \"...\"\n  }), children);\n};\n\nexport default Parallax;","map":null,"metadata":{},"sourceType":"module"}