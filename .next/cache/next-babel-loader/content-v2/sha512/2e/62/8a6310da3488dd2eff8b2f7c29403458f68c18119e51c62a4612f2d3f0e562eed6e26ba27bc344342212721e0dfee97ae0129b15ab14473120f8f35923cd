{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/IndexView/components/Products/Products.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { colors, useMediaQuery, Grid, ListItem, ListItemAvatar, Typography, Avatar, Button, NoSsr } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nimport { CardBase, DescriptionListIcon } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  checkBox: {\n    background: 'transparent',\n    borderRadius: 0\n  },\n  cta: {\n    marginTop: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(6)\n    }\n  },\n  featureItems: {\n    width: '100%',\n    height: '100%',\n    background: 'url(https://assets.maccarianagency.com/the-front/illustrations/bg-shapes.svg) no-repeat top center',\n    backgroundSize: 'contain',\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  gridItemPositioned: {\n    marginTop: '25%'\n  },\n  iconCover: {\n    width: 60,\n    height: 60,\n    background: 'url(https://assets.maccarianagency.com/the-front/illustrations/bgicon.svg) no-repeat center center',\n    backgroundSize: 'contain',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#ec3832',\n    fontSize: 35,\n    [theme.breakpoints.up('md')]: {\n      width: 80,\n      height: 80,\n      fontSize: 50\n    }\n  },\n  propsGrid: {\n    height: '100%'\n  }\n}));\n\nconst Products = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const {\n    items,\n    properties\n  } = data;\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.featureItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 1,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, items.slice(0, 2).map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(CardBase, {\n    withShadow: true,\n    liftUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(\"div\", {\n      className: classes.iconCover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, __jsx(NoSsr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }\n    }, __jsx(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }))),\n    title: item.title,\n    subtitle: item.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.gridItemPositioned,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 1,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, items.slice(items.length - 2, items.length).map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, __jsx(CardBase, {\n    withShadow: true,\n    liftUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(\"div\", {\n      className: classes.iconCover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 31\n      }\n    }, __jsx(NoSsr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, __jsx(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 35\n      }\n    }))),\n    title: item.title,\n    subtitle: item.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 27\n    }\n  })))))))))));\n};\n\nProducts.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Products;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/IndexView/components/Products/Products.js"],"names":["React","PropTypes","makeStyles","useTheme","colors","useMediaQuery","Grid","ListItem","ListItemAvatar","Typography","Avatar","Button","NoSsr","SectionHeader","CardBase","DescriptionListIcon","useStyles","theme","checkBox","background","borderRadius","cta","marginTop","spacing","breakpoints","up","featureItems","width","height","backgroundSize","padding","gridItemPositioned","iconCover","display","justifyContent","alignItems","color","fontSize","propsGrid","Products","props","data","className","rest","classes","isMd","defaultMatches","items","properties","slice","map","item","index","icon","title","subtitle","length","propTypes","string","object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,cALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,MARF,EASEC,KATF,QAUO,mBAVP;AAWA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,sBAA9C;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,aADJ;AAERC,IAAAA,YAAY,EAAE;AAFN,GAD2B;AAKrCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADR;AAEH,KAACN,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADiB;AAF3B,GALgC;AAWrCG,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,MAAM,EAAE,MAFI;AAGZT,IAAAA,UAAU,EACR,oGAJU;AAKZU,IAAAA,cAAc,EAAE,SALJ;AAOZ,KAACZ,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BK,MAAAA,OAAO,EAAEb,KAAK,CAACM,OAAN,CAAc,CAAd;AADmB;AAPlB,GAXuB;AAsBrCQ,EAAAA,kBAAkB,EAAE;AAClBT,IAAAA,SAAS,EAAE;AADO,GAtBiB;AAyBrCU,EAAAA,SAAS,EAAE;AACTL,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTT,IAAAA,UAAU,EACR,oGAJO;AAKTU,IAAAA,cAAc,EAAE,SALP;AAMTI,IAAAA,OAAO,EAAE,MANA;AAOTC,IAAAA,cAAc,EAAE,QAPP;AAQTC,IAAAA,UAAU,EAAE,QARH;AASTC,IAAAA,KAAK,EAAE,SATE;AAUTC,IAAAA,QAAQ,EAAE,EAVD;AAWT,KAACpB,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BE,MAAAA,KAAK,EAAE,EADqB;AAE5BC,MAAAA,MAAM,EAAE,EAFoB;AAG5BS,MAAAA,QAAQ,EAAE;AAHkB;AAXrB,GAzB0B;AA0CrCC,EAAAA,SAAS,EAAE;AACTV,IAAAA,MAAM,EAAE;AADC;AA1C0B,CAAL,CAAN,CAA5B;;AA+CA,MAAMW,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAG5B,SAAS,EAAzB;AAEA,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAM0C,IAAI,GAAGxC,aAAa,CAACY,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDqB,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBP,IAA9B;AAEA,SACE;AAAK,IAAA,SAAS,EAAEC;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEE,IAAI,GAAG,CAAH,GAAO,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,gBAAS,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAAClB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEmB,IAAI,GAAG,CAAH,GAAO,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEA,IAAI,GAAG,CAAH,GAAO,CAApC;AAAuC,IAAA,SAAS,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KACrB,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,GAAG,EAAEA,KAAxB;AAA+B,gBAAS,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,MAApB;AAAqB,IAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AACE,IAAA,IAAI,EACF;AAAK,MAAA,SAAS,EAAER,OAAO,CAACZ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEmB,IAAI,CAACE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFJ;AAQE,IAAA,KAAK,EAAEF,IAAI,CAACG,KARd;AASE,IAAA,QAAQ,EAAEH,IAAI,CAACI,QATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADD,CADH,CADF,CADF,EAsBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAEX,OAAO,CAACb,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAEc,IAAI,GAAG,CAAH,GAAO,CAApC;AAAuC,IAAA,SAAS,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CACHE,KADF,CACQF,KAAK,CAACS,MAAN,GAAe,CADvB,EAC0BT,KAAK,CAACS,MADhC,EAEEN,GAFF,CAEM,CAACC,IAAD,EAAOC,KAAP,KACH,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,GAAG,EAAEA,KAAxB;AAA+B,gBAAS,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,MAApB;AAAqB,IAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AACE,IAAA,IAAI,EACF;AAAK,MAAA,SAAS,EAAER,OAAO,CAACZ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEmB,IAAI,CAACE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFJ;AAQE,IAAA,KAAK,EAAEF,IAAI,CAACG,KARd;AASE,IAAA,QAAQ,EAAEH,IAAI,CAACI,QATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAHH,CADH,CADF,CAtBF,CADF,CADF,CADF,CADF,CADF;AAmGD,CA9GD;;AAgHAhB,QAAQ,CAACkB,SAAT,GAAqB;AACnB;AACF;AACA;AACEf,EAAAA,SAAS,EAAEzC,SAAS,CAACyD,MAJF;;AAKnB;AACF;AACA;AACEjB,EAAAA,IAAI,EAAExC,SAAS,CAAC0D,MAAV,CAAiBC;AARJ,CAArB;AAWA,eAAerB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  colors,\n  useMediaQuery,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  Typography,\n  Avatar,\n  Button,\n  NoSsr,\n} from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nimport { CardBase, DescriptionListIcon } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  checkBox: {\n    background: 'transparent',\n    borderRadius: 0,\n  },\n  cta: {\n    marginTop: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(6),\n    },\n  },\n  featureItems: {\n    width: '100%',\n    height: '100%',\n    background:\n      'url(https://assets.maccarianagency.com/the-front/illustrations/bg-shapes.svg) no-repeat top center',\n    backgroundSize: 'contain',\n\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3),\n    },\n  },\n  gridItemPositioned: {\n    marginTop: '25%',\n  },\n  iconCover: {\n    width: 60,\n    height: 60,\n    background:\n      'url(https://assets.maccarianagency.com/the-front/illustrations/bgicon.svg) no-repeat center center',\n    backgroundSize: 'contain',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#ec3832',\n    fontSize: 35,\n    [theme.breakpoints.up('md')]: {\n      width: 80,\n      height: 80,\n      fontSize: 50,\n    },\n  },\n  propsGrid: {\n    height: '100%',\n  },\n}));\n\nconst Products = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  const { items, properties } = data;\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12} md={12} data-aos=\"fade-up\">\n          <div className={classes.featureItems}>\n            <Grid container spacing={isMd ? 4 : 1}>\n              <Grid item xs={6}>\n                <Grid container spacing={isMd ? 4 : 1} direction=\"column\">\n                  {items.slice(0, 2).map((item, index) => (\n                    <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                      <CardBase withShadow liftUp>\n                        <DescriptionListIcon\n                          icon={\n                            <div className={classes.iconCover}>\n                              <NoSsr>\n                                <i className={item.icon} />\n                              </NoSsr>\n                            </div>\n                          }\n                          title={item.title}\n                          subtitle={item.subtitle}\n                        />\n                      </CardBase>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n              <Grid item xs={6} className={classes.gridItemPositioned}>\n                <Grid container spacing={isMd ? 4 : 1} direction=\"column\">\n                  {items\n                    .slice(items.length - 2, items.length)\n                    .map((item, index) => (\n                      <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                        <CardBase withShadow liftUp>\n                          <DescriptionListIcon\n                            icon={\n                              <div className={classes.iconCover}>\n                                <NoSsr>\n                                  <i className={item.icon} />\n                                </NoSsr>\n                              </div>\n                            }\n                            title={item.title}\n                            subtitle={item.subtitle}\n                          />\n                        </CardBase>\n                      </Grid>\n                    ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n        {/* <Grid item xs={12} md={6} data-aos=\"fade-up\">\n          <Grid\n            container\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            direction=\"column\"\n            className={classes.propsGrid}\n          >\n            <SectionHeader\n              label=\"Our Products\"\n              title=\"Data transfer is just a few clicks.\"\n              subtitle=\"If we're no longer the right solution for you, we'll allow you to export and take your data at anytime for any reason.\"\n              align=\"left\"\n              disableGutter\n            />\n            <Grid container spacing={0}>\n              {properties.map((item, index) => (\n                <Grid item xs={12} key={index} data-aos=\"fade-up\">\n                  <ListItem disableGutters>\n                    <ListItemAvatar>\n                      <Avatar\n                        src={`${process.env.NEXT_PUBLIC_BASE_URL}/assets/img/check.png`}\n                        className={classes.checkBox}\n                      />\n                    </ListItemAvatar>\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" noWrap>\n                      {item}\n                    </Typography>\n                  </ListItem>\n                </Grid>\n              ))}\n            </Grid>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.cta}\n              data-aos=\"fade-up\"\n            >\n              Get started\n            </Button>\n          </Grid>\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}