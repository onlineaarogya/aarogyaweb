{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\organisms\\\\CardPromo\\\\CardPromo.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, colors } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  fontWeight700: {\n    fontWeight: 700\n  }\n}));\n/**\r\n * Component to display the promo card\r\n *\r\n * @param {Object} props\r\n */\n\nconst CardPromo = props => {\n  const {\n    titleColor,\n    fontIconClass,\n    color,\n    title,\n    subtitle,\n    description,\n    align,\n    className,\n    iconAlternateProps,\n    titleProps,\n    subtitleProps,\n    descriptionProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"titleColor\", \"fontIconClass\", \"color\", \"title\", \"subtitle\", \"description\", \"align\", \"className\", \"iconAlternateProps\", \"titleProps\", \"subtitleProps\", \"descriptionProps\"]);\n\n  const classes = useStyles();\n  let justifyGrid = 'flex-start';\n\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return __jsx(CardBase, _extends({\n    className: clsx('card__promo', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"card-promo__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: justifyGrid,\n    xs: 12,\n    className: \"card-promo__icon-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(IconAlternate, _extends({\n    fontIconClass: fontIconClass,\n    color: color,\n    size: \"medium\",\n    className: \"card-promo__icon\"\n  }, iconAlternateProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-promo__title-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"h4\",\n    align: align,\n    className: clsx('card-promo__title', classes.fontWeight700),\n    color: titleColor || 'textPrimary'\n  }, titleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), title)), subtitle && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-promo__subtitle-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"h6\",\n    align: align,\n    className: clsx('card-promo__subtitle', classes.fontWeight700)\n  }, subtitleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), subtitle)), description && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"card-promo__description-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    align: align,\n    className: \"card-promo__description\"\n  }, descriptionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), description))));\n};\n\nCardPromo.defaultProps = {\n  align: 'left',\n  iconAlternateProps: {},\n  titleProps: {},\n  subtitleProps: {},\n  descriptionProps: {}\n};\nCardPromo.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Promo title to show inside the card\r\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\r\n   * Promo subtitle to show inside the card\r\n   */\n  subtitle: PropTypes.string,\n\n  /**\r\n   * Promo description to show inside the card\r\n   */\n  description: PropTypes.string,\n\n  /**\r\n   * Promo font icon class name to show inside the card\r\n   */\n  fontIconClass: PropTypes.string,\n\n  /**\r\n   * Promo icon color to show inside the card\r\n   */\n  color: PropTypes.oneOf([colors.red, colors.pink, colors.purple, colors.deepPurple, colors.indigo, colors.blue, colors.lightBlue, colors.cyan, colors.teal, colors.green, colors.lightGreen, colors.lime, colors.yellow, colors.amber, colors.orange, colors.deepOrange, colors.brown, colors.grey, colors.blueGrey]).isRequired,\n\n  /**\r\n   * The content alignment\r\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\r\n   * Title color\r\n   */\n  titleColor: PropTypes.string,\n\n  /**\r\n   * Additional props to pass to the IconAlternate component\r\n   */\n  iconAlternateProps: PropTypes.object,\n\n  /**\r\n   * Additional props to pass to the title Typography component\r\n   */\n  titleProps: PropTypes.object,\n\n  /**\r\n   * Additional props to pass to the subtitle Typography component\r\n   */\n  subtitleProps: PropTypes.object,\n\n  /**\r\n   * Additional props to pass to the desciption Typography component\r\n   */\n  descriptionProps: PropTypes.object\n};\nexport default CardPromo;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/organisms/CardPromo/CardPromo.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Typography","colors","IconAlternate","CardBase","useStyles","theme","root","height","width","fontWeight700","fontWeight","CardPromo","props","titleColor","fontIconClass","color","title","subtitle","description","align","className","iconAlternateProps","titleProps","subtitleProps","descriptionProps","rest","classes","justifyGrid","defaultProps","propTypes","string","isRequired","oneOf","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, colors } from '@material-ui/core';\r\nimport { IconAlternate } from 'components/molecules';\r\nimport { CardBase } from 'components/organisms';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  fontWeight700: {\r\n    fontWeight: 700,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the promo card\r\n *\r\n * @param {Object} props\r\n */\r\nconst CardPromo = props => {\r\n  const {\r\n    titleColor,\r\n    fontIconClass,\r\n    color,\r\n    title,\r\n    subtitle,\r\n    description,\r\n    align,\r\n    className,\r\n    iconAlternateProps,\r\n    titleProps,\r\n    subtitleProps,\r\n    descriptionProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  let justifyGrid = 'flex-start';\r\n  if (align === 'center') {\r\n    justifyGrid = 'center';\r\n  } else if (align === 'right') {\r\n    justifyGrid = 'flex-end';\r\n  }\r\n  return (\r\n    <CardBase\r\n      className={clsx('card__promo', classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid container spacing={2} className=\"card-promo__wrapper\">\r\n        <Grid\r\n          item\r\n          container\r\n          justify={justifyGrid}\r\n          xs={12}\r\n          className=\"card-promo__icon-wrapper\"\r\n        >\r\n          <IconAlternate\r\n            fontIconClass={fontIconClass}\r\n            color={color}\r\n            size=\"medium\"\r\n            className=\"card-promo__icon\"\r\n            {...iconAlternateProps}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className=\"card-promo__title-wrapper\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            align={align}\r\n            className={clsx('card-promo__title', classes.fontWeight700)}\r\n            color={titleColor || 'textPrimary'}\r\n            {...titleProps}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        {subtitle && (\r\n          <Grid item xs={12} className=\"card-promo__subtitle-wrapper\">\r\n            <Typography\r\n              variant=\"h6\"\r\n              align={align}\r\n              className={clsx('card-promo__subtitle', classes.fontWeight700)}\r\n              {...subtitleProps}\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        {description && (\r\n          <Grid item xs={12} className=\"card-promo__description-wrapper\">\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              color=\"textSecondary\"\r\n              align={align}\r\n              className=\"card-promo__description\"\r\n              {...descriptionProps}\r\n            >\r\n              {description}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nCardPromo.defaultProps = {\r\n  align: 'left',\r\n  iconAlternateProps: {},\r\n  titleProps: {},\r\n  subtitleProps: {},\r\n  descriptionProps: {},\r\n};\r\n\r\nCardPromo.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Promo title to show inside the card\r\n   */\r\n  title: PropTypes.string.isRequired,\r\n  /**\r\n   * Promo subtitle to show inside the card\r\n   */\r\n  subtitle: PropTypes.string,\r\n  /**\r\n   * Promo description to show inside the card\r\n   */\r\n  description: PropTypes.string,\r\n  /**\r\n   * Promo font icon class name to show inside the card\r\n   */\r\n  fontIconClass: PropTypes.string,\r\n  /**\r\n   * Promo icon color to show inside the card\r\n   */\r\n  color: PropTypes.oneOf([\r\n    colors.red,\r\n    colors.pink,\r\n    colors.purple,\r\n    colors.deepPurple,\r\n    colors.indigo,\r\n    colors.blue,\r\n    colors.lightBlue,\r\n    colors.cyan,\r\n    colors.teal,\r\n    colors.green,\r\n    colors.lightGreen,\r\n    colors.lime,\r\n    colors.yellow,\r\n    colors.amber,\r\n    colors.orange,\r\n    colors.deepOrange,\r\n    colors.brown,\r\n    colors.grey,\r\n    colors.blueGrey,\r\n  ]).isRequired,\r\n  /**\r\n   * The content alignment\r\n   */\r\n  align: PropTypes.oneOf(['left', 'right', 'center']),\r\n  /**\r\n   * Title color\r\n   */\r\n  titleColor: PropTypes.string,\r\n  /**\r\n   * Additional props to pass to the IconAlternate component\r\n   */\r\n  iconAlternateProps: PropTypes.object,\r\n  /**\r\n   * Additional props to pass to the title Typography component\r\n   */\r\n  titleProps: PropTypes.object,\r\n  /**\r\n   * Additional props to pass to the subtitle Typography component\r\n   */\r\n  subtitleProps: PropTypes.object,\r\n  /**\r\n   * Additional props to pass to the desciption Typography component\r\n   */\r\n  descriptionProps: PropTypes.object,\r\n};\r\n\r\nexport default CardPromo;\r\n"]},"metadata":{},"sourceType":"module"}