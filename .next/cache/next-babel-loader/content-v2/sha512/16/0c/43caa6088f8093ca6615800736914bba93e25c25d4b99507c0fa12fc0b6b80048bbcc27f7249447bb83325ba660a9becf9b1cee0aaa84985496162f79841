{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\views\\\\AfterLogin\\\\UpdateProfile\\\\UpdateProfile.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Typography, Paper, Link, Fab, Grid, Button, CssBaseline, TextField, RadioGroup, FormLabel, MenuItem, FormGroup, FormControl, FormControlLabel } from '@material-ui/core';\n\nclass UpdateProfile extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        padding: 50,\n        width: \"1000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }\n    }, __jsx(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      validationSchema: Yup.object().shape({\n        firstName: Yup.string().required('First Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: fields => {\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => __jsx(Grid, {\n        container: true,\n        alignItems: \"flex-start\",\n        spacing: 17,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(Paper, {\n        style: {\n          padding: 30,\n          width: \"1000\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, __jsx(TextField, {\n        name: \"firstName\",\n        variant: \"outlined\",\n        type: \"text\",\n        className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }\n      }, __jsx(TextField, {\n        name: \"firstName\",\n        variant: \"outlined\",\n        type: \"text\",\n        className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }\n      }, __jsx(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        name: \"email\",\n        type: \"text\",\n        label: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }), __jsx(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }\n      }, __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        style: {\n          backgroundColor: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 26\n        }\n      }, \"Submit\"))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default UpdateProfile; // import React, { lazy, Suspense } from 'react';\n// import { parse } from 'query-string';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Section } from 'components/organisms';\n// import { Loading } from './components';\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     minHeight: '100vh',\n//     height: '100%',\n//     width: '100%',\n//   },\n//   section: {\n//     paddingTop: theme.spacing(2),\n//     [theme.breakpoints.up('md')]: {\n//       paddingTop: theme.spacing(4),\n//     }\n//   },\n// }));\n// const getComponentId = () => parse(window.location.search).component || 'introduction';\n// const renderComponent = () => {\n//   let Component = null;\n//   const componentId = getComponentId();\n// //   switch (componentId) {\n// //     case 'introduction':\n// //       const Introduction = lazy(() => import('./parts/Introduction'));\n// //       Component = <Introduction />;\n// //       break;\n// //     case 'quick-start':\n// //       const QuickStart = lazy(() => import('./parts/QuickStart'));\n// //       Component = <QuickStart />;\n// //       break;\n// //     case 'changelog':\n// //       const Changelog = lazy(() => import('./parts/Changelog'));\n// //       Component = <Changelog />;\n// //       break;\n// //     case 'dark-mode-toggler':\n// //       const DarkModeTogglerExample = lazy(() => import('./examples/DarkModeTogglerExample'));\n// //       Component = <DarkModeTogglerExample />;\n// //       break;\n// //     case 'icon':\n// //       const IconExample = lazy(() => import('./examples/IconExample'));\n// //       Component = <IconExample />;\n// //       break;\n// //     case 'icon-text':\n// //       const IconTextExample = lazy(() => import('./examples/IconTextExample'));\n// //       Component = <IconTextExample />;\n// //       break;\n// //     case 'image':\n// //       const ImageExample = lazy(() => import('./examples/ImageExample'));\n// //       Component = <ImageExample />;\n// //       break;\n// //     case 'learn-more-link':\n// //       const LearnMoreLinkExample = lazy(() => import('./examples/LearnMoreLinkExample'));\n// //       Component = <LearnMoreLinkExample />;\n// //       break;\n// //     case 'count-up-number':\n// //       const CountUpNumberExample = lazy(() => import('./examples/CountUpNumberExample'));\n// //       Component = <CountUpNumberExample />;\n// //       break;\n// //     case 'description-with-cta':\n// //       const DescriptionCtaExample = lazy(() => import('./examples/DescriptionCtaExample'));\n// //       Component = <DescriptionCtaExample />;\n// //       break;\n// //     case 'icon-alternate':\n// //       const IconAlternateExample = lazy(() => import('./examples/IconAlternateExample'));\n// //       Component = <IconAlternateExample />;\n// //       break;\n// //     case 'overlapped-images':\n// //       const OverlapedImagesExample = lazy(() => import('./examples/OverlapedImagesExample'));\n// //       Component = <OverlapedImagesExample />;\n// //       break;\n// //     case 'section-header':\n// //       const SectionHeaderExample = lazy(() => import('./examples/SectionHeaderExample'));\n// //       Component = <SectionHeaderExample />;\n// //       break;\n// //     case 'image-swiper':\n// //       const SwiperImageExample = lazy(() => import('./examples/SwiperImageExample'));\n// //       Component = <SwiperImageExample />;\n// //       break;\n// //     case 'numbers-swiper':\n// //       const SwiperNumberExample = lazy(() => import('./examples/SwiperNumberExample'));\n// //       Component = <SwiperNumberExample />;\n// //       break;\n// //     case 'typed-text':\n// //       const TypedTextExample = lazy(() => import('./examples/TypedTextExample'));\n// //       Component = <TypedTextExample />;\n// //       break;\n// //     case 'accordion':\n// //       const AccordionExample = lazy(() => import('./examples/AccordionExample'));\n// //       Component = <AccordionExample />;\n// //       break;\n// //     case 'card-base':\n// //       const CardBaseExample = lazy(() => import('./examples/CardBaseExample'));\n// //       Component = <CardBaseExample />;\n// //       break;\n// //     case 'card-category':\n// //       const CardCategoryExample = lazy(() => import('./examples/CardCategoryExample'));\n// //       Component = <CardCategoryExample />;\n// //       break;\n// //     case 'card-category-link':\n// //       const CardCategoryLinkExample = lazy(() => import('./examples/CardCategoryLinkExample'));\n// //       Component = <CardCategoryLinkExample />;\n// //       break;\n// //     case 'card-job':\n// //       const CardJobExample = lazy(() => import('./examples/CardJobExample'));\n// //       Component = <CardJobExample />;\n// //       break;\n// //     case 'card-job-company':\n// //       const CardJobCompanyExample = lazy(() => import('./examples/CardJobCompanyExample'));\n// //       Component = <CardJobCompanyExample />;\n// //       break;\n// //     case 'card-job-minimal':\n// //       const CardJobMinimalExample = lazy(() => import('./examples/CardJobMinimalExample'));\n// //       Component = <CardJobMinimalExample />;\n// //       break;\n// //     case 'card-job-tag':\n// //       const CardJobTagExample = lazy(() => import('./examples/CardJobTagExample'));\n// //       Component = <CardJobTagExample />;\n// //       break;\n// //     case 'card-pricing-standard':\n// //       const CardPricingStandardExample = lazy(() => import('./examples/CardPricingStandardExample'));\n// //       Component = <CardPricingStandardExample />;\n// //       break;\n// //     case 'card-product':\n// //       const CardProductExample = lazy(() => import('./examples/CardProductExample'));\n// //       Component = <CardProductExample />;\n// //       break;\n// //     case 'card-promo':\n// //       const CardPromoExample = lazy(() => import('./examples/CardPromoExample'));\n// //       Component = <CardPromoExample />;\n// //       break;\n// //     case 'card-review':\n// //       const CardReviewExample = lazy(() => import('./examples/CardReviewExample'));\n// //       Component = <CardReviewExample />;\n// //       break;\n// //     case 'description-list-icon':\n// //       const DescriptionListIconExample = lazy(() => import('./examples/DescriptionListIconExample'));\n// //       Component = <DescriptionListIconExample />;\n// //       break;\n// //     case 'hero-background':\n// //       const HeroBackgroundExample = lazy(() => import('./examples/HeroBackgroundExample'));\n// //       Component = <HeroBackgroundExample />;\n// //       break;\n// //     case 'hero-shaped':\n// //       const HeroShapedExample = lazy(() => import('./examples/HeroShapedExample'));\n// //       Component = <HeroShapedExample />;\n// //       break;\n// //     case 'hero-side-image':\n// //       const HeroSideImageExample = lazy(() => import('./examples/HeroSideImageExample'));\n// //       Component = <HeroSideImageExample />;\n// //       break;\n// //     case 'hero-simple-background':\n// //       const HeroSimpleBackgroundExample = lazy(() => import('./examples/HeroSimpleBackgroundExample'));\n// //       Component = <HeroSimpleBackgroundExample />;\n// //       break;\n// //     case 'map':\n// //       const MapExample = lazy(() => import('./examples/MapExample'));\n// //       Component = <MapExample />;\n// //       break;\n// //     case 'parallax':\n// //       const ParallaxExample = lazy(() => import('./examples/ParallaxExample'));\n// //       Component = <ParallaxExample />;\n// //       break;\n// //     case 'section':\n// //       const SectionExample = lazy(() => import('./examples/SectionExample'));\n// //       Component = <SectionExample />;\n// //       break;\n// //     case 'section-alternate':\n// //       const SectionAlternateExample = lazy(() => import('./examples/SectionAlternateExample'));\n// //       Component = <SectionAlternateExample />;\n// //       break;\n// //     default:\n// //       Component = null;\n// //       break;\n// //   }\n// //   return Component;\n// };\n// const UpdateProfile = () => {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root}>\n//       <Section className={classes.section}>\n//         <Suspense fallback={<Loading />}>\n//        <h1>hello Account Info hello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Info</h1>\n//         </Suspense>\n//       </Section>\n//     </div>\n//   );\n// };\n// export default UpdateProfile;","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/views/AfterLogin/UpdateProfile/UpdateProfile.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","useFormik","Typography","Paper","Link","Fab","Grid","Button","CssBaseline","TextField","RadioGroup","FormLabel","MenuItem","FormGroup","FormControl","FormControlLabel","UpdateProfile","Component","render","padding","width","firstName","lastName","email","password","confirmPassword","object","shape","string","required","min","oneOf","ref","fields","alert","JSON","stringify","errors","status","touched","backgroundColor"],"mappings":"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":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Link,\r\n    Fab,\r\n    Grid,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    RadioGroup,\r\n    FormLabel,\r\n    MenuItem,\r\n    FormGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n  } from '@material-ui/core';\r\nclass UpdateProfile extends React.Component {\r\n    render() {\r\n        return (\r\n       <div style={{ padding: 50, width:\"1000\" }}>\r\n        <Grid container spacing={18}> \r\n         <Grid item xs={12}  lg={12}>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string()\r\n                        .required('First Name is required'),\r\n                    lastName: Yup.string()\r\n                        .required('Last Name is required'),\r\n                    email: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('Email is required'),\r\n                    password: Yup.string()\r\n                        .min(6, 'Password must be at least 6 characters')\r\n                        .required('Password is required'),\r\n                    confirmPassword: Yup.string()\r\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n                        .required('Confirm Password is required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                <Grid container alignItems=\"flex-start\"  spacing={17}>\r\n                    <Paper style={{ padding: 30,width:\"1000\" }}>\r\n                      <Form>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField name=\"firstName\" variant=\"outlined\"  type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                         </Grid>\r\n\r\n                         <Grid item xs={12} md={6}>\r\n                            <TextField name=\"firstName\" variant=\"outlined\"  type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                         </Grid>\r\n\r\n                         <Grid item xs={12} md={6}> \r\n                            <TextField fullWidth    variant=\"outlined\"  name=\"email\"  type=\"text\" label=\"Email\"/>\r\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </Grid>\r\n\r\n                           \r\n                         <Grid item xs={12} md={3}>\r\n                         <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                style={{backgroundColor:\"red\"}}\r\n                       \r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                         </Grid>\r\n                           \r\n                        {/* <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                        </div> */}\r\n                     </Form>\r\n                     </Paper>\r\n                    </Grid>\r\n                )}\r\n            />\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateProfile;\r\n\r\n// import React, { lazy, Suspense } from 'react';\r\n// import { parse } from 'query-string';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import { Section } from 'components/organisms';\r\n// import { Loading } from './components';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     minHeight: '100vh',\r\n//     height: '100%',\r\n//     width: '100%',\r\n//   },\r\n//   section: {\r\n//     paddingTop: theme.spacing(2),\r\n//     [theme.breakpoints.up('md')]: {\r\n//       paddingTop: theme.spacing(4),\r\n//     }\r\n//   },\r\n// }));\r\n\r\n// const getComponentId = () => parse(window.location.search).component || 'introduction';\r\n\r\n// const renderComponent = () => {\r\n//   let Component = null;\r\n//   const componentId = getComponentId();\r\n\r\n// //   switch (componentId) {\r\n// //     case 'introduction':\r\n// //       const Introduction = lazy(() => import('./parts/Introduction'));\r\n// //       Component = <Introduction />;\r\n// //       break;\r\n// //     case 'quick-start':\r\n// //       const QuickStart = lazy(() => import('./parts/QuickStart'));\r\n// //       Component = <QuickStart />;\r\n// //       break;\r\n// //     case 'changelog':\r\n// //       const Changelog = lazy(() => import('./parts/Changelog'));\r\n// //       Component = <Changelog />;\r\n// //       break;\r\n// //     case 'dark-mode-toggler':\r\n// //       const DarkModeTogglerExample = lazy(() => import('./examples/DarkModeTogglerExample'));\r\n// //       Component = <DarkModeTogglerExample />;\r\n// //       break;\r\n// //     case 'icon':\r\n// //       const IconExample = lazy(() => import('./examples/IconExample'));\r\n// //       Component = <IconExample />;\r\n// //       break;\r\n// //     case 'icon-text':\r\n// //       const IconTextExample = lazy(() => import('./examples/IconTextExample'));\r\n// //       Component = <IconTextExample />;\r\n// //       break;\r\n// //     case 'image':\r\n// //       const ImageExample = lazy(() => import('./examples/ImageExample'));\r\n// //       Component = <ImageExample />;\r\n// //       break;\r\n// //     case 'learn-more-link':\r\n// //       const LearnMoreLinkExample = lazy(() => import('./examples/LearnMoreLinkExample'));\r\n// //       Component = <LearnMoreLinkExample />;\r\n// //       break;\r\n// //     case 'count-up-number':\r\n// //       const CountUpNumberExample = lazy(() => import('./examples/CountUpNumberExample'));\r\n// //       Component = <CountUpNumberExample />;\r\n// //       break;\r\n// //     case 'description-with-cta':\r\n// //       const DescriptionCtaExample = lazy(() => import('./examples/DescriptionCtaExample'));\r\n// //       Component = <DescriptionCtaExample />;\r\n// //       break;\r\n// //     case 'icon-alternate':\r\n// //       const IconAlternateExample = lazy(() => import('./examples/IconAlternateExample'));\r\n// //       Component = <IconAlternateExample />;\r\n// //       break;\r\n// //     case 'overlapped-images':\r\n// //       const OverlapedImagesExample = lazy(() => import('./examples/OverlapedImagesExample'));\r\n// //       Component = <OverlapedImagesExample />;\r\n// //       break;\r\n// //     case 'section-header':\r\n// //       const SectionHeaderExample = lazy(() => import('./examples/SectionHeaderExample'));\r\n// //       Component = <SectionHeaderExample />;\r\n// //       break;\r\n// //     case 'image-swiper':\r\n// //       const SwiperImageExample = lazy(() => import('./examples/SwiperImageExample'));\r\n// //       Component = <SwiperImageExample />;\r\n// //       break;\r\n// //     case 'numbers-swiper':\r\n// //       const SwiperNumberExample = lazy(() => import('./examples/SwiperNumberExample'));\r\n// //       Component = <SwiperNumberExample />;\r\n// //       break;\r\n// //     case 'typed-text':\r\n// //       const TypedTextExample = lazy(() => import('./examples/TypedTextExample'));\r\n// //       Component = <TypedTextExample />;\r\n// //       break;\r\n// //     case 'accordion':\r\n// //       const AccordionExample = lazy(() => import('./examples/AccordionExample'));\r\n// //       Component = <AccordionExample />;\r\n// //       break;\r\n// //     case 'card-base':\r\n// //       const CardBaseExample = lazy(() => import('./examples/CardBaseExample'));\r\n// //       Component = <CardBaseExample />;\r\n// //       break;\r\n// //     case 'card-category':\r\n// //       const CardCategoryExample = lazy(() => import('./examples/CardCategoryExample'));\r\n// //       Component = <CardCategoryExample />;\r\n// //       break;\r\n// //     case 'card-category-link':\r\n// //       const CardCategoryLinkExample = lazy(() => import('./examples/CardCategoryLinkExample'));\r\n// //       Component = <CardCategoryLinkExample />;\r\n// //       break;\r\n// //     case 'card-job':\r\n// //       const CardJobExample = lazy(() => import('./examples/CardJobExample'));\r\n// //       Component = <CardJobExample />;\r\n// //       break;\r\n// //     case 'card-job-company':\r\n// //       const CardJobCompanyExample = lazy(() => import('./examples/CardJobCompanyExample'));\r\n// //       Component = <CardJobCompanyExample />;\r\n// //       break;\r\n// //     case 'card-job-minimal':\r\n// //       const CardJobMinimalExample = lazy(() => import('./examples/CardJobMinimalExample'));\r\n// //       Component = <CardJobMinimalExample />;\r\n// //       break;\r\n// //     case 'card-job-tag':\r\n// //       const CardJobTagExample = lazy(() => import('./examples/CardJobTagExample'));\r\n// //       Component = <CardJobTagExample />;\r\n// //       break;\r\n// //     case 'card-pricing-standard':\r\n// //       const CardPricingStandardExample = lazy(() => import('./examples/CardPricingStandardExample'));\r\n// //       Component = <CardPricingStandardExample />;\r\n// //       break;\r\n// //     case 'card-product':\r\n// //       const CardProductExample = lazy(() => import('./examples/CardProductExample'));\r\n// //       Component = <CardProductExample />;\r\n// //       break;\r\n// //     case 'card-promo':\r\n// //       const CardPromoExample = lazy(() => import('./examples/CardPromoExample'));\r\n// //       Component = <CardPromoExample />;\r\n// //       break;\r\n// //     case 'card-review':\r\n// //       const CardReviewExample = lazy(() => import('./examples/CardReviewExample'));\r\n// //       Component = <CardReviewExample />;\r\n// //       break;\r\n// //     case 'description-list-icon':\r\n// //       const DescriptionListIconExample = lazy(() => import('./examples/DescriptionListIconExample'));\r\n// //       Component = <DescriptionListIconExample />;\r\n// //       break;\r\n// //     case 'hero-background':\r\n// //       const HeroBackgroundExample = lazy(() => import('./examples/HeroBackgroundExample'));\r\n// //       Component = <HeroBackgroundExample />;\r\n// //       break;\r\n// //     case 'hero-shaped':\r\n// //       const HeroShapedExample = lazy(() => import('./examples/HeroShapedExample'));\r\n// //       Component = <HeroShapedExample />;\r\n// //       break;\r\n// //     case 'hero-side-image':\r\n// //       const HeroSideImageExample = lazy(() => import('./examples/HeroSideImageExample'));\r\n// //       Component = <HeroSideImageExample />;\r\n// //       break;\r\n// //     case 'hero-simple-background':\r\n// //       const HeroSimpleBackgroundExample = lazy(() => import('./examples/HeroSimpleBackgroundExample'));\r\n// //       Component = <HeroSimpleBackgroundExample />;\r\n// //       break;\r\n// //     case 'map':\r\n// //       const MapExample = lazy(() => import('./examples/MapExample'));\r\n// //       Component = <MapExample />;\r\n// //       break;\r\n// //     case 'parallax':\r\n// //       const ParallaxExample = lazy(() => import('./examples/ParallaxExample'));\r\n// //       Component = <ParallaxExample />;\r\n// //       break;\r\n// //     case 'section':\r\n// //       const SectionExample = lazy(() => import('./examples/SectionExample'));\r\n// //       Component = <SectionExample />;\r\n// //       break;\r\n// //     case 'section-alternate':\r\n// //       const SectionAlternateExample = lazy(() => import('./examples/SectionAlternateExample'));\r\n// //       Component = <SectionAlternateExample />;\r\n// //       break;\r\n// //     default:\r\n// //       Component = null;\r\n// //       break;\r\n// //   }\r\n\r\n// //   return Component;\r\n// };\r\n\r\n// const UpdateProfile = () => {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Section className={classes.section}>\r\n//         <Suspense fallback={<Loading />}>\r\n//        <h1>hello Account Info hello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Infohello Account Info</h1>\r\n//         </Suspense>\r\n//       </Section>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UpdateProfile;"]},"metadata":{},"sourceType":"module"}