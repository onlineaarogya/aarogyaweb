{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaAppPro/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport getTheme from 'theme';\nimport AOS from 'aos';\nexport var useDarkMode = function useDarkMode() {\n  var _useState = useState('light'),\n      themeMode = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(false),\n      mountedComponent = _useState2[0],\n      setMountedComponent = _useState2[1];\n\n  var setMode = function setMode(mode) {\n    window.localStorage.setItem('themeMode', mode);\n    setTheme(mode);\n  };\n\n  var themeToggler = function themeToggler() {\n    themeMode === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(function () {\n    var localTheme = window.localStorage.getItem('themeMode');\n    localTheme ? setTheme(localTheme) : setMode('light');\n    setMountedComponent(true);\n    AOS.refresh();\n  }, []);\n  useEffect(function () {\n    AOS.refresh();\n  }, [themeMode]);\n  return [themeMode, themeToggler, mountedComponent];\n};\nexport default function WithLayout(_ref) {\n  var Component = _ref.component,\n      Layout = _ref.layout,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"layout\"]);\n\n  // console.log('width', rest.data.data);\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    AOS.init({\n      once: true,\n      delay: 50,\n      duration: 500,\n      easing: 'ease-in-out'\n    });\n  }, []);\n\n  var _useDarkMode = useDarkMode(),\n      _useDarkMode2 = _slicedToArray(_useDarkMode, 3),\n      themeMode = _useDarkMode2[0],\n      themeToggler = _useDarkMode2[1],\n      mountedComponent = _useDarkMode2[2];\n\n  useEffect(function () {\n    AOS.refresh();\n  }, [mountedComponent]);\n  return __jsx(ThemeProvider, {\n    theme: getTheme(themeMode)\n  }, __jsx(CssBaseline, null), __jsx(Paper, {\n    elevation: 0\n  }, __jsx(Layout, {\n    themeMode: themeMode,\n    themeToggler: themeToggler\n  }, __jsx(Component, _extends({\n    data: rest.data,\n    themeMode: themeMode\n  }, rest)))));\n}","map":null,"metadata":{},"sourceType":"module"}