{"ast":null,"code":"import _extends from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\organisms\\\\CardBase\\\\CardBase.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  withShadow: {\n    boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`\n  },\n  noShadow: {\n    boxShadow: 'none'\n  },\n  noBorder: {\n    border: 0\n  },\n  noBg: {\n    background: 'transparent'\n  },\n  liftUp: {\n    transition: 'box-shadow .25s ease,transform .25s ease,-webkit-transform .25s ease',\n    '&:hover': {\n      boxShadow: '0 1.5rem 2.5rem rgba(22,28,45,.1),0 .3rem 0.5rem -.50rem rgba(22,28,45,.05) !important',\n      transform: 'translate3d(0,-5px,0)'\n    }\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(4, 2),\n    '&:last-child': {\n      padding: theme.spacing(4, 2)\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6, 3),\n      '&:last-child': {\n        padding: theme.spacing(6, 3)\n      }\n    }\n  },\n  left: {\n    alignItems: 'flex-start'\n  },\n  right: {\n    alignItems: 'flex-end'\n  },\n  center: {\n    alignItems: 'center'\n  }\n}));\n/**\r\n * Component to display the basic card\r\n *\r\n * @param {Object} props\r\n */\n\nconst CardBase = props => {\n  _s();\n\n  const {\n    withShadow,\n    noShadow,\n    noBorder,\n    noBg,\n    liftUp,\n    children,\n    align,\n    className,\n    cardContentProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"withShadow\", \"noShadow\", \"noBorder\", \"noBg\", \"liftUp\", \"children\", \"align\", \"className\", \"cardContentProps\"]);\n\n  const classes = useStyles();\n  return __jsx(Card, _extends({\n    className: clsx('card-base', classes.root, withShadow ? classes.withShadow : {}, noShadow ? classes.noShadow : {}, noBorder ? classes.noBorder : {}, noBg ? classes.noBg : {}, liftUp ? classes.liftUp : {}, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), __jsx(CardContent, _extends({\n    className: clsx('card-base__content', classes.content, classes[align])\n  }, cardContentProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), children));\n};\n\n_s(CardBase, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardBase;\nCardBase.defaultProps = {\n  align: 'center',\n  cardContentProps: {}\n};\nCardBase.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The children content of the basic card\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * Whether to show custom shadow\r\n   */\n  withShadow: PropTypes.bool,\n\n  /**\r\n   * Whether to render the card without shadow\r\n   */\n  noShadow: PropTypes.bool,\n\n  /**\r\n   * Whether to hide the card borders\r\n   */\n  noBorder: PropTypes.bool,\n\n  /**\r\n   * Whether to show transparent background\r\n   */\n  noBg: PropTypes.bool,\n\n  /**\r\n   * Whether to lift up on hover\r\n   */\n  liftUp: PropTypes.bool,\n\n  /**\r\n   * The content alignment\r\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\r\n   * Additional props to pass to the CardContent component\r\n   */\n  cardContentProps: PropTypes.object\n};\nexport default CardBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBase\");","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/organisms/CardBase/CardBase.js"],"names":["React","clsx","PropTypes","makeStyles","Card","CardContent","useStyles","theme","root","height","width","withShadow","boxShadow","palette","cardShadow","noShadow","noBorder","border","noBg","background","liftUp","transition","transform","content","display","flexDirection","alignItems","padding","spacing","breakpoints","up","left","right","center","CardBase","props","children","align","className","cardContentProps","rest","classes","defaultProps","propTypes","string","node","isRequired","bool","oneOf","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  withShadow: {\r\n    boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\r\n  },\r\n  noShadow: {\r\n    boxShadow: 'none',\r\n  },\r\n  noBorder: {\r\n    border: 0,\r\n  },\r\n  noBg: {\r\n    background: 'transparent',\r\n  },\r\n  liftUp: {\r\n    transition:\r\n      'box-shadow .25s ease,transform .25s ease,-webkit-transform .25s ease',\r\n    '&:hover': {\r\n      boxShadow:\r\n        '0 1.5rem 2.5rem rgba(22,28,45,.1),0 .3rem 0.5rem -.50rem rgba(22,28,45,.05) !important',\r\n      transform: 'translate3d(0,-5px,0)',\r\n    },\r\n  },\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(4, 2),\r\n    '&:last-child': {\r\n      padding: theme.spacing(4, 2),\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6, 3),\r\n      '&:last-child': {\r\n        padding: theme.spacing(6, 3),\r\n      },\r\n    },\r\n  },\r\n  left: {\r\n    alignItems: 'flex-start',\r\n  },\r\n  right: {\r\n    alignItems: 'flex-end',\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the basic card\r\n *\r\n * @param {Object} props\r\n */\r\nconst CardBase = props => {\r\n  const {\r\n    withShadow,\r\n    noShadow,\r\n    noBorder,\r\n    noBg,\r\n    liftUp,\r\n    children,\r\n    align,\r\n    className,\r\n    cardContentProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        'card-base',\r\n        classes.root,\r\n        withShadow ? classes.withShadow : {},\r\n        noShadow ? classes.noShadow : {},\r\n        noBorder ? classes.noBorder : {},\r\n        noBg ? classes.noBg : {},\r\n        liftUp ? classes.liftUp : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      <CardContent\r\n        className={clsx('card-base__content', classes.content, classes[align])}\r\n        {...cardContentProps}\r\n      >\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCardBase.defaultProps = {\r\n  align: 'center',\r\n  cardContentProps: {},\r\n};\r\n\r\nCardBase.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The children content of the basic card\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n  /**\r\n   * Whether to show custom shadow\r\n   */\r\n  withShadow: PropTypes.bool,\r\n  /**\r\n   * Whether to render the card without shadow\r\n   */\r\n  noShadow: PropTypes.bool,\r\n  /**\r\n   * Whether to hide the card borders\r\n   */\r\n  noBorder: PropTypes.bool,\r\n  /**\r\n   * Whether to show transparent background\r\n   */\r\n  noBg: PropTypes.bool,\r\n  /**\r\n   * Whether to lift up on hover\r\n   */\r\n  liftUp: PropTypes.bool,\r\n  /**\r\n   * The content alignment\r\n   */\r\n  align: PropTypes.oneOf(['left', 'right', 'center']),\r\n  /**\r\n   * Additional props to pass to the CardContent component\r\n   */\r\n  cardContentProps: PropTypes.object,\r\n};\r\n\r\nexport default CardBase;\r\n"]},"metadata":{},"sourceType":"module"}