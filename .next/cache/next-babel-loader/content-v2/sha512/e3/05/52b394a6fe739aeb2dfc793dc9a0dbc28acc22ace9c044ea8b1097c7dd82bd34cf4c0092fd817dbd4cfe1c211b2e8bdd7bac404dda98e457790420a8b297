{"ast":null,"code":"import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/ViewFamilyDoctor/ViewFamilyDoctor.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, TextField, FormControlLabel, Switch, Button, Divider } from '@material-ui/core';\nimport MetaTitle from 'components/helper/MetaTitle';\nimport AddIcon from '@material-ui/icons/Add';\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n\nconst ViewFamilyDoctor = props => {\n  _s();\n\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState('');\n\n  const fetchData = async () => {\n    const req = await fetch('https://randomuser.me/api/?gender=male&results=100');\n    const newData = await req.json();\n    return setData(newData.results);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [0]);\n  console.log('useEffect', data);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), __jsx(MetaTitle, {\n    title: \"View Family Doctor\",\n    metaKeyWord: \"\",\n    metaDescription: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.titleCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Family Doctor\"), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), \" Add Family Doctor\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), data ? data.map(user => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, user.email, __jsx(\"img\", {\n      src: user.picture.medium,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }));\n  }) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Current password\"), __jsx(TextField, {\n    placeholder: \"Old password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"fullname\",\n    fullWidth: true,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"New password\"), __jsx(TextField, {\n    placeholder: \"New password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"fullname\",\n    fullWidth: true,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Repeat password\"), __jsx(TextField, {\n    placeholder: \"Repeat password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"fullname\",\n    fullWidth: true,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      color: \"primary\",\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 22\n      }\n    }),\n    label: __jsx(Typography, {\n      variant: \"subtitle1\",\n      color: \"textPrimary\",\n      className: classes.switchTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Public Profile\"),\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 22\n      }\n    }),\n    label: __jsx(Typography, {\n      variant: \"subtitle1\",\n      color: \"textPrimary\",\n      className: classes.switchTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \"Expose your email\"),\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"save\"))));\n};\n\n_s(ViewFamilyDoctor, \"NbO5i7XgujdyP0JnUGyOWLKL8MA=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = ViewFamilyDoctor;\nViewFamilyDoctor.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string\n};\nexport default ViewFamilyDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewFamilyDoctor\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/views/Account/components/ViewFamilyDoctor/ViewFamilyDoctor.js"],"names":["React","useEffect","useState","PropTypes","makeStyles","useTheme","useMediaQuery","Grid","Typography","TextField","FormControlLabel","Switch","Button","Divider","MetaTitle","AddIcon","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","switchTitle","titleCta","display","justifyContent","alignItems","ViewFamilyDoctor","props","className","rest","classes","isMd","breakpoints","up","defaultMatches","data","setData","fetchData","req","fetch","newData","json","results","console","log","map","user","email","picture","medium","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Button,\n  Divider,\n} from '@material-ui/core';\nimport MetaTitle from 'components/helper/MetaTitle';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  switchTitle: {\n    fontWeight: 700,\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst ViewFamilyDoctor = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n  const [data, setData] = useState('');\n  const fetchData = async () => {\n    const req = await fetch(\n      'https://randomuser.me/api/?gender=male&results=100',\n    );\n    const newData = await req.json();\n\n    return setData(newData.results);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [0]);\n  console.log('useEffect', data);\n\n  return (\n    <div className={className} {...rest}>\n      <MetaTitle title=\"View Family Doctor\" metaKeyWord=\"\" metaDescription=\"\" />\n\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <div className={classes.titleCta}>\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Family Doctor\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\">\n              <AddIcon /> Add Family Doctor\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        {data\n          ? data.map(user => {\n              return (\n                <div>\n                  {user.email}\n                  <img src={user.picture.medium} alt=\"\" />\n                </div>\n              );\n            })\n          : null}\n\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Current password\n          </Typography>\n          <TextField\n            placeholder=\"Old password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            New password\n          </Typography>\n          <TextField\n            placeholder=\"New password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Repeat password\n          </Typography>\n          <TextField\n            placeholder=\"Repeat password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Switch color=\"primary\" defaultChecked />}\n            label={\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                className={classes.switchTitle}\n              >\n                Public Profile\n              </Typography>\n            }\n            labelPlacement=\"end\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Switch color=\"primary\" />}\n            label={\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                className={classes.switchTitle}\n              >\n                Expose your email\n              </Typography>\n            }\n            labelPlacement=\"end\"\n          />\n        </Grid>\n        <Grid item container justify=\"flex-start\" xs={12}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nViewFamilyDoctor.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default ViewFamilyDoctor;\n"]},"metadata":{},"sourceType":"module"}