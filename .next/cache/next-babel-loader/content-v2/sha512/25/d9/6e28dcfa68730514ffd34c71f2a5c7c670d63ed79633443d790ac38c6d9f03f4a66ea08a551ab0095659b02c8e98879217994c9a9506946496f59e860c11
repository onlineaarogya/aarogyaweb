{"ast":null,"code":"import _extends from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\onlin\\\\OneDrive\\\\Desktop\\\\site\\\\aarogyaweb\\\\src\\\\components\\\\molecules\\\\IconAlternate\\\\IconAlternate.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, colors } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  extraSmall: {\n    width: 20,\n    height: 20\n  },\n  small: {\n    width: 50,\n    height: 50\n  },\n  medium: {\n    width: 70,\n    height: 70\n  },\n  large: {\n    width: 90,\n    height: 90\n  },\n  circle: {\n    borderRadius: '100%'\n  },\n  square: {\n    borderRadius: theme.spacing(2)\n  }\n}));\n/**\r\n * Component to display the alternate icon\r\n *\r\n * @param {Object} props\r\n */\n\nconst IconAlternate = props => {\n  _s();\n\n  const {\n    iconProps,\n    fontIconClass,\n    size,\n    color,\n    shape,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"iconProps\", \"fontIconClass\", \"size\", \"color\", \"shape\", \"className\"]);\n\n  const classes = useStyles();\n  const useBackgroundStyles = makeStyles(() => ({\n    background: {\n      background: color[50]\n    }\n  }));\n  const backgroundClasses = useBackgroundStyles();\n  return __jsx(Avatar, _extends({\n    className: clsx('icon-alternate', classes[size], classes[shape], backgroundClasses.background, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, _extends({\n    size: size,\n    fontIconClass: fontIconClass,\n    fontIconColor: color[500],\n    className: \"icon-alternate__icon\"\n  }, iconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(IconAlternate, \"EG7NUaIg5pui/ibNdW6B1/+aAto=\", true, function () {\n  return [useStyles];\n});\n\n_c = IconAlternate;\nIconAlternate.defaultProps = {\n  size: 'medium',\n  shape: 'square',\n  iconProps: {}\n};\nIconAlternate.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The classes of the font icon\r\n   */\n  fontIconClass: PropTypes.string.isRequired,\n\n  /**\r\n   * Sizes of the icon\r\n   */\n  size: PropTypes.oneOf(['extraSmall', 'small', 'medium', 'large']),\n\n  /**\r\n   * Color of the icon\r\n   */\n  color: PropTypes.oneOf([colors.red, colors.pink, colors.purple, colors.deepPurple, colors.indigo, colors.blue, colors.lightBlue, colors.cyan, colors.teal, colors.green, colors.lightGreen, colors.lime, colors.yellow, colors.amber, colors.orange, colors.deepOrange, colors.brown, colors.grey, colors.blueGrey]),\n\n  /**\r\n   * The shape of the alternate icon\r\n   */\n  shape: PropTypes.oneOf(['circle', 'square']),\n\n  /**\r\n   * Additional properties to pass to the Icon component\r\n   */\n  iconProps: PropTypes.object\n};\nexport default IconAlternate;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconAlternate\");","map":{"version":3,"sources":["C:/Users/onlin/OneDrive/Desktop/site/aarogyaweb/src/components/molecules/IconAlternate/IconAlternate.js"],"names":["React","clsx","PropTypes","makeStyles","Avatar","colors","Icon","useStyles","theme","extraSmall","width","height","small","medium","large","circle","borderRadius","square","spacing","IconAlternate","props","iconProps","fontIconClass","size","color","shape","className","rest","classes","useBackgroundStyles","background","backgroundClasses","defaultProps","propTypes","string","isRequired","oneOf","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, colors } from '@material-ui/core';\r\nimport { Icon } from 'components/atoms';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  extraSmall: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  small: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  medium: {\r\n    width: 70,\r\n    height: 70,\r\n  },\r\n  large: {\r\n    width: 90,\r\n    height: 90,\r\n  },\r\n  circle: {\r\n    borderRadius: '100%',\r\n  },\r\n  square: {\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the alternate icon\r\n *\r\n * @param {Object} props\r\n */\r\nconst IconAlternate = props => {\r\n  const {\r\n    iconProps,\r\n    fontIconClass,\r\n    size,\r\n    color,\r\n    shape,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const useBackgroundStyles = makeStyles(() => ({\r\n    background: {\r\n      background: color[50],\r\n    },\r\n  }));\r\n  const backgroundClasses = useBackgroundStyles();\r\n\r\n  return (\r\n    <Avatar\r\n      className={clsx(\r\n        'icon-alternate',\r\n        classes[size],\r\n        classes[shape],\r\n        backgroundClasses.background,\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      <Icon\r\n        size={size}\r\n        fontIconClass={fontIconClass}\r\n        fontIconColor={color[500]}\r\n        className=\"icon-alternate__icon\"\r\n        {...iconProps}\r\n      />\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nIconAlternate.defaultProps = {\r\n  size: 'medium',\r\n  shape: 'square',\r\n  iconProps: {},\r\n};\r\n\r\nIconAlternate.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The classes of the font icon\r\n   */\r\n  fontIconClass: PropTypes.string.isRequired,\r\n  /**\r\n   * Sizes of the icon\r\n   */\r\n  size: PropTypes.oneOf(['extraSmall', 'small', 'medium', 'large']),\r\n  /**\r\n   * Color of the icon\r\n   */\r\n  color: PropTypes.oneOf([\r\n    colors.red,\r\n    colors.pink,\r\n    colors.purple,\r\n    colors.deepPurple,\r\n    colors.indigo,\r\n    colors.blue,\r\n    colors.lightBlue,\r\n    colors.cyan,\r\n    colors.teal,\r\n    colors.green,\r\n    colors.lightGreen,\r\n    colors.lime,\r\n    colors.yellow,\r\n    colors.amber,\r\n    colors.orange,\r\n    colors.deepOrange,\r\n    colors.brown,\r\n    colors.grey,\r\n    colors.blueGrey,\r\n  ]),\r\n  /**\r\n   * The shape of the alternate icon\r\n   */\r\n  shape: PropTypes.oneOf(['circle', 'square']),\r\n  /**\r\n   * Additional properties to pass to the Icon component\r\n   */\r\n  iconProps: PropTypes.object,\r\n};\r\n\r\nexport default IconAlternate;\r\n"]},"metadata":{},"sourceType":"module"}