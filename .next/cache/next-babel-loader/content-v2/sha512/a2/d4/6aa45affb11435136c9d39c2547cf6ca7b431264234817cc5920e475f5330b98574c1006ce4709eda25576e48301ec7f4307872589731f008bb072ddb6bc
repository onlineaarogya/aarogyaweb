{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, FormControlLabel, Checkbox, Button, Divider } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\n\nconst Notifications = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.titleCta\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"Notifications\"), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\"\n  }, \"Reset all\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, \"System settings\"), __jsx(Typography, {\n    variant: \"caption\",\n    gutterBottom: true\n  }, \"You will recieve emails in your business email address\"), __jsx(\"div\", null, __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\"\n    }),\n    label: \"E-mail alerts\"\n  })), __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\"\n    }),\n    label: \"Push notifications\"\n  })), __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\"\n    }),\n    label: \"Text messages\"\n  })), __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: false,\n      color: \"primary\"\n    }),\n    label: \"Phone calles\"\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, \"Chat settings\"), __jsx(Typography, {\n    variant: \"caption\",\n    gutterBottom: true\n  }, \"You will recieve emails in your business email address\"), __jsx(\"div\", null, __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: false,\n      color: \"primary\"\n    }),\n    label: \"E-mail alerts\"\n  })), __jsx(\"div\", null, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      color: \"primary\"\n    }),\n    label: \"Push notifications\"\n  })))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    xs: 12\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\"\n  }, \"save\"))));\n};\n\nexport default Notifications;","map":null,"metadata":{},"sourceType":"module"}