{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Pricing/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Button } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport { Icon } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { Section, CardPricingStandard } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  pagePaddingTop: {\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(5)\n    }\n  },\n  sectionContainer: {\n    backgroundColor: theme.palette.primary.dark,\n    paddingBottom: theme.spacing(20),\n    borderRadius: '0 0 100% 0'\n  },\n  textWhite: {\n    color: 'white'\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  toggleContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(0, 2)\n  },\n  toggleButtonGroup: {\n    background: 'transparent'\n  },\n  toggleButton: {\n    background: 'transparent',\n    border: '1px solid white',\n    padding: theme.spacing(1, 5)\n  },\n  toggleButtonActive: {\n    backgroundColor: 'white !important'\n  },\n  toggleTitle: {\n    textTransform: 'capitalize'\n  },\n  toggleTitleActive: {\n    color: theme.palette.primary.main\n  },\n  pricingContainer: {\n    position: 'relative',\n    marginTop: theme.spacing(-20)\n  },\n  sectionNoPaddingTop: {\n    paddingTop: 0\n  },\n  cardPricing: {\n    '& .countup-number__count-wrapper': {\n      textAlign: 'left',\n      marginBottom: 0,\n      fontWeight: 'bold'\n    }\n  }\n}));\n\nconst Main = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const [pricingOption, setPricingOption] = React.useState('annual');\n\n  const handleClick = (event, newPricingOption) => {\n    setPricingOption(newPricingOption);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: classes.sectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Section, {\n    narrow: true,\n    className: classes.pagePaddingTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, null, __jsx(SectionHeader, {\n    title: \"Pricing\",\n    subtitle: \"We are founded by a leading academic and researcher in the field of Industrial Systems Engineering. \",\n    titleProps: {\n      className: clsx(classes.textWhite, classes.fontWeightBold),\n      variant: 'h2'\n    },\n    subtitleProps: {\n      className: classes.textWhite\n    },\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: classes.toggleContainer,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(ToggleButtonGroup, {\n    value: pricingOption,\n    exclusive: true,\n    onChange: handleClick,\n    className: classes.toggleButtonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(ToggleButton, {\n    value: \"annual\",\n    className: clsx(classes.toggleButton, pricingOption === 'annual' ? classes.toggleButtonActive : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: clsx(classes.fontWeightBold, classes.textWhite, classes.toggleTitle, pricingOption === 'annual' ? classes.toggleTitleActive : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Annual\")), __jsx(ToggleButton, {\n    value: \"monthly\",\n    className: clsx(classes.toggleButton, pricingOption === 'monthly' ? classes.toggleButtonActive : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: clsx(classes.fontWeightBold, classes.textWhite, classes.toggleTitle, pricingOption === 'monthly' ? classes.toggleTitleActive : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Monthly\"))))))), __jsx(\"div\", {\n    className: classes.pricingContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(Section, {\n    className: classes.sectionNoPaddingTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    \"data-aos\": \"fade-up\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, __jsx(CardPricingStandard, {\n    variant: \"outlined\",\n    withShadow: item.isHighlighted ? true : false,\n    title: item.title,\n    liftUp: true,\n    subtitle: item.subtitle,\n    priceComponent: __jsx(Typography, {\n      variant: \"h3\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, \"$\", pricingOption === 'annual' ? item.annual : item.monthly),\n    features: item.features,\n    featureCheckComponent: __jsx(Icon, {\n      fontIconClass: \"far fa-check-circle\",\n      fontIconColor: theme.palette.primary.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    }),\n    cta: __jsx(Button, {\n      color: \"primary\",\n      variant: item.isHighlighted ? 'contained' : 'outlined',\n      fullWidth: true,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \"Subscribe now\"),\n    disclaimer: item.disclaimer,\n    className: classes.cardPricing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\n_s(Main, \"JKoqsnbIBdo/dzyF6TWHkaJPvo4=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Main;\nMain.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/Pricing/components/Main/Main.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","Button","ToggleButtonGroup","ToggleButton","Icon","SectionHeader","Section","CardPricingStandard","useStyles","theme","pagePaddingTop","paddingTop","spacing","breakpoints","up","sectionContainer","backgroundColor","palette","primary","dark","paddingBottom","borderRadius","textWhite","color","fontWeightBold","fontWeight","toggleContainer","display","justifyContent","margin","toggleButtonGroup","background","toggleButton","border","padding","toggleButtonActive","toggleTitle","textTransform","toggleTitleActive","main","pricingContainer","position","marginTop","sectionNoPaddingTop","cardPricing","textAlign","marginBottom","Main","props","data","className","rest","classes","isMd","defaultMatches","pricingOption","setPricingOption","useState","handleClick","event","newPricingOption","variant","map","item","index","isHighlighted","title","subtitle","annual","monthly","features","disclaimer","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, Button } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport { Icon } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { Section, CardPricingStandard } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  pagePaddingTop: {\n    paddingTop: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      paddingTop: theme.spacing(5),\n    },\n  },\n  sectionContainer: {\n    backgroundColor: theme.palette.primary.dark,\n    paddingBottom: theme.spacing(20),\n    borderRadius: '0 0 100% 0',\n  },\n  textWhite: {\n    color: 'white',\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  toggleContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(0, 2),\n  },\n  toggleButtonGroup: {\n    background: 'transparent',\n  },\n  toggleButton: {\n    background: 'transparent',\n    border: '1px solid white',\n    padding: theme.spacing(1, 5),\n  },\n  toggleButtonActive: {\n    backgroundColor: 'white !important',\n  },\n  toggleTitle: {\n    textTransform: 'capitalize',\n  },\n  toggleTitleActive: {\n    color: theme.palette.primary.main,\n  },\n  pricingContainer: {\n    position: 'relative',\n    marginTop: theme.spacing(-20),\n  },\n  sectionNoPaddingTop: {\n    paddingTop: 0,\n  },\n  cardPricing: {\n    '& .countup-number__count-wrapper': {\n      textAlign: 'left',\n      marginBottom: 0,\n      fontWeight: 'bold',\n    },\n  },\n}));\n\nconst Main = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  const [pricingOption, setPricingOption] = React.useState('annual');\n\n  const handleClick = (event, newPricingOption) => {\n    setPricingOption(newPricingOption);\n  };\n\n  return (\n    <div className={className} {...rest}>\n      <div className={classes.sectionContainer}>\n        <Section narrow className={classes.pagePaddingTop}>\n          <>\n          <SectionHeader\n            title=\"Pricing\"\n            subtitle=\"We are founded by a leading academic and researcher in the field of Industrial Systems Engineering. \"\n            titleProps={{\n              className: clsx(classes.textWhite, classes.fontWeightBold),\n              variant: 'h2',\n            }}\n            subtitleProps={{\n              className: classes.textWhite,\n            }}\n            data-aos=\"fade-up\"\n          />\n          <div className={classes.toggleContainer} data-aos=\"fade-up\">\n            <ToggleButtonGroup\n              value={pricingOption}\n              exclusive\n              onChange={handleClick}\n              className={classes.toggleButtonGroup}\n            >\n              <ToggleButton\n                value=\"annual\"\n                className={clsx(\n                  classes.toggleButton,\n                  pricingOption === 'annual' ? classes.toggleButtonActive : {},\n                )}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  className={clsx(\n                    classes.fontWeightBold,\n                    classes.textWhite,\n                    classes.toggleTitle,\n                    pricingOption === 'annual' ? classes.toggleTitleActive : {},\n                  )}\n                >\n                  Annual\n                </Typography>\n              </ToggleButton>\n              <ToggleButton\n                value=\"monthly\"\n                className={clsx(\n                  classes.toggleButton,\n                  pricingOption === 'monthly' ? classes.toggleButtonActive : {},\n                )}\n              >\n                <Typography\n                  variant=\"subtitle1\"\n                  className={clsx(\n                    classes.fontWeightBold,\n                    classes.textWhite,\n                    classes.toggleTitle,\n                    pricingOption === 'monthly'\n                      ? classes.toggleTitleActive\n                      : {},\n                  )}\n                >\n                  Monthly\n                </Typography>\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </div>\n          </>\n        </Section>\n      </div>\n      <div className={classes.pricingContainer}>\n        <div>\n          <Section className={classes.sectionNoPaddingTop}>\n            <Grid container spacing={isMd ? 4 : 2}>\n              {data.map((item, index) => (\n                <Grid item xs={12} md={4} data-aos=\"fade-up\" key={index}>\n                  <CardPricingStandard\n                    variant=\"outlined\"\n                    withShadow={item.isHighlighted ? true : false}\n                    title={item.title}\n                    liftUp\n                    subtitle={item.subtitle}\n                    priceComponent={\n                      <Typography variant=\"h3\" color=\"textPrimary\">\n                        $\n                        {pricingOption === 'annual'\n                          ? item.annual\n                          : item.monthly}\n                      </Typography>\n                    }\n                    features={item.features}\n                    featureCheckComponent={\n                      <Icon\n                        fontIconClass=\"far fa-check-circle\"\n                        fontIconColor={theme.palette.primary.main}\n                      />\n                    }\n                    cta={\n                      <Button\n                        color=\"primary\"\n                        variant={item.isHighlighted ? 'contained' : 'outlined'}\n                        fullWidth\n                        size=\"large\"\n                      >\n                        Subscribe now\n                      </Button>\n                    }\n                    disclaimer={item.disclaimer}\n                    className={classes.cardPricing}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}