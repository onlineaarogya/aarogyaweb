{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/aarogyaApp/src/components/molecules/SwiperImage/SwiperImage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swiper from 'swiper';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 'auto'\n  },\n  swiperSlide: {\n    width: 'auto'\n  },\n  swiperNav: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    position: 'absolute',\n    width: 88,\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 4,\n    '& .swiper-button-prev, & .swiper-button-next': {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      padding: theme.spacing(2),\n      background: theme.palette.primary.main,\n      borderRadius: '100%',\n      position: 'relative',\n      boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\n      border: `2px solid ${theme.palette.background.paper}`,\n      '&:after': {\n        fontSize: 'initial',\n        color: theme.palette.background.paper\n      }\n    },\n    '& .swiper-button-prev': {\n      left: 0\n    },\n    '& .swiper-button-next': {\n      right: 0\n    }\n  },\n  image: {\n    objectFit: 'cover'\n  }\n}));\n/**\n * Component to display the image swiper\n *\n * @param {Object} props\n */\n\nconst SwiperImage = props => {\n  const {\n    items,\n    navigationButtonStyle,\n    imageClassName,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"items\", \"navigationButtonStyle\", \"imageClassName\", \"className\"]);\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    new Swiper('.swiper-container', {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: '.swiper-container .swiper-button-next',\n        prevEl: '.swiper-container .swiper-button-prev'\n      }\n    });\n  });\n  return __jsx(\"div\", _extends({\n    className: clsx('swiper-container', 'swiper-image', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"swiper-image__wrapper, swiper-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, items.map((item, index) => __jsx(\"div\", {\n    className: clsx('swiper-image__slide', 'swiper-slide', classes.swiperSlide),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    src: item.src,\n    alt: item.alt,\n    srcSet: item.srcSet,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    className: clsx('swiper-image__item', classes.image, imageClassName ? imageClassName : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: clsx('swiper-image__navigation', classes.swiperNav),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: clsx('swiper-image__navigation-button', 'swiper-image__navigation-button--prev', 'swiper-button-prev', navigationButtonStyle || {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: clsx('swiper-image__navigation-button', 'swiper-image__navigation-button--next', 'swiper-button-next', navigationButtonStyle || {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n};\n\nSwiperImage.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * External classes for the images\n   */\n  imageClassName: PropTypes.string,\n\n  /**\n   * The array of images object which should consist of src, alt and srcset attributes\n   */\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /**\n   * Styles classes of the navigation button\n   */\n  navigationButtonStyle: PropTypes.string\n};\nexport default SwiperImage;","map":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/src/components/molecules/SwiperImage/SwiperImage.js"],"names":["React","clsx","PropTypes","makeStyles","Swiper","Image","useStyles","theme","root","width","height","zIndex","swiperSlide","swiperNav","display","justifyContent","position","bottom","spacing","right","padding","background","palette","primary","main","borderRadius","boxShadow","cardShadow","border","paper","fontSize","color","left","image","objectFit","SwiperImage","props","items","navigationButtonStyle","imageClassName","className","rest","classes","useEffect","slidesPerView","spaceBetween","navigation","nextEl","prevEl","map","item","index","src","alt","srcSet","propTypes","string","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swiper from 'swiper';\n\nimport { Image } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zIndex: 'auto',\n  },\n  swiperSlide: {\n    width: 'auto',\n  },\n  swiperNav: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    position: 'absolute',\n    width: 88,\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 4,\n    '& .swiper-button-prev, & .swiper-button-next': {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      padding: theme.spacing(2),\n      background: theme.palette.primary.main,\n      borderRadius: '100%',\n      position: 'relative',\n      boxShadow: `0 2px 10px 0 ${theme.palette.cardShadow}`,\n      border: `2px solid ${theme.palette.background.paper}`,\n      '&:after': {\n        fontSize: 'initial',\n        color: theme.palette.background.paper,\n      },\n    },\n    '& .swiper-button-prev': {\n      left: 0,\n    },\n    '& .swiper-button-next': {\n      right: 0,\n    },\n  },\n  image: {\n    objectFit: 'cover',\n  },\n}));\n\n/**\n * Component to display the image swiper\n *\n * @param {Object} props\n */\nconst SwiperImage = props => {\n  const {\n    items,\n    navigationButtonStyle,\n    imageClassName,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    new Swiper('.swiper-container', {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: '.swiper-container .swiper-button-next',\n        prevEl: '.swiper-container .swiper-button-prev',\n      },\n    });\n  });\n\n  return (\n    <div\n      className={clsx(\n        'swiper-container',\n        'swiper-image',\n        classes.root,\n        className,\n      )}\n      {...rest}\n    >\n      <div className=\"swiper-image__wrapper, swiper-wrapper\">\n        {items.map((item, index) => (\n          <div\n            className={clsx(\n              'swiper-image__slide',\n              'swiper-slide',\n              classes.swiperSlide,\n            )}\n            key={index}\n          >\n            <Image\n              src={item.src}\n              alt={item.alt}\n              srcSet={item.srcSet}\n              lazyProps={{ width: '100%', height: '100%' }}\n              className={clsx(\n                'swiper-image__item',\n                classes.image,\n                imageClassName ? imageClassName : {},\n              )}\n            />\n          </div>\n        ))}\n      </div>\n      <div className={clsx('swiper-image__navigation', classes.swiperNav)}>\n        <div\n          className={clsx(\n            'swiper-image__navigation-button',\n            'swiper-image__navigation-button--prev',\n            'swiper-button-prev',\n            navigationButtonStyle || {},\n          )}\n        />\n        <div\n          className={clsx(\n            'swiper-image__navigation-button',\n            'swiper-image__navigation-button--next',\n            'swiper-button-next',\n            navigationButtonStyle || {},\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nSwiperImage.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * External classes for the images\n   */\n  imageClassName: PropTypes.string,\n  /**\n   * The array of images object which should consist of src, alt and srcset attributes\n   */\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Styles classes of the navigation button\n   */\n  navigationButtonStyle: PropTypes.string,\n};\n\nexport default SwiperImage;\n"]},"metadata":{},"sourceType":"module"}