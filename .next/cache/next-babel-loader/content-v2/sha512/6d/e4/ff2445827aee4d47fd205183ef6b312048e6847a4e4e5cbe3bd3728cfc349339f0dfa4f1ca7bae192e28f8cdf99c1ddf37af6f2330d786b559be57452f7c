{"ast":null,"code":"var _jsxFileName = \"/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Categories/Categories.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\nimport { colors } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2)\n  },\n  pointer: {\n    cursor: 'pointer'\n  }\n}));\n\nconst Categories = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  console.log('cat1', props.data);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: \"FAQs and Customer Support\",\n    subtitle: \"If you didn\\u2019t find what you needed, these could help!\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, props.api_data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 4,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(CardBase, {\n    liftUp: true,\n    variant: \"outlined\",\n    style: {\n      borderTop: `5px solid ${item.field_color[500]}`\n    },\n    className: classes.pointer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(DescriptionListIcon, {\n    icon: __jsx(IconAlternate, {\n      fontIconClass: item.field_icon,\n      color: colors.red,\n      shape: \"circle\",\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }),\n    title: item.name,\n    subtitle: item.field_subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), __jsx(Typography, {\n    variant: \"body1\",\n    className: classes.answerCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"View All \", __jsx(\"i\", {\n    class: \"fas fa-arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }\n  })))))));\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/Users/praveensingh/Sites/theFront-v3.2.2/nextjs/src/views/HelpCenter/components/Categories/Categories.js"],"names":["React","PropTypes","makeStyles","Grid","Typography","IconAlternate","SectionHeader","DescriptionListIcon","CardBase","colors","ArrowRightAltIcon","useStyles","theme","answerCount","padding","spacing","borderRadius","background","palette","error","main","color","fontWeight","marginTop","pointer","cursor","Categories","props","data","className","rest","classes","console","log","api_data","map","item","index","borderTop","field_color","field_icon","red","name","field_subtitle","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\nimport { colors } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.error.main,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2),\n  },\n  pointer: {\n    cursor: 'pointer',\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  console.log('cat1', props.data);\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"FAQs and Customer Support\"\n        subtitle=\"If you didnâ€™t find what you needed, these could help!\"\n        align=\"left\"\n      />\n      <Grid container spacing={2}>\n        {props.api_data.map((item, index) => (\n          <Grid item xs={12} sm={12} md={4} key={index}>\n            <CardBase\n              liftUp\n              variant=\"outlined\"\n              style={{ borderTop: `5px solid ${item.field_color[500]}` }}\n              className={classes.pointer}\n            >\n              <DescriptionListIcon\n                icon={\n                  <IconAlternate\n                    fontIconClass={item.field_icon}\n                    color={colors.red}\n                    shape=\"circle\"\n                    size=\"medium\"\n                  />\n                }\n                title={item.name}\n                subtitle={item.field_subtitle}\n              />\n              <Typography variant=\"body1\" className={classes.answerCount}>\n                View All <i class=\"fas fa-arrow-right\"></i>\n              </Typography>\n            </CardBase>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}