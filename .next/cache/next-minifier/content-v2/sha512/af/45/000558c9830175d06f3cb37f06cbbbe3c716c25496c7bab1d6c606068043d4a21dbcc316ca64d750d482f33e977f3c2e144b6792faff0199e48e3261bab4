{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[48],{Bm6Z:function(e,t,o){\"use strict\";o.r(t),o.d(t,\"default\",(function(){return m}));var n=o(\"HALo\"),r=o(\"q1tI\"),a=o.n(r),i=o(\"hlFM\"),d=o(\"VPqE\"),l=o(\"kbOB\"),s=a.a.createElement,c=[{name:\"themeMode\",type:\"string\",default:\"\",description:\"The theme mode\"},{name:\"className\",type:\"string\",default:\"\",description:\"External classes\"},{name:\"onClick\",type:\"Function\",default:\"\",description:\"Function to handle the click of teh toggler\"}],m=function(e){var t=Object(n.a)({},e),o=Object(r.useState)(\"light\"),m=o[0],p=o[1];return s(\"div\",t,s(d.e,{title:\"Description\",gutterBottom:!0},s(d.b,{title:\"DarkModeToggler\",path:\"src/components/atoms/DarkModeToggler/DarkModeToggler.js\",description:\"Component to display the dark mode toggler\"})),s(d.e,{title:\"Import\",gutterBottom:!0},s(d.a,{code:\"\\nimport { DarkModeToggler } from 'components/atoms';\\n// or\\nimport DarkModeToggler from 'components/atoms/DarkModeToggler';\\n\"})),s(d.e,{title:\"Props & Methods\",gutterBottom:!0},s(d.d,{dataProperties:c})),s(d.e,{title:\"Example\",gutterBottom:!0},s(a.a.Fragment,null,s(i.a,{marginBottom:2,display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",padding:2,border:\"1px solid #ccc\",borderRadius:\"4px\"},s(l.a,{themeMode:m,onClick:function(){return p(\"light\"===m?\"dark\":\"light\")}})),s(d.a,{code:\"\\nimport React, { useState } from 'react';\\nimport { Box } from '@material-ui/core';\\nimport { DarkModeToggler } from 'components/atoms';\\n\\nexport default function DarkModeTogglerExample() {\\n  const [themeMode, setThemeMode] = useState('light');\\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\\n\\n  return (\\n    <Box display=\\\"flex\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\" padding={2} border=\\\"1px solid #ccc\\\" borderRadius=\\\"4px\\\">\\n      <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\\n    </Box>\\n  );\\n}\\n\"}))))}}}]);","map":{"version":3,"sources":["static/chunks/48.b4d10727fba326644978.js"],"names":["window","push","Bm6Z","module","__webpack_exports__","__webpack_require__","r","d","examples_DarkModeTogglerExample_DarkModeTogglerExample","esm_extends","react","react_default","n","Box","components","atoms","__jsx","a","createElement","dataProperties","name","type","default","description","_ref","rest","Object","_useState","themeMode","setThemeMode","title","gutterBottom","path","code","Fragment","marginBottom","display","justifyContent","alignItems","padding","border","borderRadius","onClick"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aAEAA,EAAoBC,EAAEF,GAGtBC,EAAoBE,EAAEH,EAAqB,WAAW,WAAa,OAAsBI,KAGzF,IAAIC,EAAcJ,EAAoB,QAGlCK,EAAQL,EAAoB,QAC5BM,EAA6BN,EAAoBO,EAAEF,GAGnDG,EAAMR,EAAoB,QAG1BS,EAAaT,EAAoB,QAGjCU,EAAQV,EAAoB,QAI5BW,EAAQL,EAAcM,EAAEC,cAMxBC,EAAiB,CAAC,CACpBC,KAAM,YACNC,KAAM,SACNC,QAAS,GACTC,YAAa,kBACZ,CACDH,KAAM,YACNC,KAAM,SACNC,QAAS,GACTC,YAAa,oBACZ,CACDH,KAAM,UACNC,KAAM,WACNC,QAAS,GACTC,YAAa,gDAqDkBf,EAjDmB,SAAgCgB,GAClF,IAAIC,EAAOC,OAAOjB,EAA6B,EAApCiB,CAAuC,GAAIF,GAElDG,EAAYD,OAAOhB,EAAgB,SAAvBgB,CAA0B,SACtCE,EAAYD,EAAU,GACtBE,EAAeF,EAAU,GAM7B,OAAOX,EAAM,MAAOS,EAAMT,EAAMF,EAA+B,EAAG,CAChEgB,MAAO,cACPC,cAAc,GACbf,EAAMF,EAA6B,EAAG,CACvCgB,MAAO,kBACPE,KAAM,0DACNT,YAAa,gDACVP,EAAMF,EAA+B,EAAG,CAC3CgB,MAAO,SACPC,cAAc,GACbf,EAAMF,EAAoC,EAAG,CAC9CmB,KAzCmB,qIA0ChBjB,EAAMF,EAA+B,EAAG,CAC3CgB,MAAO,kBACPC,cAAc,GACbf,EAAMF,EAAqC,EAAG,CAC/CK,eAAgBA,KACbH,EAAMF,EAA+B,EAAG,CAC3CgB,MAAO,UACPC,cAAc,GACbf,EAAML,EAAcM,EAAEiB,SAAU,KAAMlB,EAAMH,EAAqB,EAAG,CACrEsB,aAAc,EACdC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,EACTC,OAAQ,iBACRC,aAAc,OACbzB,EAAMD,EAA+B,EAAG,CACzCa,UAAWA,EACXc,QAAS,WACP,OAlCKb,EAA2B,UAAdD,EAAwB,OAAS,aAoClDZ,EAAMF,EAAoC,EAAG,CAChDmB,KA/Cc"},"name":"static/chunks/48.b4d10727fba326644978.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[48],{\n\n/***/ \"Bm6Z\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"default\", function() { return /* reexport */ examples_DarkModeTogglerExample_DarkModeTogglerExample; });\n\n// EXTERNAL MODULE: ./node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(\"HALo\");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Box/Box.js + 14 modules\nvar Box = __webpack_require__(\"hlFM\");\n\n// EXTERNAL MODULE: ./src/views/Documentation/components/index.js + 17 modules\nvar components = __webpack_require__(\"VPqE\");\n\n// EXTERNAL MODULE: ./src/components/atoms/index.js + 12 modules\nvar atoms = __webpack_require__(\"kbOB\");\n\n// CONCATENATED MODULE: ./src/views/Documentation/examples/DarkModeTogglerExample/DarkModeTogglerExample.js\n\nvar __jsx = react_default.a.createElement;\n\n\n\n\nvar importCodeString = \"\\nimport { DarkModeToggler } from 'components/atoms';\\n// or\\nimport DarkModeToggler from 'components/atoms/DarkModeToggler';\\n\";\nvar dataProperties = [{\n  name: 'themeMode',\n  type: 'string',\n  default: '',\n  description: 'The theme mode'\n}, {\n  name: 'className',\n  type: 'string',\n  default: '',\n  description: 'External classes'\n}, {\n  name: 'onClick',\n  type: 'Function',\n  default: '',\n  description: 'Function to handle the click of teh toggler'\n}];\nvar exampleCode = \"\\nimport React, { useState } from 'react';\\nimport { Box } from '@material-ui/core';\\nimport { DarkModeToggler } from 'components/atoms';\\n\\nexport default function DarkModeTogglerExample() {\\n  const [themeMode, setThemeMode] = useState('light');\\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\\n\\n  return (\\n    <Box display=\\\"flex\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\" padding={2} border=\\\"1px solid #ccc\\\" borderRadius=\\\"4px\\\">\\n      <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\\n    </Box>\\n  );\\n}\\n\";\n\nvar DarkModeTogglerExample_DarkModeTogglerExample = function DarkModeTogglerExample(_ref) {\n  var rest = Object(esm_extends[\"a\" /* default */])({}, _ref);\n\n  var _useState = Object(react[\"useState\"])('light'),\n      themeMode = _useState[0],\n      setThemeMode = _useState[1];\n\n  var handleClick = function handleClick() {\n    return setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n  };\n\n  return __jsx(\"div\", rest, __jsx(components[\"e\" /* SectionBox */], {\n    title: \"Description\",\n    gutterBottom: true\n  }, __jsx(components[\"b\" /* Headline */], {\n    title: \"DarkModeToggler\",\n    path: \"src/components/atoms/DarkModeToggler/DarkModeToggler.js\",\n    description: \"Component to display the dark mode toggler\"\n  })), __jsx(components[\"e\" /* SectionBox */], {\n    title: \"Import\",\n    gutterBottom: true\n  }, __jsx(components[\"a\" /* CodeHighlighter */], {\n    code: importCodeString\n  })), __jsx(components[\"e\" /* SectionBox */], {\n    title: \"Props & Methods\",\n    gutterBottom: true\n  }, __jsx(components[\"d\" /* PropsHighlighter */], {\n    dataProperties: dataProperties\n  })), __jsx(components[\"e\" /* SectionBox */], {\n    title: \"Example\",\n    gutterBottom: true\n  }, __jsx(react_default.a.Fragment, null, __jsx(Box[\"a\" /* default */], {\n    marginBottom: 2,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 2,\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\"\n  }, __jsx(atoms[\"a\" /* DarkModeToggler */], {\n    themeMode: themeMode,\n    onClick: function onClick() {\n      return handleClick();\n    }\n  })), __jsx(components[\"a\" /* CodeHighlighter */], {\n    code: exampleCode\n  }))));\n};\n\n/* harmony default export */ var examples_DarkModeTogglerExample_DarkModeTogglerExample = (DarkModeTogglerExample_DarkModeTogglerExample);\n// CONCATENATED MODULE: ./src/views/Documentation/examples/DarkModeTogglerExample/index.js\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/praveensingh/Sites/aarogyaApp/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--4!/Users/praveensingh/Sites/aarogyaApp/src/views/Documentation/examples/DarkModeTogglerExample/DarkModeTogglerExample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8H;AAC9H,YAAY,eAAK;AACuB;AACA;AACmD;AACxC;AACnD,kCAAkC,kBAAkB,yBAAyB,wEAAwE;AACrJ;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD,oCAAoC,WAAW,cAAc,UAAU,MAAM,0BAA0B,UAAU,kBAAkB,yBAAyB,sDAAsD,wDAAwD,qFAAqF,0GAA0G,EAAE,oFAAoF,UAAU,UAAU,oBAAoB,qBAAqB,GAAG;;AAE/lB,IAAI,6CAAsB;AAC1B,aAAa,sCAAQ,GAAG;;AAExB,kBAAkB,yBAAQ;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,gCAAU;AAC5C;AACA;AACA,GAAG,QAAQ,8BAAQ;AACnB;AACA;AACA;AACA,GAAG,UAAU,gCAAU;AACvB;AACA;AACA,GAAG,QAAQ,qCAAe;AAC1B;AACA,GAAG,UAAU,gCAAU;AACvB;AACA;AACA,GAAG,QAAQ,sCAAgB;AAC3B;AACA,GAAG,UAAU,gCAAU;AACvB;AACA;AACA,GAAG,QAAQ,eAAK,uBAAuB,sBAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,gCAAe;AAC1B;AACA;AACA;AACA;AACA,GAAG,UAAU,qCAAe;AAC5B;AACA,GAAG;AACH;;AAEe,wIAAsB,E","file":"x","sourcesContent":["import _extends from \"/Users/praveensingh/Sites/aarogyaApp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Headline, CodeHighlighter, PropsHighlighter, SectionBox } from '../../components';\nimport { DarkModeToggler } from 'components/atoms';\nvar importCodeString = \"\\nimport { DarkModeToggler } from 'components/atoms';\\n// or\\nimport DarkModeToggler from 'components/atoms/DarkModeToggler';\\n\";\nvar dataProperties = [{\n  name: 'themeMode',\n  type: 'string',\n  default: '',\n  description: 'The theme mode'\n}, {\n  name: 'className',\n  type: 'string',\n  default: '',\n  description: 'External classes'\n}, {\n  name: 'onClick',\n  type: 'Function',\n  default: '',\n  description: 'Function to handle the click of teh toggler'\n}];\nvar exampleCode = \"\\nimport React, { useState } from 'react';\\nimport { Box } from '@material-ui/core';\\nimport { DarkModeToggler } from 'components/atoms';\\n\\nexport default function DarkModeTogglerExample() {\\n  const [themeMode, setThemeMode] = useState('light');\\n  const handleClick = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\\n\\n  return (\\n    <Box display=\\\"flex\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\" padding={2} border=\\\"1px solid #ccc\\\" borderRadius=\\\"4px\\\">\\n      <DarkModeToggler themeMode={themeMode} onClick={() => handleClick()} />\\n    </Box>\\n  );\\n}\\n\";\n\nvar DarkModeTogglerExample = function DarkModeTogglerExample(_ref) {\n  var rest = _extends({}, _ref);\n\n  var _useState = useState('light'),\n      themeMode = _useState[0],\n      setThemeMode = _useState[1];\n\n  var handleClick = function handleClick() {\n    return setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n  };\n\n  return __jsx(\"div\", rest, __jsx(SectionBox, {\n    title: \"Description\",\n    gutterBottom: true\n  }, __jsx(Headline, {\n    title: \"DarkModeToggler\",\n    path: \"src/components/atoms/DarkModeToggler/DarkModeToggler.js\",\n    description: \"Component to display the dark mode toggler\"\n  })), __jsx(SectionBox, {\n    title: \"Import\",\n    gutterBottom: true\n  }, __jsx(CodeHighlighter, {\n    code: importCodeString\n  })), __jsx(SectionBox, {\n    title: \"Props & Methods\",\n    gutterBottom: true\n  }, __jsx(PropsHighlighter, {\n    dataProperties: dataProperties\n  })), __jsx(SectionBox, {\n    title: \"Example\",\n    gutterBottom: true\n  }, __jsx(React.Fragment, null, __jsx(Box, {\n    marginBottom: 2,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 2,\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\"\n  }, __jsx(DarkModeToggler, {\n    themeMode: themeMode,\n    onClick: function onClick() {\n      return handleClick();\n    }\n  })), __jsx(CodeHighlighter, {\n    code: exampleCode\n  }))));\n};\n\nexport default DarkModeTogglerExample;"]}}